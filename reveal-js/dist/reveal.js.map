{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/reader.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isReaderMode() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrinting() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tconst query = this.jumpInput.value.trim( '' );\n\t\tlet indices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\n\t\t// If no valid index was found and the input query is a\n\t\t// string, fall back on a simple search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isReaderMode() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The reader mode lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class Reader {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the reader mode. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the reader mode is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-reader' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'reader-page-content reader-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.reader-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'reader-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// Copy the presentation-wide background to each page\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'reader-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'reader-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t}\n\n\t/**\n\t * Deactivates the reader mode and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-reader' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the reader mode is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'reader-progress';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'reader-progress-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'reader-progress-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.onScroll();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our reader pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst readerLayout = config.readerLayout;\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = readerLayout === 'full' ? viewportHeight : compactHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tconst scrollTriggerHeight = viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.readerScrollSnap === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\t\t`y ${config.readerScrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.reader-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.reader-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.reader-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.reader-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.reader-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'reader-snap-point';\n\t\t\t\ttriggerStick.style.height = scrollTriggerHeight + 'px';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( readerLayout === 'compact' && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.globalRange[0].toFixed(2)}-${t.globalRange[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-reader-scroll-bar', config.readerScrollbar );\n\n\t\tif( config.readerScrollbar && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst slideRange = trigger.range[1] - trigger.range[0];\n\t\t\tconst slideRangeSegmentSize = 1 / trigger.page.scrollTriggers.length;\n\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [i * slideRangeSegmentSize, ( i + 1 ) * slideRangeSegmentSize];\n\t\t\t\tscrollTrigger.globalRange = [\n\t\t\t\t\trangeStart + scrollTrigger.range[0] * slideRange,\n\t\t\t\t\trangeStart + scrollTrigger.range[1] * slideRange\n\t\t\t\t];\n\t\t\t} );\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Triggers for each fragment group\n\t\t\t\t...fragmentGroups.map( ( fragments, i ) => ({\n\t\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.reader-progress-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( trigger => {\n\n\t\t\t\tconst { page } = trigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'reader-progress-slide';\n\t\t\t\tpage.progressBarSlide.style.top = trigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\tconst scrollBarSlideHeight = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight;\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\ttrigger.page.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'reader-progress-trigger';\n\t\t\t\t\ttriggerElement.style.top = trigger.range[0] * scrollBarSlideHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * scrollBarSlideHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().readerScrollbar === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the reader mode isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded conten\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\t\t\tbackgroundElement.classList.add( 'present' );\n\n\t\t\tthis.Reveal.setCurrentReaderPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.reader-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tpage.slideElement.classList.remove( 'present' );\n\t\t\tpage.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the reader moder. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.globalRange[0] && scrollProgressMid <= trigger.globalRange[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isReaderMode() &&\n\t\t\t!this.Reveal.isPrinting()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isReaderMode() &&\n\t\t\t!this.Reveal.isPrinting()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - reader:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in reader mode\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\treaderLayout: 'full',\n\n\t// Control how scroll snapping works in reader mode.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in reader mode.\n\treaderScrollSnap: 'mandatory',\n\n\t// Enables and configure the reader mode scroll bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\treaderScrollbar: 'auto',\n\n\t// Responsively activate the reader mode when we reach the specified\n\t// width (in pixels)\n\treaderActivationWidth: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Reader from './controllers/reader.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.6.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\treader = new Reader( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/reader mode if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateReaderView = config.view === 'reader';\n\n\t\tif( activatePrintView || activateReaderView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprint.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => print.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treader.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = reader.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in reader mode\n\t\t\t\tif( scale === 1 || reader.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Responsively turn on the reader mode if there is an activation\n\t\t\t\t// width configured. Ignore if we're configured to always be in\n\t\t\t\t// reader mode.\n\t\t\t\tif( typeof config.readerActivationWidth === 'number' && config.view !== 'reader' ) {\n\t\t\t\t\tif( size.presentationWidth < config.readerActivationWidth ) {\n\t\t\t\t\t\tif( !reader.isActive() ) reader.activate();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( reader.isActive() ) reader.deactivate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\treader.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in reader mode we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( reader.isActive() ) {\n\t\t\tconst scrollToSlide = reader.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) reader.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime current page in reader mode changes. The current\n\t * page is the page that occupies the most space in the viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentReaderPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = reader.isActive() || print.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In reader mode the original h/x index is stored on the slide\n\t\t\tif( reader.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the reader mode on/off\n\t\ttoggleReaderMode: reader.toggle.bind( reader ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\n\t\tisReaderMode: reader.isActive.bind( reader ),\n\t\tisPrinting: print.isActive.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Media playback\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentReaderPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\treader,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","Object","defineProperty","fitty_module","_extends","assign","arguments","source","key","prototype","hasOwnProperty","w","toArray","nl","slice","DrawState","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyle","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","destroy","_","observeMutations","observer","disconnect","originalStyle","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","newbie","push","init","unfreeze","freeze","undefined","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isReaderMode","preload","getConfig","preloadIframes","hasAttribute","load","slide","tagName","setAttribute","getAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","c","charCodeAt","toString","toUpperCase","decodeURI","join","isSpeakerNotes","video","muted","getMimeTypeFromFile","filename","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrinting","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","getHash","formatNumber","delimiter","isNaN","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","getSlides","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","closeOverlay","Location","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","MAX_REPLACE_STATE_FREQUENCY","s","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Reader","activatedCallbacks","onScroll","stateBeforeActivation","getState","slideHTMLBeforeActivation","presentationBackground","viewportElement","passive","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","contentContainer","shouldAutoAnimateBetween","page","stickyContainer","isVerticalStack","createProgressBar","stack","setState","stateBeforeDeactivation","removeProgressBar","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","syncPages","readerLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","readerScrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","marginTop","scrollPadding","totalHeight","position","scrollSnapAlign","setTriggerRanges","readerScrollbar","syncProgressBar","trigger","rangeStart","range","slideRange","slideRangeSegmentSize","scrollTrigger","globalRange","fragmentGroups","autoAnimateElement","autoAnimatePage","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","progressBarSlide","scrollBarSlideHeight","scrollTriggerElements","triggerElement","setProgressBarValue","getAllPages","hideProgressBarTimeout","scrollToSlide","getScrollTriggerBySlide","setCurrentReaderPage","backgrounds","sibling","activateTrigger","deactivateTrigger","getSlideByIndices","flatMap","scrollProgress","scrollProgressMid","activePage","loaded","Print","injectPageNumbers","pageWidth","body","layoutSlideContents","slideScrollHeights","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","view","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","readerActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","pointer","reader","print","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","activateInitialView","activatePrintView","activateReaderView","removeEventListeners","parent","childElementCount","Device","pauseOverlay","statusElement","createStatusElement","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","origin","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleReaderMode","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","Deck","enqueuedAPICalls","deck"],"mappings":";;;;;;;uOAOO,MAAMA,EAASA,CAAEC,EAAGC,KAE1B,IAAK,IAAIC,KAAKD,EACbD,EAAGE,GAAMD,EAAGC,GAGb,OAAOF,CAAC,EAOIG,EAAWA,CAAEC,EAAIC,IAEtBC,MAAMC,KAAMH,EAAGI,iBAAkBH,IAO5BI,EAAcA,CAAEL,EAAIM,EAAWC,KACvCA,EACHP,EAAGQ,UAAUC,IAAKH,GAGlBN,EAAGQ,UAAUE,OAAQJ,IAUVK,EAAgBJ,IAE5B,GAAqB,iBAAVA,EAAqB,CAC/B,GAAc,SAAVA,EAAmB,OAAO,KACzB,GAAc,SAAVA,EAAmB,OAAO,EAC9B,GAAc,UAAVA,EAAoB,OAAO,EAC/B,GAAIA,EAAMK,MAAO,eAAkB,OAAOC,WAAYN,GAG5D,OAAOA,CAAK,EA4BAO,EAAmBA,CAAEC,EAASC,KAE1CD,EAAQE,MAAMD,UAAYA,CAAS,EAavBE,EAAUA,CAAEC,EAAQlB,KAEhC,IAAImB,EAAgBD,EAAOD,SAAWC,EAAOE,iBAAmBF,EAAOG,kBAEvE,SAAWF,IAAiBA,EAAcG,KAAMJ,EAAQlB,GAAY,EAexDuB,EAAUA,CAAEL,EAAQlB,KAGhC,GAA8B,mBAAnBkB,EAAOK,QACjB,OAAOL,EAAOK,QAASvB,GAIxB,KAAOkB,GAAS,CACf,GAAID,EAASC,EAAQlB,GACpB,OAAOkB,EAIRA,EAASA,EAAOM,WAGjB,OAAO,IAAI,EAuCCC,EAAsBA,CAAEC,EAAWC,EAASC,EAAWC,EAAU,MAG7E,IAAIC,EAAQJ,EAAUvB,iBAAkB,IAAMyB,GAI9C,IAAK,IAAI/B,EAAI,EAAGA,EAAIiC,EAAMC,OAAQlC,IAAM,CACvC,IAAImC,EAAWF,EAAMjC,GACrB,GAAImC,EAASR,aAAeE,EAC3B,OAAOM,EAKT,IAAIC,EAAOC,SAASC,cAAeR,GAKnC,OAJAM,EAAK5B,UAAYuB,EACjBK,EAAKJ,UAAYA,EACjBH,EAAUU,YAAaH,GAEhBA,CAAI,EASCI,EAAqB/B,IAEjC,IAAIgC,EAAMJ,SAASC,cAAe,SAclC,OAbAG,EAAIC,KAAO,WAEPjC,GAASA,EAAMyB,OAAS,IACvBO,EAAIE,WACPF,EAAIE,WAAWC,QAAUnC,EAGzBgC,EAAIF,YAAaF,SAASQ,eAAgBpC,KAI5C4B,SAASS,KAAKP,YAAaE,GAEpBA,CAAG,EAOEM,EAAeA,KAE3B,IAAIC,EAAQ,GAEZC,SAASC,OAAOC,QAAS,4BAA4BrD,IACpDkD,EAAOlD,EAAEsD,MAAO,KAAMC,SAAYvD,EAAEsD,MAAO,KAAME,KAAK,IAIvD,IAAK,IAAItD,KAAKgD,EAAQ,CACrB,IAAIvC,EAAQuC,EAAOhD,GAEnBgD,EAAOhD,GAAMa,EAAa0C,SAAU9C,IAOrC,YAFqC,IAA1BuC,EAAoB,qBAA2BA,EAAoB,aAEvEA,CAAK,EAaAQ,EAAqBA,CAAEvC,EAASwC,EAAS,KAErD,GAAIxC,EAAU,CACb,IAAIyC,EAAWC,EAAY1C,EAAQE,MAAMsC,OAkBzC,OAdAxC,EAAQE,MAAMsC,OAAS,MAIvBxC,EAAQU,WAAWR,MAAMsC,OAAS,OAElCC,EAAYD,EAASxC,EAAQU,WAAWiC,aAGxC3C,EAAQE,MAAMsC,OAASE,EAAY,KAGnC1C,EAAQU,WAAWR,MAAM0C,eAAe,UAEjCH,EAGR,OAAOD,CAAM,EAIRK,EAAyB,CAC9BC,IAAO,YACPC,IAAO,YACPC,IAAO,YACPC,KAAQ,aACRC,KAAQ,cChSHC,EAAKC,UAAUC,UAERC,EAAW,+BAA+BC,KAAMJ,IAC9B,aAAvBC,UAAUI,UAA2BJ,UAAUK,eAAiB,EAEhD,UAAUF,KAAMJ,IAAS,QAAQI,KAAMJ,GAExD,MAAMO,EAAY,YAAYH,KAAMJ,YCD3CQ,OAAOC,eAAeC,EAAS,aAAc,CAC3CrE,OAAO,IAGT,IAAIsE,EAAWH,OAAOI,QAAU,SAAU3D,GAAU,IAAK,IAAIrB,EAAI,EAAGA,EAAIiF,UAAU/C,OAAQlC,IAAK,CAAE,IAAIkF,EAASD,UAAUjF,GAAI,IAAK,IAAImF,KAAOD,EAAcN,OAAOQ,UAAUC,eAAe5D,KAAKyD,EAAQC,KAAQ9D,EAAO8D,GAAOD,EAAOC,IAAY,OAAO9D,eAErO,SAAUiE,GAG1B,GAAKA,EAAL,CAGA,IAAIC,EAAU,SAAiBC,GAC7B,MAAO,GAAGC,MAAMhE,KAAK+D,IAInBE,EACI,EADJA,EAEa,EAFbA,EAGY,EAHZA,EAIK,EAILC,EAAU,GAGVC,EAAc,KACdC,EAAgB,0BAA2BP,EAAI,WACjDA,EAAEQ,qBAAqBF,GACvBA,EAAcN,EAAES,uBAAsB,WACpC,OAAOC,EAAOL,EAAQM,QAAO,SAAUC,GACrC,OAAOA,EAAEC,OAASD,EAAEE,eAGtB,aAGAC,EAAY,SAAmB3D,GACjC,OAAO,WACLiD,EAAQW,SAAQ,SAAUJ,GACxB,OAAOA,EAAEC,MAAQzD,KAEnBmD,MAKAG,EAAS,SAAgBL,GAK3BA,EAAQM,QAAO,SAAUC,GACvB,OAAQA,EAAEK,iBACTD,SAAQ,SAAUJ,GACnBA,EAAEK,cAAgBC,EAAaN,MAIjCP,EAAQM,OAAOQ,GAAgBH,QAAQI,GAGvC,IAAIC,EAAkBhB,EAAQM,OAAOW,GAGrCD,EAAgBL,QAAQO,GAGxBF,EAAgBL,SAAQ,SAAUJ,GAChCQ,EAAWR,GACXY,EAAYZ,MAIdS,EAAgBL,QAAQS,IAGtBD,EAAc,SAAqBZ,GACrC,OAAOA,EAAEC,MAAQT,GAGfmB,EAAkB,SAAyBX,GAG7CA,EAAEc,eAAiBd,EAAEjF,QAAQU,WAAWsF,YAGxCf,EAAEgB,aAAehB,EAAEjF,QAAQkG,YAG3BjB,EAAEkB,iBAAmBlB,EAAEmB,gBAGvBnB,EAAEmB,gBAAkBC,KAAKC,IAAID,KAAKE,IAAItB,EAAEuB,QAASvB,EAAEc,eAAiBd,EAAEgB,aAAehB,EAAEkB,kBAAmBlB,EAAEwB,SAG5GxB,EAAEyB,WAAazB,EAAE0B,WAAa1B,EAAEmB,kBAAoBnB,EAAEuB,QAAU,SAAW,UAIzEb,EAAe,SAAsBV,GACvC,OAAOA,EAAEC,QAAUT,GAA0BQ,EAAEC,QAAUT,GAA0BQ,EAAEjF,QAAQU,WAAWsF,cAAgBf,EAAEc,gBAIxHR,EAAe,SAAsBN,GAGvC,IAAI/E,EAAQmE,EAAEuC,iBAAiB3B,EAAEjF,QAAS,MAG1CiF,EAAEmB,gBAAkBtG,WAAWI,EAAM2G,iBAAiB,cAGtD5B,EAAE6B,QAAU5G,EAAM2G,iBAAiB,WACnC5B,EAAEyB,WAAaxG,EAAM2G,iBAAiB,gBAIpCrB,EAAiB,SAAwBP,GAE3C,IAAI8B,GAAW,EAGf,OAAI9B,EAAE+B,wBAGD,UAAUzD,KAAK0B,EAAE6B,WACpBC,GAAW,EACX9B,EAAE6B,QAAU,gBAIO,WAAjB7B,EAAEyB,aACJK,GAAW,EACX9B,EAAEyB,WAAa,UAIjBzB,EAAE+B,uBAAwB,EAEnBD,IAILtB,EAAa,SAAoBR,GACnCA,EAAEjF,QAAQE,MAAMwG,WAAazB,EAAEyB,WAC/BzB,EAAEjF,QAAQE,MAAM4G,QAAU7B,EAAE6B,QAC5B7B,EAAEjF,QAAQE,MAAM+G,SAAWhC,EAAEmB,gBAAkB,MAI7CN,EAAmB,SAA0Bb,GAC/CA,EAAEjF,QAAQkH,cAAc,IAAIC,YAAY,MAAO,CAC7CC,OAAQ,CACNC,SAAUpC,EAAEkB,iBACZmB,SAAUrC,EAAEmB,gBACZmB,YAAatC,EAAEmB,gBAAkBnB,EAAEkB,sBAMrCqB,EAAM,SAAavC,EAAGxD,GACxB,OAAO,WACLwD,EAAEC,MAAQzD,EACLwD,EAAEE,QACPP,MA0BA6C,EAAU,SAAiBxC,GAC7B,OAAO,WAGLP,EAAUA,EAAQM,QAAO,SAAU0C,GACjC,OAAOA,EAAE1H,UAAYiF,EAAEjF,WAIrBiF,EAAE0C,kBAAkB1C,EAAE2C,SAASC,aAGnC5C,EAAEjF,QAAQE,MAAMwG,WAAazB,EAAE6C,cAAcpB,WAC7CzB,EAAEjF,QAAQE,MAAM4G,QAAU7B,EAAE6C,cAAchB,QAC1C7B,EAAEjF,QAAQE,MAAM+G,SAAWhC,EAAE6C,cAAcb,WAK3Cc,EAAY,SAAmB9C,GACjC,OAAO,WACDA,EAAEE,SACNF,EAAEE,QAAS,EACXP,OAKAoD,EAAc,SAAqB/C,GACrC,OAAO,WACL,OAAOA,EAAEE,QAAS,IAIlBwC,EAAmB,SAA0B1C,GAG1CA,EAAE0C,mBAGP1C,EAAE2C,SAAW,IAAIK,iBAAiBT,EAAIvC,EAAGR,IAGzCQ,EAAE2C,SAASM,QAAQjD,EAAEjF,QAASiF,EAAE0C,oBAW9BQ,EAAiB,CACnB3B,QAAS,GACTC,QAAS,IACTE,WAAW,EACXgB,iBAAkB,qBAAsBtD,GAXL,CACnC+D,SAAS,EACTC,WAAW,EACXC,eAAe,IAgEbC,EAAiB,KACjBC,EAAkB,WACpBnE,EAAEoE,aAAaF,GACfA,EAAiBlE,EAAEqE,WAAWtD,EAAUX,GAAyBkE,EAAMC,qBAIrEC,EAAS,CAAC,SAAU,qBAkBxB,OAjBAlF,OAAOC,eAAe+E,EAAO,gBAAiB,CAC5CG,IAAK,SAAaC,GAChB,IAAIC,GAAUD,EAAU,MAAQ,UAAY,gBAC5CF,EAAOxD,SAAQ,SAAU4D,GACvB5E,EAAE2E,GAAQC,EAAGT,SAMnBG,EAAMO,eAAgB,EACtBP,EAAMC,mBAAqB,IAG3BD,EAAMQ,OAAS/D,EAAUX,GAGlBkE,EA7EP,SAASS,EAAYC,EAAUC,GAG7B,IAAIC,EAAezF,EAAS,GAAIqE,EAAgBmB,GAG5CE,EAAgBH,EAASI,KAAI,SAAUzJ,GAGzC,IAAIiF,EAAInB,EAAS,GAAIyF,EAAc,CAGjCvJ,QAASA,EACTmF,QAAQ,IAOV,OAxGO,SAAcF,GAGvBA,EAAE6C,cAAgB,CAChBpB,WAAYzB,EAAEjF,QAAQE,MAAMwG,WAC5BI,QAAS7B,EAAEjF,QAAQE,MAAM4G,QACzBG,SAAUhC,EAAEjF,QAAQE,MAAM+G,UAI5BU,EAAiB1C,GAGjBA,EAAEyE,QAAS,EAGXzE,EAAEC,OAAQ,EAGVR,EAAQiF,KAAK1E,GAkFX2E,CAAK3E,GAGE,CACLjF,QAASA,EACTwH,IAAKA,EAAIvC,EAAGR,GACZoF,SAAU9B,EAAU9C,GACpB6E,OAAQ9B,EAAY/C,GACpB+C,YAAaP,EAAQxC,OAQzB,OAHAL,IAGO4E,EAIT,SAASb,EAAMvI,GACb,IAAIkJ,EAAUtF,UAAU/C,OAAS,QAAsB8I,IAAjB/F,UAAU,GAAmBA,UAAU,GAAK,GAIlF,MAAyB,iBAAX5D,EAGdgJ,EAAY9E,EAAQlD,SAAS/B,iBAAiBe,IAAUkJ,GAGxDF,EAAY,CAAChJ,GAASkJ,GAAS,GA8BnC,CAzUkB,CAyUE,oBAAXU,OAAyB,KAAOA,QC5U1B,MAAMC,EAEpBC,YAAaC,GAEZC,KAAKD,OAASA,EAEdC,KAAKC,oBAAsBD,KAAKC,oBAAoBC,KAAMF,MAU3DG,cAAevK,GAEd,GAAIoK,KAAKD,OAAOK,eACf,OAAO,EAIR,IAAIC,EAAUL,KAAKD,OAAOO,YAAYC,eAQtC,MAJuB,kBAAZF,IACVA,EAAUzK,EAAQ4K,aAAc,iBAG1BH,EAURI,KAAMC,EAAOxB,EAAU,IAGtBwB,EAAM5K,MAAM4G,QAAUsD,KAAKD,OAAOO,YAAY5D,QAG9C9H,EAAU8L,EAAO,qEAAsEzF,SAASrF,KACvE,WAApBA,EAAQ+K,SAAwBX,KAAKG,cAAevK,MACvDA,EAAQgL,aAAc,MAAOhL,EAAQiL,aAAc,aACnDjL,EAAQgL,aAAc,mBAAoB,IAC1ChL,EAAQkL,gBAAiB,gBAK3BlM,EAAU8L,EAAO,gBAAiBzF,SAAS8F,IAC1C,IAAIC,EAAU,EAEdpM,EAAUmM,EAAO,oBAAqB9F,SAASpB,IAC9CA,EAAO+G,aAAc,MAAO/G,EAAOgH,aAAc,aACjDhH,EAAOiH,gBAAiB,YACxBjH,EAAO+G,aAAc,mBAAoB,IACzCI,GAAW,CAAC,IAIT9H,GAA8B,UAAlB6H,EAAMJ,SACrBI,EAAMH,aAAc,cAAe,IAKhCI,EAAU,GACbD,EAAMN,UAMR,IAAIQ,EAAaP,EAAMQ,uBACvB,GAAID,EAAa,CAChBA,EAAWnL,MAAM4G,QAAU,QAE3B,IAAIyE,EAAoBT,EAAMU,8BAC1BC,EAAmBX,EAAMG,aAAc,0BAG3C,IAAiD,IAA7CI,EAAWT,aAAc,eAA4B,CACxDS,EAAWL,aAAc,cAAe,QAExC,IAAIU,EAAkBZ,EAAMG,aAAc,yBACzCU,EAAkBb,EAAMG,aAAc,yBACtCW,EAAsBd,EAAMF,aAAc,8BAC1CiB,EAAuBf,EAAMF,aAAc,+BAG5C,GAAIc,EAEE,SAASnI,KAAMmI,EAAgBI,QACnCP,EAAkBrL,MAAMwL,gBAAmB,OAAMA,EAAgBI,UAIjEP,EAAkBrL,MAAMwL,gBAAkBA,EAAgBvJ,MAAO,KAAMsH,KAAK4B,GAGnE,OH4LiBU,EAAEC,EAAI,KAC9BC,UAAUD,GACd9J,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QACF,YACCgK,GAAO,IAAGA,EAAEC,WAAW,GAAGC,SAAS,IAAIC,kBGlMrBN,CADAO,UAAUjB,EAAWS,cAEjCS,KAAM,UAIN,GAAKZ,IAAoBvB,KAAKD,OAAOqC,iBAAmB,CAC5D,IAAIC,EAAQrL,SAASC,cAAe,SAEhCuK,GACHa,EAAMzB,aAAc,OAAQ,IAGzBa,IACHY,EAAMC,OAAQ,GAQXpJ,IACHmJ,EAAMC,OAAQ,EACdD,EAAMzB,aAAc,cAAe,KAIpCW,EAAgBxJ,MAAO,KAAMkD,SAASpB,IACrC,IAAIxC,EHsJyBkL,EAAEC,EAAS,KACtC/J,EAAuB+J,EAASzK,MAAM,KAAKE,OGvJlCsK,CAAqB1I,GAE/BwI,EAAM1L,WADHU,EACiB,gBAAewC,YAAiBxC,MAGhC,gBAAewC,SAIrCsH,EAAkBjK,YAAamL,QAG3B,GAAIhB,IAA+C,IAA3BnC,EAAQuD,eAA0B,CAC9D,IAAIC,EAAS1L,SAASC,cAAe,UACrCyL,EAAO9B,aAAc,kBAAmB,IACxC8B,EAAO9B,aAAc,qBAAsB,IAC3C8B,EAAO9B,aAAc,wBAAyB,IAC9C8B,EAAO9B,aAAc,QAAS,YAE9B8B,EAAO9B,aAAc,WAAYS,GAEjCqB,EAAO5M,MAAM6M,MAAS,OACtBD,EAAO5M,MAAMsC,OAAS,OACtBsK,EAAO5M,MAAM8M,UAAY,OACzBF,EAAO5M,MAAM+M,SAAW,OAExB1B,EAAkBjK,YAAawL,IAKjC,IAAII,EAA0B3B,EAAkB4B,cAAe,oBAC3DD,GAGC9C,KAAKG,cAAec,KAAiB,0BAA0B9H,KAAMkI,IACpEyB,EAAwBjC,aAAc,SAAYQ,GACrDyB,EAAwBlC,aAAc,MAAOS,GAQjDrB,KAAKgD,OAAQtC,GAOdsC,OAAQC,GAKPlO,MAAMC,KAAMiO,EAAahO,iBAAkB,gBAAkBgG,SAASrF,IACrE2I,EAAO3I,EAAS,CACfwG,QAAS,GACTC,QAA0C,GAAjC2D,KAAKD,OAAOO,YAAYlI,OACjCmF,kBAAkB,EAClBuB,eAAe,GACb,IAWLoE,OAAQxC,GAGPA,EAAM5K,MAAM4G,QAAU,OAGtB,IAAIuE,EAAajB,KAAKD,OAAOoD,mBAAoBzC,GAC7CO,IACHA,EAAWnL,MAAM4G,QAAU,OAG3B9H,EAAUqM,EAAY,eAAgBhG,SAASrF,IAC9CA,EAAQkL,gBAAiB,MAAO,KAKlClM,EAAU8L,EAAO,6FAA8FzF,SAASrF,IACvHA,EAAQgL,aAAc,WAAYhL,EAAQiL,aAAc,QACxDjL,EAAQkL,gBAAiB,MAAO,IAIjClM,EAAU8L,EAAO,0DAA2DzF,SAASpB,IACpFA,EAAO+G,aAAc,WAAY/G,EAAOgH,aAAc,QACtDhH,EAAOiH,gBAAiB,MAAO,IAQjCsC,wBAEC,IAAIC,EAA6BA,CAAEC,EAAiBC,EAAWC,KAC9D5O,EAAUoL,KAAKD,OAAO0D,mBAAoB,UAAWH,EAAiB,MAAOC,EAAW,MAAOtI,SAASpG,IACvG,IAAI6O,EAAM7O,EAAGgM,aAAcyC,GACvBI,IAAiC,IAA1BA,EAAIC,QAASH,IACvB3O,EAAG+L,aAAc0C,EAAiBI,GAAS,KAAKvK,KAAMuK,GAAc,IAAN,KAAcF,KAE5E,EAIHH,EAA4B,MAAO,qBAAsB,iBACzDA,EAA4B,WAAY,qBAAsB,iBAG9DA,EAA4B,MAAO,oBAAqB,SACxDA,EAA4B,WAAY,oBAAqB,SAU9DO,qBAAsBhO,GAEjBA,IAAYoK,KAAKD,OAAOqC,mBAG3BxN,EAAUgB,EAAS,oBAAqBqF,SAASpG,IAGhDA,EAAG+L,aAAc,MAAO/L,EAAGgM,aAAc,OAAS,IAInDjM,EAAUgB,EAAS,gBAAiBqF,SAASpG,IAC5C,GAAIwB,EAASxB,EAAI,eAAkBwB,EAASxB,EAAI,qBAC/C,OAID,IAAIgP,EAAW7D,KAAKD,OAAOO,YAAYwD,cAQvC,GAJwB,kBAAbD,IACVA,EAAWhP,EAAG2L,aAAc,oBAAuBnK,EAASxB,EAAI,sBAG7DgP,GAA+B,mBAAZhP,EAAGkP,KAGzB,GAAIlP,EAAGmP,WAAa,EACnBhE,KAAKiE,mBAAoB,CAAEjO,OAAQnB,SAI/B,GAAIqE,EAAW,CACnB,IAAIgL,EAAUrP,EAAGkP,OAIbG,GAAoC,mBAAlBA,EAAQC,QAAwC,IAAhBtP,EAAGuP,UACxDF,EAAQC,OAAO,KACdtP,EAAGuP,UAAW,EAGdvP,EAAGwP,iBAAkB,QAAQ,KAC5BxP,EAAGuP,UAAW,CAAK,GACjB,SAMLvP,EAAGyP,oBAAqB,aAActE,KAAKiE,oBAC3CpP,EAAGwP,iBAAkB,aAAcrE,KAAKiE,uBAO3CrP,EAAUgB,EAAS,eAAgBqF,SAASpG,IACvCwB,EAASxB,EAAI,eAAkBwB,EAASxB,EAAI,sBAIhDmL,KAAKC,oBAAqB,CAAEjK,OAAQnB,GAAM,IAI3CD,EAAUgB,EAAS,oBAAqBqF,SAASpG,IAC5CwB,EAASxB,EAAI,eAAkBwB,EAASxB,EAAI,sBAI5CA,EAAGgM,aAAc,SAAYhM,EAAGgM,aAAc,cACjDhM,EAAGyP,oBAAqB,OAAQtE,KAAKC,qBACrCpL,EAAGwP,iBAAkB,OAAQrE,KAAKC,qBAClCpL,EAAG+L,aAAc,MAAO/L,EAAGgM,aAAc,kBAc7CoD,mBAAoBM,GAEnB,IAAIC,IAAoBnO,EAASkO,EAAMvO,OAAQ,QAC9CyO,IAAiBpO,EAASkO,EAAMvO,OAAQ,YAErCwO,GAAmBC,IACtBF,EAAMvO,OAAO0O,YAAc,EAC3BH,EAAMvO,OAAO+N,QAGdQ,EAAMvO,OAAOsO,oBAAqB,aAActE,KAAKiE,oBAUtDhE,oBAAqBsE,GAEpB,IAAI7B,EAAS6B,EAAMvO,OAEnB,GAAI0M,GAAUA,EAAOiC,cAAgB,CAEpC,IAAIH,IAAoBnO,EAASkO,EAAMvO,OAAQ,QAC9CyO,IAAiBpO,EAASkO,EAAMvO,OAAQ,YAEzC,GAAIwO,GAAmBC,EAAY,CAGlC,IAAIZ,EAAW7D,KAAKD,OAAOO,YAAYwD,cAIf,kBAAbD,IACVA,EAAWnB,EAAOlC,aAAc,oBAAuBnK,EAASqM,EAAQ,sBAIrE,wBAAwBvJ,KAAMuJ,EAAO7B,aAAc,SAAagD,EACnEnB,EAAOiC,cAAcC,YAAa,mDAAoD,KAG9E,uBAAuBzL,KAAMuJ,EAAO7B,aAAc,SAAagD,EACvEnB,EAAOiC,cAAcC,YAAa,oBAAqB,KAIvDlC,EAAOiC,cAAcC,YAAa,cAAe,OAerDC,oBAAqBjP,EAASsJ,EAAU,IAEvCA,EAAU1K,EAAQ,CAEjBsQ,eAAe,GACb5F,GAECtJ,GAAWA,EAAQU,aAEtB1B,EAAUgB,EAAS,gBAAiBqF,SAASpG,IACvCA,EAAG2L,aAAc,gBAAuC,mBAAb3L,EAAGkQ,QAClDlQ,EAAG+L,aAAa,wBAAyB,IACzC/L,EAAGkQ,YAKLnQ,EAAUgB,EAAS,UAAWqF,SAASpG,IAClCA,EAAG8P,eAAgB9P,EAAG8P,cAAcC,YAAa,aAAc,KACnE/P,EAAGyP,oBAAqB,OAAQtE,KAAKC,oBAAqB,IAI3DrL,EAAUgB,EAAS,qCAAsCqF,SAASpG,KAC5DA,EAAG2L,aAAc,gBAAmB3L,EAAG8P,eAAyD,mBAAjC9P,EAAG8P,cAAcC,aACpF/P,EAAG8P,cAAcC,YAAa,oDAAqD,QAKrFhQ,EAAUgB,EAAS,oCAAqCqF,SAASpG,KAC3DA,EAAG2L,aAAc,gBAAmB3L,EAAG8P,eAAyD,mBAAjC9P,EAAG8P,cAAcC,aACpF/P,EAAG8P,cAAcC,YAAa,qBAAsB,SAIxB,IAA1B1F,EAAQ4F,eAEXlQ,EAAUgB,EAAS,oBAAqBqF,SAASpG,IAGhDA,EAAG+L,aAAc,MAAO,eACxB/L,EAAGiM,gBAAiB,MAAO,MCzdjB,MAAMkE,EAEpBlF,YAAaC,GAEZC,KAAKD,OAASA,EAIfkF,SAECjF,KAAKpK,QAAUoB,SAASC,cAAe,OACvC+I,KAAKpK,QAAQT,UAAY,eACzB6K,KAAKD,OAAOmF,mBAAmBhO,YAAa8I,KAAKpK,SAOlDuP,UAAWC,EAAQC,GAElB,IAAIC,EAAqB,OACrBF,EAAOG,cAAgBvF,KAAKD,OAAOyF,eACP,QAA3BJ,EAAOK,iBAGyB,YAA3BL,EAAOK,iBAAiCzF,KAAKD,OAAOqC,oBAF5DkD,EAAqB,SAOvBtF,KAAKpK,QAAQE,MAAM4G,QAAU4I,EAO9BI,SAGK1F,KAAKD,OAAOO,YAAYiF,aAAevF,KAAKpK,UAC/CoK,KAAKpK,QAAQe,UAAYqJ,KAAK2F,kBAShCA,eAAgBjF,EAAQV,KAAKD,OAAO6F,mBAEnC,IACIxQ,EADAgQ,EAASpF,KAAKD,OAAOO,YAErBuF,EAAS,MAEb,GAAmC,mBAAvBT,EAAOG,YAClBnQ,EAAQgQ,EAAOG,YAAa7E,OACtB,CAE4B,iBAAvB0E,EAAOG,cACjBM,EAAST,EAAOG,aAKZ,IAAIpM,KAAM0M,IAAyD,IAA7C7F,KAAKD,OAAO+F,sBAAsBjP,SAC5DgP,EAAS,KAIV,IAAIE,EAAmBrF,GAAsC,cAA7BA,EAAMsF,QAAQC,WAA6B,EAAI,EAG/E,OADA7Q,EAAQ,GACAyQ,GACP,IAAK,IACJzQ,EAAMmK,KAAMS,KAAKD,OAAOmG,kBAAmBxF,GAAUqF,GACrD,MACD,IAAK,MACJ3Q,EAAMmK,KAAMS,KAAKD,OAAOmG,kBAAmBxF,GAAUqF,EAAkB,IAAK/F,KAAKD,OAAOoG,kBACxF,MACD,QACC,IAAIC,EAAUpG,KAAKD,OAAOsG,WAAY3F,GACtCtL,EAAMmK,KAAM6G,EAAQE,EAAIP,GACxB,IAAIQ,EAAiB,QAAXV,EAAmB,IAAM,IAC/B7F,KAAKD,OAAOyG,gBAAiB9F,IAAUtL,EAAMmK,KAAMgH,EAAKH,EAAQK,EAAI,IAI3E,IAAI7E,EAAM,IAAM5B,KAAKD,OAAOnI,SAAS8O,QAAShG,GAC9C,OAAOV,KAAK2G,aAAcvR,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIwM,GAczD+E,aAAclS,EAAGmS,EAAWlS,EAAGkN,EAAM,IAAM5B,KAAKD,OAAOnI,SAAS8O,WAE/D,MAAiB,iBAANhS,GAAmBmS,MAAOnS,GAQ5B,YAAWkN,+CACcnN,2BARxB,YAAWmN,+CACanN,4DACQmS,oDACRlS,2BAWnC2I,UAEC2C,KAAKpK,QAAQL,UC3HA,MAAMuR,EAEpBhH,YAAaC,GAEZC,KAAKD,OAASA,EAEdC,KAAK+G,QAAU/G,KAAK+G,QAAQ7G,KAAMF,MAClCA,KAAKgH,OAAShH,KAAKgH,OAAO9G,KAAMF,MAChCA,KAAKiH,UAAYjH,KAAKiH,UAAU/G,KAAMF,MAIvCiF,SAECjF,KAAKpK,QAAUoB,SAASC,cAAe,OACvC+I,KAAKpK,QAAQT,UAAY,gBAEvB6K,KAAKkH,UAAYlQ,SAASC,cAAe,SACzC+I,KAAKkH,UAAU7P,KAAO,OACtB2I,KAAKkH,UAAU/R,UAAY,sBAC3B6K,KAAKkH,UAAUC,YAAc,gBAC/BnH,KAAKkH,UAAU7C,iBAAkB,QAASrE,KAAK+G,SAC/C/G,KAAKkH,UAAU7C,iBAAkB,UAAWrE,KAAKiH,WACjDjH,KAAKkH,UAAU7C,iBAAkB,OAAQrE,KAAKgH,QAE5ChH,KAAKpK,QAAQsB,YAAa8I,KAAKkH,WAIlCE,OAECpH,KAAKqH,cAAgBrH,KAAKD,OAAOsG,aAEjCrG,KAAKD,OAAOmF,mBAAmBhO,YAAa8I,KAAKpK,SACjDoK,KAAKkH,UAAUI,QAIhBC,OAEKvH,KAAKyE,cACRzE,KAAKpK,QAAQL,SACbyK,KAAKkH,UAAU9R,MAAQ,GAEvBiJ,aAAc2B,KAAKwH,oBACZxH,KAAKwH,aAKd/C,YAEC,QAASzE,KAAKpK,QAAQU,WAOvBmR,OAECpJ,aAAc2B,KAAKwH,oBACZxH,KAAKwH,YAEZ,MAAM7P,EAAQqI,KAAKkH,UAAU9R,MAAMsM,KAAM,IACzC,IAAI0E,EAAUpG,KAAKD,OAAOnI,SAAS8P,mBAAoB/P,EAAO,CAAEgQ,eAAe,IAQ/E,OAJKvB,GAAW,OAAOjN,KAAMxB,IAAWA,EAAMd,OAAS,IACtDuP,EAAUpG,KAAKnI,OAAQF,IAGpByO,GAAqB,KAAVzO,GACdqI,KAAKD,OAAOW,MAAO0F,EAAQE,EAAGF,EAAQK,EAAGL,EAAQvL,IAC1C,IAGPmF,KAAKD,OAAOW,MAAOV,KAAKqH,cAAcf,EAAGtG,KAAKqH,cAAcZ,EAAGzG,KAAKqH,cAAcxM,IAC3E,GAKT+M,UAAWC,GAEVxJ,aAAc2B,KAAKwH,aACnBxH,KAAKwH,YAAclJ,YAAY,IAAM0B,KAAKyH,QAAQI,GAQnDhQ,OAAQF,GAEP,MAAMmQ,EAAQ,IAAIC,OAAQ,MAAQpQ,EAAM+J,OAAS,MAAO,KAElDhB,EAAQV,KAAKD,OAAOiI,YAAYC,MAAQvH,GACtCoH,EAAM3O,KAAMuH,EAAMwH,aAG1B,OAAIxH,EACIV,KAAKD,OAAOsG,WAAY3F,GAGxB,KASTyH,SAECnI,KAAKD,OAAOW,MAAOV,KAAKqH,cAAcf,EAAGtG,KAAKqH,cAAcZ,EAAGzG,KAAKqH,cAAcxM,GAClFmF,KAAKuH,OAINa,UAECpI,KAAKyH,OACLzH,KAAKuH,OAINlK,UAEC2C,KAAKkH,UAAU5C,oBAAqB,QAAStE,KAAK+G,SAClD/G,KAAKkH,UAAU5C,oBAAqB,UAAWtE,KAAKiH,WACpDjH,KAAKkH,UAAU5C,oBAAqB,OAAQtE,KAAKgH,QAEjDhH,KAAKpK,QAAQL,SAId0R,UAAW1C,GAEY,KAAlBA,EAAM8D,QACTrI,KAAKoI,UAEqB,KAAlB7D,EAAM8D,UACdrI,KAAKmI,SAEL5D,EAAM+D,4BAKRvB,QAASxC,GAERvE,KAAK4H,UAAW,KAIjBZ,SAEC1I,YAAY,IAAM0B,KAAKuH,QAAQ,ICtJ1B,MAAMgB,EAAeC,IAE3B,IAAIC,EAAOD,EAAM/S,MAAO,qBACxB,GAAIgT,GAAQA,EAAK,GAEhB,OADAA,EAAOA,EAAK,GACL,CACNC,EAAsC,GAAnCC,SAAUF,EAAKG,OAAQ,GAAK,IAC/BC,EAAsC,GAAnCF,SAAUF,EAAKG,OAAQ,GAAK,IAC/BlU,EAAsC,GAAnCiU,SAAUF,EAAKG,OAAQ,GAAK,KAIjC,IAAIE,EAAON,EAAM/S,MAAO,qBACxB,GAAIqT,GAAQA,EAAK,GAEhB,OADAA,EAAOA,EAAK,GACL,CACNJ,EAAGC,SAAUG,EAAK1O,MAAO,EAAG,GAAK,IACjCyO,EAAGF,SAAUG,EAAK1O,MAAO,EAAG,GAAK,IACjC1F,EAAGiU,SAAUG,EAAK1O,MAAO,EAAG,GAAK,KAInC,IAAI2O,EAAMP,EAAM/S,MAAO,oDACvB,GAAIsT,EACH,MAAO,CACNL,EAAGC,SAAUI,EAAI,GAAI,IACrBF,EAAGF,SAAUI,EAAI,GAAI,IACrBrU,EAAGiU,SAAUI,EAAI,GAAI,KAIvB,IAAIC,EAAOR,EAAM/S,MAAO,gFACxB,OAAIuT,EACI,CACNN,EAAGC,SAAUK,EAAK,GAAI,IACtBH,EAAGF,SAAUK,EAAK,GAAI,IACtBtU,EAAGiU,SAAUK,EAAK,GAAI,IACtBvU,EAAGiB,WAAYsT,EAAK,KAIf,IAAI,EClDG,MAAMC,EAEpBnJ,YAAaC,GAEZC,KAAKD,OAASA,EAIfkF,SAECjF,KAAKpK,QAAUoB,SAASC,cAAe,OACvC+I,KAAKpK,QAAQT,UAAY,cACzB6K,KAAKD,OAAOmF,mBAAmBhO,YAAa8I,KAAKpK,SASlDsT,SAGClJ,KAAKpK,QAAQe,UAAY,GACzBqJ,KAAKpK,QAAQP,UAAUC,IAAK,iBAG5B0K,KAAKD,OAAO+F,sBAAsB7K,SAASkO,IAE1C,IAAIC,EAAkBpJ,KAAKqJ,iBAAkBF,EAAQnJ,KAAKpK,SAG1DhB,EAAUuU,EAAQ,WAAYlO,SAASqO,IAEtCtJ,KAAKqJ,iBAAkBC,EAAQF,GAE/BA,EAAgB/T,UAAUC,IAAK,QAAS,GAEtC,IAKA0K,KAAKD,OAAOO,YAAYiJ,yBAE3BvJ,KAAKpK,QAAQE,MAAMwL,gBAAkB,QAAUtB,KAAKD,OAAOO,YAAYiJ,wBAA0B,KACjGvJ,KAAKpK,QAAQE,MAAM0T,eAAiBxJ,KAAKD,OAAOO,YAAYmJ,uBAC5DzJ,KAAKpK,QAAQE,MAAM4T,iBAAmB1J,KAAKD,OAAOO,YAAYqJ,yBAC9D3J,KAAKpK,QAAQE,MAAM8T,mBAAqB5J,KAAKD,OAAOO,YAAYuJ,2BAMhEvL,YAAY,KACX0B,KAAKD,OAAOmF,mBAAmB7P,UAAUC,IAAK,0BAA2B,GACvE,KAKH0K,KAAKpK,QAAQE,MAAMwL,gBAAkB,GACrCtB,KAAKD,OAAOmF,mBAAmB7P,UAAUE,OAAQ,4BAcnD8T,iBAAkB3I,EAAOlK,GAGxB,IAAIZ,EAAUoB,SAASC,cAAe,OACtCrB,EAAQT,UAAY,oBAAsBuL,EAAMvL,UAAU2C,QAAS,sBAAuB,IAG1F,IAAIgS,EAAiB9S,SAASC,cAAe,OAY7C,OAXA6S,EAAe3U,UAAY,2BAE3BS,EAAQsB,YAAa4S,GACrBtT,EAAUU,YAAatB,GAEvB8K,EAAMQ,uBAAyBtL,EAC/B8K,EAAMU,8BAAgC0I,EAGtC9J,KAAK+J,KAAMrJ,GAEJ9K,EAURmU,KAAMrJ,GAEL,MAAM9K,EAAU8K,EAAMQ,uBACrB4I,EAAiBpJ,EAAMU,8BAElB4I,EAAO,CACZ/I,WAAYP,EAAMG,aAAc,mBAChC2I,eAAgB9I,EAAMG,aAAc,wBACpCS,gBAAiBZ,EAAMG,aAAc,yBACrCU,gBAAiBb,EAAMG,aAAc,yBACrCQ,iBAAkBX,EAAMG,aAAc,0BACtCoJ,gBAAiBvJ,EAAMG,aAAc,yBACrCqJ,mBAAoBxJ,EAAMG,aAAc,4BACxC6I,iBAAkBhJ,EAAMG,aAAc,0BACtC+I,mBAAoBlJ,EAAMG,aAAc,4BACxCsJ,qBAAsBzJ,EAAMG,aAAc,8BAC1CuJ,kBAAmB1J,EAAMG,aAAc,4BAGlCwJ,EAAc3J,EAAMF,aAAc,gBAIxCE,EAAMrL,UAAUE,OAAQ,uBACxBmL,EAAMrL,UAAUE,OAAQ,wBAExBK,EAAQkL,gBAAiB,eACzBlL,EAAQkL,gBAAiB,wBACzBlL,EAAQkL,gBAAiB,wBACzBlL,EAAQkL,gBAAiB,8BACzBlL,EAAQE,MAAMmU,gBAAkB,GAEhCH,EAAehU,MAAM0T,eAAiB,GACtCM,EAAehU,MAAM4T,iBAAmB,GACxCI,EAAehU,MAAM8T,mBAAqB,GAC1CE,EAAehU,MAAMwL,gBAAkB,GACvCwI,EAAehU,MAAMwU,QAAU,GAC/BR,EAAenT,UAAY,GAEvBqT,EAAK/I,aAEJ,sBAAsB9H,KAAM6Q,EAAK/I,aAAgB,gDAAgD9H,KAAM6Q,EAAK/I,YAC/GP,EAAME,aAAc,wBAAyBoJ,EAAK/I,YAGlDrL,EAAQE,MAAMmL,WAAa+I,EAAK/I,aAO9B+I,EAAK/I,YAAc+I,EAAKC,iBAAmBD,EAAKE,oBAAsBF,EAAK1I,iBAAmB0I,EAAKzI,iBAAmByI,EAAK3I,mBAC9HzL,EAAQgL,aAAc,uBAAwBoJ,EAAK/I,WACvC+I,EAAKR,eACLQ,EAAK1I,gBACL0I,EAAKzI,gBACLyI,EAAK3I,iBACL2I,EAAKC,gBACLD,EAAKE,mBACLF,EAAKN,iBACLM,EAAKJ,mBACLI,EAAKG,qBACLH,EAAKI,mBAIdJ,EAAKR,gBAAiB5T,EAAQgL,aAAc,uBAAwBoJ,EAAKR,gBACzEQ,EAAKC,kBAAkBrU,EAAQE,MAAMmU,gBAAkBD,EAAKC,iBAC5DD,EAAKE,qBAAqBtU,EAAQE,MAAMwL,gBAAkB0I,EAAKE,oBAC/DF,EAAKG,sBAAuBvU,EAAQgL,aAAc,6BAA8BoJ,EAAKG,sBAErFE,GAAczU,EAAQgL,aAAc,eAAgB,IAGpDoJ,EAAKR,iBAAiBM,EAAehU,MAAM0T,eAAiBQ,EAAKR,gBACjEQ,EAAKN,mBAAmBI,EAAehU,MAAM4T,iBAAmBM,EAAKN,kBACrEM,EAAKJ,qBAAqBE,EAAehU,MAAM8T,mBAAqBI,EAAKJ,oBACzEI,EAAKI,oBAAoBN,EAAehU,MAAMwU,QAAUN,EAAKI,mBAEjE,MAAMG,EAAgBvK,KAAKwK,iBAAkB9J,GAEhB,iBAAlB6J,GACV7J,EAAMrL,UAAUC,IAAKiV,GAavBC,iBAAkB9J,GAEjB,MAAM9K,EAAU8K,EAAMQ,uBAKtB,IAAIuJ,EAAgB/J,EAAMG,aAAc,yBAGxC,IAAK4J,IAAkBlC,EAAYkC,GAAkB,CACpD,IAAIC,EAA0B9K,OAAOpD,iBAAkB5G,GACnD8U,GAA2BA,EAAwBT,kBACtDQ,EAAgBC,EAAwBT,iBAI1C,GAAIQ,EAAgB,CACnB,MAAM1B,EAAMR,EAAYkC,GAKxB,GAAI1B,GAAiB,IAAVA,EAAItU,EACd,MDpKkB,iBAFW+T,ECsKRiC,KDpKQjC,EAAQD,EAAYC,KAEhDA,GACgB,IAAVA,EAAME,EAAoB,IAAVF,EAAMK,EAAoB,IAAVL,EAAM9T,GAAY,IAGrD,MC8JmC,IAC/B,sBAGA,uBD1KqB8T,MC+K/B,OAAO,KAORmC,kCAAmCjK,EAAO1K,GAEzC,CAAE,uBAAwB,uBAAwBiF,SAAS2P,IACtDlK,EAAMrL,UAAUwV,SAAUD,GAC7B5U,EAAOX,UAAUC,IAAKsV,GAGtB5U,EAAOX,UAAUE,OAAQqV,KAExB5K,MAWJ0F,OAAQoF,GAAa,GAEpB,IAAIC,EAAe/K,KAAKD,OAAO6F,kBAC3BQ,EAAUpG,KAAKD,OAAOsG,aAEtB2E,EAAoB,KAGpBC,EAAiBjL,KAAKD,OAAOO,YAAY4K,IAAM,SAAW,OAC7DC,EAAmBnL,KAAKD,OAAOO,YAAY4K,IAAM,OAAS,SAoD3D,GAhDAnW,MAAMC,KAAMgL,KAAKpK,QAAQwV,YAAanQ,SAAS,CAAEoQ,EAAa/E,KAE7D+E,EAAYhW,UAAUE,OAAQ,OAAQ,UAAW,UAE7C+Q,EAAIF,EAAQE,EACf+E,EAAYhW,UAAUC,IAAK2V,GAElB3E,EAAIF,EAAQE,EACrB+E,EAAYhW,UAAUC,IAAK6V,IAG3BE,EAAYhW,UAAUC,IAAK,WAG3B0V,EAAoBK,IAGjBP,GAAcxE,IAAMF,EAAQE,IAC/B1R,EAAUyW,EAAa,qBAAsBpQ,SAAS,CAAEqQ,EAAa7E,KAEpE6E,EAAYjW,UAAUE,OAAQ,OAAQ,UAAW,UAE7CkR,EAAIL,EAAQK,EACf6E,EAAYjW,UAAUC,IAAK,QAElBmR,EAAIL,EAAQK,EACrB6E,EAAYjW,UAAUC,IAAK,WAG3BgW,EAAYjW,UAAUC,IAAK,WAGvBgR,IAAMF,EAAQE,IAAI0E,EAAoBM,UAS1CtL,KAAKuL,oBAERvL,KAAKD,OAAOyL,aAAa3G,oBAAqB7E,KAAKuL,mBAAoB,CAAEzG,eAAgB9E,KAAKD,OAAOyL,aAAarL,cAAeH,KAAKuL,sBAKnIP,EAAoB,CAEvBhL,KAAKD,OAAOyL,aAAa5H,qBAAsBoH,GAE/C,IAAIS,EAA2BT,EAAkBjI,cAAe,6BAChE,GAAI0I,EAA2B,CAE9B,IAAIC,EAAqBD,EAAyB3V,MAAMwL,iBAAmB,GAGvE,SAASnI,KAAMuS,KAClBD,EAAyB3V,MAAMwL,gBAAkB,GACjD1B,OAAOpD,iBAAkBiP,GAA2BnB,QACpDmB,EAAyB3V,MAAMwL,gBAAkBoK,GAOnD,IAAIC,EAAyB3L,KAAKuL,mBAAqBvL,KAAKuL,mBAAmB1K,aAAc,wBAA2B,KACpH+K,EAAwBZ,EAAkBnK,aAAc,wBACxD+K,GAAyBA,IAA0BD,GAA0BX,IAAsBhL,KAAKuL,oBAC3GvL,KAAKpK,QAAQP,UAAUC,IAAK,iBAG7B0K,KAAKuL,mBAAqBP,EAMvBD,GACH/K,KAAK2K,kCAAmCI,EAAc/K,KAAKD,OAAOmF,oBAInE5G,YAAY,KACX0B,KAAKpK,QAAQP,UAAUE,OAAQ,gBAAiB,GAC9C,GAQJsW,iBAEC,IAAIzF,EAAUpG,KAAKD,OAAOsG,aAE1B,GAAIrG,KAAKD,OAAOO,YAAYiJ,wBAA0B,CAErD,IAICuC,EAAiBC,EAJdC,EAAmBhM,KAAKD,OAAO+F,sBAClCmG,EAAiBjM,KAAKD,OAAOmM,oBAE1B1C,EAAiBxJ,KAAKpK,QAAQE,MAAM0T,eAAezR,MAAO,KAGhC,IAA1ByR,EAAe3S,OAClBiV,EAAkBC,EAAmBpD,SAAUa,EAAe,GAAI,KAGlEsC,EAAkBnD,SAAUa,EAAe,GAAI,IAC/CuC,EAAmBpD,SAAUa,EAAe,GAAI,KAGjD,IAEC2C,EACApG,EAHGqG,EAAapM,KAAKpK,QAAQyW,YAC7BC,EAAuBN,EAAiBnV,OAKxCsV,EADmE,iBAAzDnM,KAAKD,OAAOO,YAAYiM,6BACLvM,KAAKD,OAAOO,YAAYiM,6BAGxBD,EAAuB,GAAMR,EAAkBM,IAAiBE,EAAqB,GAAM,EAGzHvG,EAAmBoG,EAA6B/F,EAAQE,GAAK,EAE7D,IAECkG,EACAC,EAHGC,EAAc1M,KAAKpK,QAAQ2C,aAC9BoU,EAAqBV,EAAepV,OAKpC2V,EADiE,iBAAvDxM,KAAKD,OAAOO,YAAYsM,2BACP5M,KAAKD,OAAOO,YAAYsM,4BAGtBb,EAAmBW,IAAkBC,EAAmB,GAGtFF,EAAiBE,EAAqB,EAAKH,EAA2BpG,EAAQK,EAAI,EAElFzG,KAAKpK,QAAQE,MAAM8T,mBAAqB7D,EAAmB,OAAS0G,EAAiB,MAMvFpP,UAEC2C,KAAKpK,QAAQL,UC/aR,MAAMsX,EAAkB,kBAClBC,EAA6B,kBAC7BC,EAA2B,kCAG3BC,EAAgC,qFAGhCC,EAAuB,uGCLpC,IAAIC,EAAqB,EAMV,MAAMC,EAEpBrN,YAAaC,GAEZC,KAAKD,OAASA,EAUfqN,IAAKC,EAAWC,GAGftN,KAAKuN,QAEL,IAAIC,EAAYxN,KAAKD,OAAOiI,YACxByF,EAAeD,EAAU7J,QAAS2J,GAClCI,EAAiBF,EAAU7J,QAAS0J,GAKxC,GAAIA,EAAU7M,aAAc,sBAAyB8M,EAAQ9M,aAAc,sBACtE6M,EAAUxM,aAAc,0BAA6ByM,EAAQzM,aAAc,2BACxE4M,EAAeC,EAAiBJ,EAAUD,GAAY7M,aAAc,6BAAgC,CAG3GR,KAAK2N,sBAAwB3N,KAAK2N,uBAAyBxW,IAE3D,IAAIyW,EAAmB5N,KAAK6N,sBAAuBP,GAGnDD,EAAUrH,QAAQ8H,YAAc,UAChCR,EAAQtH,QAAQ8H,YAAc,UAG9BF,EAAiBG,eAAiBN,EAAeC,EAAiB,UAAY,WAK9E,IAAIM,EAAgD,SAA5BX,EAAUvX,MAAM4G,QACpCsR,IAAoBX,EAAUvX,MAAM4G,QAAUsD,KAAKD,OAAOO,YAAY5D,SAG1E,IAAIuR,EAAMjO,KAAKkO,0BAA2Bb,EAAWC,GAAUjO,KAAKJ,GAC5De,KAAKmO,oBAAqBlP,EAASjK,KAAMiK,EAASmP,GAAInP,EAASC,SAAW,GAAI0O,EAAkBV,OAMxG,GAHIc,IAAoBX,EAAUvX,MAAM4G,QAAU,QAGL,UAAzC4Q,EAAQtH,QAAQqI,uBAAqF,IAAjDrO,KAAKD,OAAOO,YAAY+N,qBAAgC,CAG/G,IAAIC,EAAuD,GAA5BV,EAAiBW,SAC/CC,EAAoD,GAA5BZ,EAAiBW,SAE1CvO,KAAKyO,gCAAiCnB,GAAUrS,SAASyT,IAExD,IAAIC,EAAmB3O,KAAK6N,sBAAuBa,EAAkBd,GACjEgB,EAAK,YAILD,EAAiBJ,WAAaX,EAAiBW,UAAYI,EAAiB9G,QAAU+F,EAAiB/F,QAC1G+G,EAAK,aAAe1B,IACpBe,EAAI1O,KAAO,4DAA2DqP,6BAA8BD,EAAiBJ,kBAAkBI,EAAiB9G,cAGzJ6G,EAAiB1I,QAAQ6I,kBAAoBD,CAAE,GAE7C5O,MAGHiO,EAAI1O,KAAO,8FAA6F+O,WAAkCE,SAO3IxO,KAAK2N,sBAAsBhX,UAAYsX,EAAI9L,KAAM,IAGjDzH,uBAAuB,KAClBsF,KAAK2N,wBAERnR,iBAAkBwD,KAAK2N,uBAAwBmB,WAE/CxB,EAAQtH,QAAQ8H,YAAc,cAIhC9N,KAAKD,OAAOjD,cAAc,CACzBzF,KAAM,cACN2S,KAAM,CACLqD,YACAC,UACAyB,MAAO/O,KAAK2N,0BAYhBJ,QAGC3Y,EAAUoL,KAAKD,OAAOmF,mBAAoB,mDAAoDjK,SAASrF,IACtGA,EAAQoQ,QAAQ8H,YAAc,EAAE,IAIjClZ,EAAUoL,KAAKD,OAAOmF,mBAAoB,8BAA+BjK,SAASrF,WAC1EA,EAAQoQ,QAAQ6I,iBAAiB,IAIrC7O,KAAK2N,uBAAyB3N,KAAK2N,sBAAsBrX,aAC5D0J,KAAK2N,sBAAsBrX,WAAW0Y,YAAahP,KAAK2N,uBACxD3N,KAAK2N,sBAAwB,MAiB/BQ,oBAAqBnZ,EAAMoZ,EAAIa,EAAgBrB,EAAkBgB,GAIhE5Z,EAAKgR,QAAQ6I,kBAAoB,GACjCT,EAAGpI,QAAQ6I,kBAAoBD,EAI/B,IAAI1P,EAAUc,KAAK6N,sBAAuBO,EAAIR,QAIV,IAAzBqB,EAAepH,QAAwB3I,EAAQ2I,MAAQoH,EAAepH,YAC1C,IAA5BoH,EAAeV,WAA2BrP,EAAQqP,SAAWU,EAAeV,eAClD,IAA1BU,EAAeC,SAAyBhQ,EAAQgQ,OAASD,EAAeC,QAEnF,IAAIC,EAAYnP,KAAKoP,4BAA6B,OAAQpa,EAAMia,GAC/DI,EAAUrP,KAAKoP,4BAA6B,KAAMhB,EAAIa,GAKvD,GAAIb,EAAG/Y,UAAUwV,SAAU,qBAInBwE,EAAQC,OAAgB,QAE3Bta,EAAKK,UAAUwV,SAAU,aAAe,EAEjB7V,EAAKG,UAAUM,MAAOwX,IAA0B,CAAC,KAAM,MACzDmB,EAAGjZ,UAAUM,MAAOwX,IAA0B,CAAC,KAAM,IAII,YAApCW,EAAiBG,gBAC7DK,EAAG/Y,UAAUC,IAAK,UAAW,YAUhC,IAAiC,IAA7B2Z,EAAeM,YAAgD,IAAzBN,EAAeO,MAAkB,CAE1E,IAAIC,EAAoBzP,KAAKD,OAAO2P,WAEhCC,EAAQ,CACXC,GAAKT,EAAUS,EAAIP,EAAQO,GAAMH,EACjCI,GAAKV,EAAUU,EAAIR,EAAQQ,GAAMJ,EACjCK,OAAQX,EAAUxM,MAAQ0M,EAAQ1M,MAClCoN,OAAQZ,EAAU/W,OAASiX,EAAQjX,QAIpCuX,EAAMC,EAAI3T,KAAK+T,MAAiB,IAAVL,EAAMC,GAAa,IACzCD,EAAME,EAAI5T,KAAK+T,MAAiB,IAAVL,EAAME,GAAa,IACzCF,EAAMG,OAAS7T,KAAK+T,MAAsB,IAAfL,EAAMG,QAAkB,IACnDH,EAAMG,OAAS7T,KAAK+T,MAAsB,IAAfL,EAAMG,QAAkB,IAEnD,IAAIP,GAAyC,IAA7BN,EAAeM,YAAqC,IAAZI,EAAMC,GAAuB,IAAZD,EAAME,GAC9EL,GAAiC,IAAzBP,EAAeO,QAAsC,IAAjBG,EAAMG,QAAiC,IAAjBH,EAAMI,QAGzE,GAAIR,GAAaC,EAAQ,CAExB,IAAI3Z,EAAY,GAEZ0Z,GAAY1Z,EAAU0J,KAAO,aAAYoQ,EAAMC,QAAQD,EAAME,QAC7DL,GAAQ3Z,EAAU0J,KAAO,SAAQoQ,EAAMG,WAAWH,EAAMI,WAE5DZ,EAAUG,OAAkB,UAAIzZ,EAAUsM,KAAM,KAChDgN,EAAUG,OAAO,oBAAsB,WAEvCD,EAAQC,OAAkB,UAAI,QAOhC,IAAK,IAAIW,KAAgBZ,EAAQC,OAAS,CACzC,MAAMY,EAAUb,EAAQC,OAAOW,GACzBE,EAAYhB,EAAUG,OAAOW,GAE/BC,IAAYC,SACRd,EAAQC,OAAOW,KAKQ,IAA1BC,EAAQE,gBACXf,EAAQC,OAAOW,GAAgBC,EAAQ9a,QAGR,IAA5B+a,EAAUC,gBACbjB,EAAUG,OAAOW,GAAgBE,EAAU/a,QAK9C,IAAI6Y,EAAM,GAENoC,EAAoB9W,OAAO+W,KAAMjB,EAAQC,QAI7C,GAAIe,EAAkBxZ,OAAS,EAAI,CAGlCsY,EAAUG,OAAmB,WAAI,OAGjCD,EAAQC,OAAmB,WAAK,OAAMpQ,EAAQqP,aAAarP,EAAQgQ,UAAUhQ,EAAQ2I,SACrFwH,EAAQC,OAAO,uBAAyBe,EAAkBlO,KAAM,MAChEkN,EAAQC,OAAO,eAAiBe,EAAkBlO,KAAM,MAYxD8L,EAAO,8BAA+BW,EAAI,OAR5BrV,OAAO+W,KAAMnB,EAAUG,QAASjQ,KAAK4Q,GAC3CA,EAAe,KAAOd,EAAUG,OAAOW,GAAgB,iBAC3D9N,KAAM,IAMH,6DACwDyM,EAAI,OALvDrV,OAAO+W,KAAMjB,EAAQC,QAASjQ,KAAK4Q,GACvCA,EAAe,KAAOZ,EAAQC,OAAOW,GAAgB,iBACzD9N,KAAM,IAGwE,IAInF,OAAO8L,EAYRJ,sBAAuBjY,EAAS2a,GAE/B,IAAIrR,EAAU,CACbgQ,OAAQlP,KAAKD,OAAOO,YAAYkQ,kBAChCjC,SAAUvO,KAAKD,OAAOO,YAAYmQ,oBAClC5I,MAAO,GAMR,GAHA3I,EAAU1K,EAAQ0K,EAASqR,GAGvB3a,EAAQU,WAAa,CACxB,IAAIoa,EAAqBra,EAAST,EAAQU,WAAY,8BAClDoa,IACHxR,EAAUc,KAAK6N,sBAAuB6C,EAAoBxR,IAgB5D,OAZItJ,EAAQoQ,QAAQwK,oBACnBtR,EAAQgQ,OAAStZ,EAAQoQ,QAAQwK,mBAG9B5a,EAAQoQ,QAAQyK,sBACnBvR,EAAQqP,SAAW7Y,WAAYE,EAAQoQ,QAAQyK,sBAG5C7a,EAAQoQ,QAAQ2K,mBACnBzR,EAAQ2I,MAAQnS,WAAYE,EAAQoQ,QAAQ2K,mBAGtCzR,EAWRkQ,4BAA6BwB,EAAWhb,EAASqZ,GAEhD,IAAI7J,EAASpF,KAAKD,OAAOO,YAErBuQ,EAAa,CAAEvB,OAAQ,IAG3B,IAAiC,IAA7BL,EAAeM,YAAgD,IAAzBN,EAAeO,MAAkB,CAC1E,IAAIsB,EAIJ,GAAsC,mBAA3B7B,EAAe8B,QACzBD,EAAS7B,EAAe8B,QAASnb,QAGjC,GAAIwP,EAAO4L,OAGVF,EAASlb,EAAQqb,4BAEb,CACJ,IAAIzB,EAAQxP,KAAKD,OAAO2P,WACxBoB,EAAS,CACRlB,EAAGha,EAAQsb,WAAa1B,EACxBK,EAAGja,EAAQub,UAAY3B,EACvB7M,MAAO/M,EAAQyW,YAAcmD,EAC7BpX,OAAQxC,EAAQ2C,aAAeiX,GAKlCqB,EAAWjB,EAAIkB,EAAOlB,EACtBiB,EAAWhB,EAAIiB,EAAOjB,EACtBgB,EAAWlO,MAAQmO,EAAOnO,MAC1BkO,EAAWzY,OAAS0Y,EAAO1Y,OAG5B,MAAMgZ,EAAiB5U,iBAAkB5G,GAgCzC,OA7BEqZ,EAAeK,QAAUlK,EAAOiM,mBAAoBpW,SAASnF,IAC9D,IAAIV,EAIiB,iBAAVU,IAAqBA,EAAQ,CAAEwb,SAAUxb,SAE1B,IAAfA,EAAMd,MAAsC,SAAd4b,EACxCxb,EAAQ,CAAEA,MAAOU,EAAMd,KAAMob,eAAe,QAEhB,IAAbta,EAAMsY,IAAoC,OAAdwC,EAC3Cxb,EAAQ,CAAEA,MAAOU,EAAMsY,GAAIgC,eAAe,IAInB,gBAAnBta,EAAMwb,WACTlc,EAAQM,WAAY0b,EAAe,gBAAmB1b,WAAY0b,EAAe,eAG9EvK,MAAMzR,KACTA,EAAQgc,EAAetb,EAAMwb,YAIjB,KAAVlc,IACHyb,EAAWvB,OAAOxZ,EAAMwb,UAAYlc,MAI/Byb,EAeR3C,0BAA2Bb,EAAWC,GAErC,IAEIiE,GAFgE,mBAA/CvR,KAAKD,OAAOO,YAAYkR,mBAAoCxR,KAAKD,OAAOO,YAAYkR,mBAAqBxR,KAAKyR,qBAE/Grb,KAAM4J,KAAMqN,EAAWC,GAEvCoE,EAAW,GAGf,OAAOH,EAAM3W,QAAQ,CAAE+W,EAAMC,KAC5B,IAAqC,IAAjCF,EAAS/N,QAASgO,EAAKvD,IAE1B,OADAsD,EAASnS,KAAMoS,EAAKvD,KACb,KAYVqD,oBAAqBpE,EAAWC,GAE/B,IAAIiE,EAAQ,GAEZ,MACMM,EAAY,gCA0DlB,OAtDA7R,KAAK8R,uBAAwBP,EAAOlE,EAAWC,EAAS,aAAavW,GAC7DA,EAAKgb,SAAW,MAAQhb,EAAK8J,aAAc,aAInDb,KAAK8R,uBAAwBP,EAAOlE,EAAWC,EAASuE,GAAW9a,GAC3DA,EAAKgb,SAAW,MAAQhb,EAAKmR,YAIrClI,KAAK8R,uBAAwBP,EAAOlE,EAAWC,EAb5B,sBAaiDvW,GAC5DA,EAAKgb,SAAW,OAAUhb,EAAK8J,aAAc,QAAW9J,EAAK8J,aAAc,eAInFb,KAAK8R,uBAAwBP,EAAOlE,EAAWC,EApB7B,OAoBiDvW,GAC3DA,EAAKgb,SAAW,MAAQhb,EAAKmR,YAGrCqJ,EAAMtW,SAAS0W,IAGV5b,EAAS4b,EAAK3c,KAAM6c,GACvBF,EAAKzS,QAAU,CAAEsQ,OAAO,GAGhBzZ,EAAS4b,EAAK3c,KA/BN,SAmChB2c,EAAKzS,QAAU,CAAEsQ,OAAO,EAAOF,OAAQ,CAAE,QAAS,WAGlDtP,KAAK8R,uBAAwBP,EAAOI,EAAK3c,KAAM2c,EAAKvD,GAAI,uBAAuBrX,GACvEA,EAAKib,aACV,CACFxC,OAAO,EACPF,OAAQ,GACRyB,QAAS/Q,KAAKiS,oBAAoB/R,KAAMF,QAIzCA,KAAK8R,uBAAwBP,EAAOI,EAAK3c,KAAM2c,EAAKvD,GAAI,4CAA4CrX,GAC5FA,EAAK8J,aAAc,qBACxB,CACF2O,OAAO,EACPF,OAAQ,CAAE,SACVyB,QAAS/Q,KAAKiS,oBAAoB/R,KAAMF,WAKxCA,MAEIuR,EAWRU,oBAAqBrc,GAEpB,MAAM6Z,EAAoBzP,KAAKD,OAAO2P,WAEtC,MAAO,CACNE,EAAG3T,KAAK+T,MAASpa,EAAQsb,WAAazB,EAAsB,KAAQ,IACpEI,EAAG5T,KAAK+T,MAASpa,EAAQub,UAAY1B,EAAsB,KAAQ,IACnE9M,MAAO1G,KAAK+T,MAASpa,EAAQyW,YAAcoD,EAAsB,KAAQ,IACzErX,OAAQ6D,KAAK+T,MAASpa,EAAQ2C,aAAekX,EAAsB,KAAQ,KAgB7EqC,uBAAwBP,EAAOW,EAAWC,EAASrd,EAAUsd,EAAYxE,GAExE,IAAIyE,EAAc,GACdC,EAAY,GAEhB,GAAGlY,MAAMhE,KAAM8b,EAAUjd,iBAAkBH,IAAamG,SAAS,CAAErF,EAASjB,KAC3E,MAAMmF,EAAMsY,EAAYxc,GACL,iBAARkE,GAAoBA,EAAIjD,SAClCwb,EAAYvY,GAAOuY,EAAYvY,IAAQ,GACvCuY,EAAYvY,GAAKyF,KAAM3J,OAIzB,GAAGwE,MAAMhE,KAAM+b,EAAQld,iBAAkBH,IAAamG,SAAS,CAAErF,EAASjB,KACzE,MAAMmF,EAAMsY,EAAYxc,GAIxB,IAAI2c,EAGJ,GANAD,EAAUxY,GAAOwY,EAAUxY,IAAQ,GACnCwY,EAAUxY,GAAKyF,KAAM3J,GAKjByc,EAAYvY,GAAO,CACtB,MAAM0Y,EAAeF,EAAUxY,GAAKjD,OAAS,EACvC4b,EAAiBJ,EAAYvY,GAAKjD,OAAS,EAI7Cwb,EAAYvY,GAAM0Y,IACrBD,EAAcF,EAAYvY,GAAM0Y,GAChCH,EAAYvY,GAAM0Y,GAAiB,MAI3BH,EAAYvY,GAAM2Y,KAC1BF,EAAcF,EAAYvY,GAAM2Y,GAChCJ,EAAYvY,GAAM2Y,GAAmB,MAKnCF,GACHhB,EAAMhS,KAAK,CACVvK,KAAMud,EACNnE,GAAIxY,EACJsJ,QAAS0O,OAmBba,gCAAiCiE,GAEhC,MAAO,GAAGtY,MAAMhE,KAAMsc,EAAYC,UAAWC,QAAQ,CAAEC,EAAQjd,KAE9D,MAAMkd,EAA2Bld,EAAQmN,cAAe,8BAaxD,OARKnN,EAAQ4K,aAAc,6BAAiCsS,GAC3DD,EAAOtT,KAAM3J,GAGVA,EAAQmN,cAAe,gCAC1B8P,EAASA,EAAOE,OAAQ/S,KAAKyO,gCAAiC7Y,KAGxDid,CAAM,GAEX,KCpnBU,MAAMG,EAEpBlT,YAAaC,GAEZC,KAAKD,OAASA,EAOfoF,UAAWC,EAAQC,IAEO,IAArBD,EAAO6N,UACVjT,KAAKkT,WAE2B,IAAxB7N,EAAU4N,WAClBjT,KAAKmT,SASPD,UAECte,EAAUoL,KAAKD,OAAO0D,mBAAoB,aAAcxI,SAASrF,IAChEA,EAAQP,UAAUC,IAAK,WACvBM,EAAQP,UAAUE,OAAQ,mBAAoB,IAShD4d,SAECve,EAAUoL,KAAKD,OAAO0D,mBAAoB,aAAcxI,SAASrF,IAChEA,EAAQP,UAAUE,OAAQ,WAC1BK,EAAQP,UAAUE,OAAQ,mBAAoB,IAWhD6d,kBAEC,IAAIrI,EAAe/K,KAAKD,OAAO6F,kBAC/B,GAAImF,GAAgB/K,KAAKD,OAAOO,YAAY2S,UAAY,CACvD,IAAIA,EAAYlI,EAAa9V,iBAAkB,4BAC3Coe,EAAkBtI,EAAa9V,iBAAkB,0CAErD,MAAO,CACNqe,KAAML,EAAUpc,OAASwc,EAAgBxc,OAAS,EAClD0c,OAAQF,EAAgBxc,QAIzB,MAAO,CAAEyc,MAAM,EAAOC,MAAM,GAwB9BC,KAAMP,EAAWQ,GAAU,GAE1BR,EAAYle,MAAMC,KAAMie,GAExB,IAAIS,EAAU,GACbC,EAAY,GACZC,EAAS,GAGVX,EAAUhY,SAAS4Y,IAClB,GAAIA,EAASrT,aAAc,uBAA0B,CACpD,IAAIoR,EAAQjJ,SAAUkL,EAAShT,aAAc,uBAAyB,IAEjE6S,EAAQ9B,KACZ8B,EAAQ9B,GAAS,IAGlB8B,EAAQ9B,GAAOrS,KAAMsU,QAGrBF,EAAUpU,KAAM,CAAEsU,OAMpBH,EAAUA,EAAQX,OAAQY,GAI1B,IAAI/B,EAAQ,EAaZ,OATA8B,EAAQzY,SAAS6Y,IAChBA,EAAM7Y,SAAS4Y,IACdD,EAAOrU,KAAMsU,GACbA,EAASjT,aAAc,sBAAuBgR,EAAO,IAGtDA,GAAQ,KAGU,IAAZ6B,EAAmBC,EAAUE,EAQrCG,UAEC/T,KAAKD,OAAO+F,sBAAsB7K,SAAS+Y,IAE1C,IAAI/H,EAAiBrX,EAAUof,EAAiB,WAChD/H,EAAehR,SAAS,CAAEgZ,EAAepE,KAExC7P,KAAKwT,KAAMS,EAAchf,iBAAkB,aAAe,GAExD+K,MAE2B,IAA1BiM,EAAepV,QAAemJ,KAAKwT,KAAMQ,EAAgB/e,iBAAkB,aAAe,IAgBhGyQ,OAAQkM,EAAOqB,EAAWvS,EAAQV,KAAKD,OAAO6F,mBAE7C,IAAIsO,EAAmB,CACtBC,MAAO,GACPC,OAAQ,IAGT,GAAI1T,GAASV,KAAKD,OAAOO,YAAY2S,YAEpCA,EAAYA,GAAajT,KAAKwT,KAAM9S,EAAMzL,iBAAkB,eAE9C4B,OAAS,CAEtB,IAAIwd,EAAW,EAEf,GAAqB,iBAAVzC,EAAqB,CAC/B,IAAI0C,EAAkBtU,KAAKwT,KAAM9S,EAAMzL,iBAAkB,sBAAwBgD,MAC7Eqc,IACH1C,EAAQjJ,SAAU2L,EAAgBzT,aAAc,wBAA2B,EAAG,KAIhF9L,MAAMC,KAAMie,GAAYhY,SAAS,CAAEpG,EAAIF,KAStC,GAPIE,EAAG2L,aAAc,yBACpB7L,EAAIgU,SAAU9T,EAAGgM,aAAc,uBAAyB,KAGzDwT,EAAWpY,KAAKE,IAAKkY,EAAU1f,GAG3BA,GAAKid,EAAQ,CAChB,IAAI2C,EAAa1f,EAAGQ,UAAUwV,SAAU,WACxChW,EAAGQ,UAAUC,IAAK,WAClBT,EAAGQ,UAAUE,OAAQ,oBAEjBZ,IAAMid,IAET5R,KAAKD,OAAOyU,eAAgBxU,KAAKD,OAAO0U,cAAe5f,IAEvDA,EAAGQ,UAAUC,IAAK,oBAClB0K,KAAKD,OAAOyL,aAAa5H,qBAAsB/O,IAG3C0f,IACJL,EAAiBC,MAAM5U,KAAM1K,GAC7BmL,KAAKD,OAAOjD,cAAc,CACzB9G,OAAQnB,EACRwC,KAAM,UACNqd,SAAS,SAKP,CACJ,IAAIH,EAAa1f,EAAGQ,UAAUwV,SAAU,WACxChW,EAAGQ,UAAUE,OAAQ,WACrBV,EAAGQ,UAAUE,OAAQ,oBAEjBgf,IACHvU,KAAKD,OAAOyL,aAAa3G,oBAAqBhQ,GAC9Cqf,EAAiBE,OAAO7U,KAAM1K,GAC9BmL,KAAKD,OAAOjD,cAAc,CACzB9G,OAAQnB,EACRwC,KAAM,SACNqd,SAAS,SAUb9C,EAAyB,iBAAVA,EAAqBA,GAAS,EAC7CA,EAAQ3V,KAAKE,IAAKF,KAAKC,IAAK0V,EAAOyC,IAAa,GAChD3T,EAAME,aAAc,gBAAiBgR,GAMvC,OAAOsC,EAYRnK,KAAMrJ,EAAQV,KAAKD,OAAO6F,mBAEzB,OAAO5F,KAAKwT,KAAM9S,EAAMzL,iBAAkB,cAe3C0f,KAAM/C,EAAOgD,EAAS,GAErB,IAAI7J,EAAe/K,KAAKD,OAAO6F,kBAC/B,GAAImF,GAAgB/K,KAAKD,OAAOO,YAAY2S,UAAY,CAEvD,IAAIA,EAAYjT,KAAKwT,KAAMzI,EAAa9V,iBAAkB,6BAC1D,GAAIge,EAAUpc,OAAS,CAGtB,GAAqB,iBAAV+a,EAAqB,CAC/B,IAAIiD,EAAsB7U,KAAKwT,KAAMzI,EAAa9V,iBAAkB,qCAAuCgD,MAG1G2Z,EADGiD,EACKlM,SAAUkM,EAAoBhU,aAAc,wBAA2B,EAAG,KAGzE,EAKX+Q,GAASgD,EAET,IAAIV,EAAmBlU,KAAK0F,OAAQkM,EAAOqB,GA6B3C,OA3BIiB,EAAiBE,OAAOvd,QAC3BmJ,KAAKD,OAAOjD,cAAc,CACzBzF,KAAM,iBACN2S,KAAM,CACL6J,SAAUK,EAAiBE,OAAO,GAClCnB,UAAWiB,EAAiBE,UAK3BF,EAAiBC,MAAMtd,QAC1BmJ,KAAKD,OAAOjD,cAAc,CACzBzF,KAAM,gBACN2S,KAAM,CACL6J,SAAUK,EAAiBC,MAAM,GACjClB,UAAWiB,EAAiBC,SAK/BnU,KAAKD,OAAOqE,SAASsB,SACrB1F,KAAKD,OAAO+U,SAASpP,SAEjB1F,KAAKD,OAAOO,YAAYyU,eAC3B/U,KAAKD,OAAOnI,SAASod,cAGXd,EAAiBC,MAAMtd,SAAUqd,EAAiBE,OAAOvd,SAMtE,OAAO,EAUR0c,OAEC,OAAOvT,KAAK2U,KAAM,KAAM,GAUzBrB,OAEC,OAAOtT,KAAK2U,KAAM,MAAO,IC3WZ,MAAMM,EAEpBnV,YAAaC,GAEZC,KAAKD,OAASA,EAEdC,KAAKjF,QAAS,EAEdiF,KAAKkV,eAAiBlV,KAAKkV,eAAehV,KAAMF,MAQjDmV,WAGC,GAAInV,KAAKD,OAAOO,YAAY8U,WAAapV,KAAKD,OAAOK,iBAAmBJ,KAAKqV,WAAa,CAEzFrV,KAAKjF,QAAS,EAEdiF,KAAKD,OAAOmF,mBAAmB7P,UAAUC,IAAK,YAG9C0K,KAAKD,OAAOuV,kBAIZtV,KAAKD,OAAO0D,mBAAmBvM,YAAa8I,KAAKD,OAAOwV,yBAGxD3gB,EAAUoL,KAAKD,OAAOmF,mBAAoB2H,GAAkB5R,SAASyF,IAC/DA,EAAMrL,UAAUwV,SAAU,UAC9BnK,EAAM2D,iBAAkB,QAASrE,KAAKkV,gBAAgB,MAKxD,MAAMM,EAAS,GACTC,EAAYzV,KAAKD,OAAO2V,uBAC9B1V,KAAK2V,mBAAqBF,EAAU9S,MAAQ6S,EAC5CxV,KAAK4V,oBAAsBH,EAAUrd,OAASod,EAG1CxV,KAAKD,OAAOO,YAAY4K,MAC3BlL,KAAK2V,oBAAsB3V,KAAK2V,oBAGjC3V,KAAKD,OAAO8V,yBAEZ7V,KAAKgD,SACLhD,KAAK0F,SAEL1F,KAAKD,OAAOiD,SAEZ,MAAMoD,EAAUpG,KAAKD,OAAOsG,aAG5BrG,KAAKD,OAAOjD,cAAc,CACzBzF,KAAM,gBACN2S,KAAM,CACL8L,OAAU1P,EAAQE,EAClByP,OAAU3P,EAAQK,EAClBsE,aAAgB/K,KAAKD,OAAO6F,sBAYhC5C,SAGChD,KAAKD,OAAO+F,sBAAsB7K,SAAS,CAAE+a,EAAQ1P,KACpD0P,EAAOpV,aAAc,eAAgB0F,GACrC3Q,EAAkBqgB,EAAQ,eAAmB1P,EAAItG,KAAK2V,mBAAuB,aAEzEK,EAAO3gB,UAAUwV,SAAU,UAE9BjW,EAAUohB,EAAQ,WAAY/a,SAAS,CAAEgb,EAAQxP,KAChDwP,EAAOrV,aAAc,eAAgB0F,GACrC2P,EAAOrV,aAAc,eAAgB6F,GAErC9Q,EAAkBsgB,EAAQ,kBAAsBxP,EAAIzG,KAAK4V,oBAAwB,SAAU,OAO9F7gB,MAAMC,KAAMgL,KAAKD,OAAOwV,wBAAwBnK,YAAanQ,SAAS,CAAEib,EAAa5P,KACpF3Q,EAAkBugB,EAAa,eAAmB5P,EAAItG,KAAK2V,mBAAuB,aAElF/gB,EAAUshB,EAAa,qBAAsBjb,SAAS,CAAEkb,EAAa1P,KACpE9Q,EAAkBwgB,EAAa,kBAAsB1P,EAAIzG,KAAK4V,oBAAwB,SAAU,GAC9F,IASLlQ,SAEC,MAAM0Q,EAAOna,KAAKC,IAAK0D,OAAOyW,WAAYzW,OAAO0W,aAC3C9G,EAAQvT,KAAKE,IAAKia,EAAO,EAAG,KAAQA,EACpChQ,EAAUpG,KAAKD,OAAOsG,aAE5BrG,KAAKD,OAAOwW,gBAAiB,CAC5BnB,SAAU,CACT,SAAU5F,EAAO,IACjB,eAAkBpJ,EAAQE,EAAItG,KAAK2V,mBAAsB,MACzD,eAAkBvP,EAAQK,EAAIzG,KAAK4V,oBAAuB,OACzDzT,KAAM,OASVqU,aAGC,GAAIxW,KAAKD,OAAOO,YAAY8U,SAAW,CAEtCpV,KAAKjF,QAAS,EAEdiF,KAAKD,OAAOmF,mBAAmB7P,UAAUE,OAAQ,YAKjDyK,KAAKD,OAAOmF,mBAAmB7P,UAAUC,IAAK,yBAE9CgJ,YAAY,KACX0B,KAAKD,OAAOmF,mBAAmB7P,UAAUE,OAAQ,wBAAyB,GACxE,GAGHyK,KAAKD,OAAOmF,mBAAmBhO,YAAa8I,KAAKD,OAAOwV,yBAGxD3gB,EAAUoL,KAAKD,OAAOmF,mBAAoB2H,GAAkB5R,SAASyF,IACpE/K,EAAkB+K,EAAO,IAEzBA,EAAM4D,oBAAqB,QAAStE,KAAKkV,gBAAgB,EAAM,IAIhEtgB,EAAUoL,KAAKD,OAAOwV,wBAAyB,qBAAsBta,SAASgG,IAC7EtL,EAAkBsL,EAAY,GAAI,IAGnCjB,KAAKD,OAAOwW,gBAAiB,CAAEnB,SAAU,KAEzC,MAAMhP,EAAUpG,KAAKD,OAAOsG,aAE5BrG,KAAKD,OAAOW,MAAO0F,EAAQE,EAAGF,EAAQK,GACtCzG,KAAKD,OAAOiD,SACZhD,KAAKD,OAAO0W,eAGZzW,KAAKD,OAAOjD,cAAc,CACzBzF,KAAM,iBACN2S,KAAM,CACL8L,OAAU1P,EAAQE,EAClByP,OAAU3P,EAAQK,EAClBsE,aAAgB/K,KAAKD,OAAO6F,sBAchC8Q,OAAQC,GAEiB,kBAAbA,EACVA,EAAW3W,KAAKmV,WAAanV,KAAKwW,aAGlCxW,KAAKqV,WAAarV,KAAKwW,aAAexW,KAAKmV,WAW7CE,WAEC,OAAOrV,KAAKjF,OASbma,eAAgB3Q,GAEf,GAAIvE,KAAKqV,WAAa,CACrB9Q,EAAMqS,iBAEN,IAAIhhB,EAAU2O,EAAMvO,OAEpB,KAAOJ,IAAYA,EAAQmc,SAAStc,MAAO,cAC1CG,EAAUA,EAAQU,WAGnB,GAAIV,IAAYA,EAAQP,UAAUwV,SAAU,cAE3C7K,KAAKwW,aAED5gB,EAAQmc,SAAStc,MAAO,cAAgB,CAC3C,IAAI6Q,EAAIqC,SAAU/S,EAAQiL,aAAc,gBAAkB,IACzD4F,EAAIkC,SAAU/S,EAAQiL,aAAc,gBAAkB,IAEvDb,KAAKD,OAAOW,MAAO4F,EAAGG,MCjPZ,MAAMoQ,EAEpB/W,YAAaC,GAEZC,KAAKD,OAASA,EAIdC,KAAK8W,UAAY,GAGjB9W,KAAK+W,SAAW,GAEhB/W,KAAKgX,kBAAoBhX,KAAKgX,kBAAkB9W,KAAMF,MACtDA,KAAKiX,mBAAqBjX,KAAKiX,mBAAmB/W,KAAMF,MAOzDmF,UAAWC,EAAQC,GAEY,WAA1BD,EAAO8R,gBACVlX,KAAK8W,UAAU,mDAAqD,aACpE9W,KAAK8W,UAAU,yCAAqD,mBAGpE9W,KAAK8W,UAAU,eAAmB,aAClC9W,KAAK8W,UAAU,qBAAmC,iBAClD9W,KAAK8W,UAAU,iBAAmB,gBAClC9W,KAAK8W,UAAU,iBAAmB,iBAClC9W,KAAK8W,UAAU,iBAAmB,cAClC9W,KAAK8W,UAAU,iBAAmB,iBAGnC9W,KAAK8W,UAAU,wCAAiD,6BAChE9W,KAAK8W,UAAU,0CAAiD,2BAChE9W,KAAK8W,UAAU,WAAmC,QAClD9W,KAAK8W,UAAa,EAAgC,aAClD9W,KAAK8W,UAAa,EAAgC,gBAClD9W,KAAK8W,UAAU,UAAmC,iBAOnD5W,OAEClJ,SAASqN,iBAAkB,UAAWrE,KAAKgX,mBAAmB,GAC9DhgB,SAASqN,iBAAkB,WAAYrE,KAAKiX,oBAAoB,GAOjEE,SAECngB,SAASsN,oBAAqB,UAAWtE,KAAKgX,mBAAmB,GACjEhgB,SAASsN,oBAAqB,WAAYtE,KAAKiX,oBAAoB,GAQpEG,cAAeC,EAASC,GAEA,iBAAZD,GAAwBA,EAAQhP,QAC1CrI,KAAK+W,SAASM,EAAQhP,SAAW,CAChCiP,SAAUA,EACVxd,IAAKud,EAAQvd,IACbyd,YAAaF,EAAQE,aAItBvX,KAAK+W,SAASM,GAAW,CACxBC,SAAUA,EACVxd,IAAK,KACLyd,YAAa,MAShBC,iBAAkBnP,UAEVrI,KAAK+W,SAAS1O,GAStBoP,WAAYpP,GAEXrI,KAAKgX,kBAAmB,CAAE3O,YAU3BqP,yBAA0B5d,EAAK1E,GAE9B4K,KAAK8W,UAAUhd,GAAO1E,EAIvBuiB,eAEC,OAAO3X,KAAK8W,UAIbc,cAEC,OAAO5X,KAAK+W,SASbE,mBAAoB1S,GAGfA,EAAMsT,UAA+B,KAAnBtT,EAAMuT,UAC3B9X,KAAKD,OAAOgY,aAUdf,kBAAmBzS,GAElB,IAAIa,EAASpF,KAAKD,OAAOO,YAIzB,GAAwC,mBAA7B8E,EAAO4S,oBAAwE,IAApC5S,EAAO4S,kBAAkBzT,GAC9E,OAAO,EAKR,GAAiC,YAA7Ba,EAAO4S,oBAAoChY,KAAKD,OAAOkY,YAC1D,OAAO,EAIR,IAAI5P,EAAU9D,EAAM8D,QAGhB6P,GAAsBlY,KAAKD,OAAOoY,gBAEtCnY,KAAKD,OAAOqY,YAAa7T,GAGzB,IAAI8T,EAAoBrhB,SAASshB,gBAA8D,IAA7CthB,SAASshB,cAAcC,kBACrEC,EAAuBxhB,SAASshB,eAAiBthB,SAASshB,cAAc3X,SAAW,kBAAkBxH,KAAMnC,SAASshB,cAAc3X,SAClI8X,EAAuBzhB,SAASshB,eAAiBthB,SAASshB,cAAcnjB,WAAa,iBAAiBgE,KAAMnC,SAASshB,cAAcnjB,WAMnIujB,KAH6E,IAA3D,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI/U,QAASY,EAAM8D,UAGtB9D,EAAMsT,UAAYtT,EAAMoU,UAC5DpU,EAAMsT,UAAYtT,EAAMoU,QAAUpU,EAAMqU,SAAWrU,EAAMsU,SAIjE,GAAIR,GAAqBG,GAAwBC,GAAwBC,EAAiB,OAG1F,IACI5e,EADAgf,EAAiB,CAAC,GAAG,GAAG,IAAI,KAIhC,GAA+B,iBAApB1T,EAAO2T,SACjB,IAAKjf,KAAOsL,EAAO2T,SACW,gBAAzB3T,EAAO2T,SAASjf,IACnBgf,EAAevZ,KAAMoJ,SAAU7O,EAAK,KAKvC,GAAIkG,KAAKD,OAAOiZ,aAAqD,IAAvCF,EAAenV,QAAS0E,GACrD,OAAO,EAKR,IAAI4Q,EAA0C,WAA1B7T,EAAO8R,iBAAgClX,KAAKD,OAAOmZ,wBAA0BlZ,KAAKD,OAAOoZ,oBAEzGC,GAAY,EAGhB,GAA+B,iBAApBhU,EAAO2T,SAEjB,IAAKjf,KAAOsL,EAAO2T,SAGlB,GAAIpQ,SAAU7O,EAAK,MAASuO,EAAU,CAErC,IAAIjT,EAAQgQ,EAAO2T,SAAUjf,GAGR,mBAAV1E,EACVA,EAAMikB,MAAO,KAAM,CAAE9U,IAGI,iBAAVnP,GAAsD,mBAAzB4K,KAAKD,OAAQ3K,IACzD4K,KAAKD,OAAQ3K,GAAQgB,OAGtBgjB,GAAY,EASf,IAAkB,IAAdA,EAEH,IAAKtf,KAAOkG,KAAK+W,SAGhB,GAAIpO,SAAU7O,EAAK,MAASuO,EAAU,CAErC,IAAIiR,EAAStZ,KAAK+W,SAAUjd,GAAMwd,SAGZ,mBAAXgC,EACVA,EAAOD,MAAO,KAAM,CAAE9U,IAGI,iBAAX+U,GAAwD,mBAA1BtZ,KAAKD,OAAQuZ,IAC1DtZ,KAAKD,OAAQuZ,GAASljB,OAGvBgjB,GAAY,GAMG,IAAdA,IAGHA,GAAY,EAGI,KAAZ/Q,GAA8B,KAAZA,EACrBrI,KAAKD,OAAOuT,KAAK,CAACiG,cAAehV,EAAMoU,SAGnB,KAAZtQ,GAA8B,KAAZA,EAC1BrI,KAAKD,OAAOwT,KAAK,CAACgG,cAAehV,EAAMoU,SAGnB,KAAZtQ,GAA8B,KAAZA,EACtB9D,EAAMsT,SACT7X,KAAKD,OAAOW,MAAO,IAEVV,KAAKD,OAAOqV,SAASC,YAAc4D,EAC5CjZ,KAAKD,OAAOuT,KAAK,CAACiG,cAAehV,EAAMoU,SAGvC3Y,KAAKD,OAAOyZ,KAAK,CAACD,cAAehV,EAAMoU,SAIpB,KAAZtQ,GAA8B,KAAZA,EACtB9D,EAAMsT,SACT7X,KAAKD,OAAOW,MAAOV,KAAKD,OAAO+F,sBAAsBjP,OAAS,IAErDmJ,KAAKD,OAAOqV,SAASC,YAAc4D,EAC5CjZ,KAAKD,OAAOwT,KAAK,CAACgG,cAAehV,EAAMoU,SAGvC3Y,KAAKD,OAAO0Z,MAAM,CAACF,cAAehV,EAAMoU,SAIrB,KAAZtQ,GAA8B,KAAZA,EACtB9D,EAAMsT,SACT7X,KAAKD,OAAOW,WAAOf,EAAW,IAErBK,KAAKD,OAAOqV,SAASC,YAAc4D,EAC5CjZ,KAAKD,OAAOuT,KAAK,CAACiG,cAAehV,EAAMoU,SAGvC3Y,KAAKD,OAAO2Z,GAAG,CAACH,cAAehV,EAAMoU,SAIlB,KAAZtQ,GAA8B,KAAZA,EACtB9D,EAAMsT,SACT7X,KAAKD,OAAOW,WAAOf,EAAWga,OAAOC,YAE5B5Z,KAAKD,OAAOqV,SAASC,YAAc4D,EAC5CjZ,KAAKD,OAAOwT,KAAK,CAACgG,cAAehV,EAAMoU,SAGvC3Y,KAAKD,OAAO8Z,KAAK,CAACN,cAAehV,EAAMoU,SAIpB,KAAZtQ,EACRrI,KAAKD,OAAOW,MAAO,GAGC,KAAZ2H,EACRrI,KAAKD,OAAOW,MAAOV,KAAKD,OAAO+F,sBAAsBjP,OAAS,GAG1C,KAAZwR,GACJrI,KAAKD,OAAOqV,SAASC,YACxBrV,KAAKD,OAAOqV,SAASoB,aAElBjS,EAAMsT,SACT7X,KAAKD,OAAOuT,KAAK,CAACiG,cAAehV,EAAMoU,SAGvC3Y,KAAKD,OAAOwT,KAAK,CAACgG,cAAehV,EAAMoU,UAIpB,KAAZtQ,GAA8B,KAAZA,GAA8B,KAAZA,GAA8B,KAAZA,GAA8B,MAAZA,GAA+B,MAAZA,EACnGrI,KAAKD,OAAO+Z,cAGQ,KAAZzR,EZvNmBzS,KAK9B,IAAImkB,GAHJnkB,EAAUA,GAAWoB,SAASgjB,iBAGFC,mBACvBrkB,EAAQskB,yBACRtkB,EAAQukB,yBACRvkB,EAAQwkB,sBACRxkB,EAAQykB,oBAETN,GACHA,EAAcV,MAAOzjB,IY4MnB0kB,CAAiBlV,EAAOmV,SAAWva,KAAKD,OAAOya,qBAAuBxjB,SAASgjB,iBAG3D,KAAZ3R,EACJjD,EAAOqV,oBACVza,KAAKD,OAAO2a,gBAAiBxC,GAIV,KAAZ7P,EACJjD,EAAOuV,aACV3a,KAAKD,OAAO6a,oBAIbxB,GAAY,GAOVA,EACH7U,EAAMqS,gBAAkBrS,EAAMqS,iBAGV,KAAZvO,GAA8B,KAAZA,KACS,IAA/BrI,KAAKD,OAAO8a,gBACf7a,KAAKD,OAAOqV,SAASsB,SAGtBnS,EAAMqS,gBAAkBrS,EAAMqS,kBAK/B5W,KAAKD,OAAO0W,gBCvYC,MAAMqE,EAMpBhb,YAAaC,eAFiB,sIAI7BC,KAAKD,OAASA,EAGdC,KAAK+a,gBAAkB,EAEvB/a,KAAKgb,sBAAwB,EAE7Bhb,KAAKib,mBAAqBjb,KAAKib,mBAAmB/a,KAAMF,MAIzDE,OAECN,OAAOyE,iBAAkB,aAAcrE,KAAKib,oBAAoB,GAIjE9D,SAECvX,OAAO0E,oBAAqB,aAActE,KAAKib,oBAAoB,GAYpEvT,mBAAoBwT,EAAKtb,OAAOhI,SAASsjB,KAAMhc,EAAQ,IAGtD,IAAIic,EAAOD,EAAKpjB,QAAS,QAAS,IAC9BsjB,EAAOD,EAAKpjB,MAAO,KAIvB,GAAK,WAAWoB,KAAMiiB,EAAK,MAAQD,EAAKtkB,OAwBnC,CACJ,MAAMuO,EAASpF,KAAKD,OAAOO,YAC3B,IAKCzF,EALGwgB,EAAgBjW,EAAOkW,mBAAqBpc,EAAQyI,cAAgB,EAAI,EAGxErB,EAAMqC,SAAUyS,EAAK,GAAI,IAAOC,GAAmB,EACtD5U,EAAMkC,SAAUyS,EAAK,GAAI,IAAOC,GAAmB,EAUpD,OAPIjW,EAAO2P,gBACVla,EAAI8N,SAAUyS,EAAK,GAAI,IACnBvU,MAAOhM,KACVA,OAAI8E,IAIC,CAAE2G,IAAGG,IAAG5L,KAxCiC,CAChD,IAAI6F,EAEA7F,EAGA,aAAa1B,KAAMgiB,KACtBtgB,EAAI8N,SAAUwS,EAAKpjB,MAAO,KAAME,MAAO,IACvC4C,EAAIgM,MAAMhM,QAAK8E,EAAY9E,EAC3BsgB,EAAOA,EAAKpjB,MAAO,KAAMC,SAI1B,IACC0I,EAAQ1J,SACNukB,eAAgBC,mBAAoBL,IACpC9kB,QAAQ,mBAEX,MAAQolB,IAER,GAAI/a,EACH,MAAO,IAAKV,KAAKD,OAAOsG,WAAY3F,GAAS7F,KAuB/C,OAAO,KAOR6gB,UAEC,MAAMC,EAAiB3b,KAAKD,OAAOsG,aAC7BuV,EAAa5b,KAAK0H,qBAEpBkU,EACGA,EAAWtV,IAAMqV,EAAerV,GAAKsV,EAAWnV,IAAMkV,EAAelV,QAAsB9G,IAAjBic,EAAW/gB,GACzFmF,KAAKD,OAAOW,MAAOkb,EAAWtV,EAAGsV,EAAWnV,EAAGmV,EAAW/gB,GAM5DmF,KAAKD,OAAOW,MAAOib,EAAerV,GAAK,EAAGqV,EAAelV,GAAK,GAYhEuO,SAAUnN,GAET,IAAIzC,EAASpF,KAAKD,OAAOO,YACrByK,EAAe/K,KAAKD,OAAO6F,kBAM/B,GAHAvH,aAAc2B,KAAK+a,iBAGE,iBAAVlT,EACV7H,KAAK+a,gBAAkBzc,WAAY0B,KAAKgV,SAAUnN,QAE9C,GAAIkD,EAAe,CAEvB,IAAImQ,EAAOlb,KAAK0G,UAIZtB,EAAOyW,QACVjc,OAAOhI,SAASsjB,KAAOA,EAIf9V,EAAO8V,OAEF,MAATA,EACHlb,KAAK8b,sBAAuBlc,OAAOhI,SAASmkB,SAAWnc,OAAOhI,SAASC,QAGvEmI,KAAK8b,sBAAuB,IAAMZ,KAkBtCc,aAAcpa,GAEbhC,OAAOic,QAAQG,aAAc,KAAM,KAAMpa,GACzC5B,KAAKgb,sBAAwBiB,KAAKC,MAInCJ,sBAAuBla,GAEtBvD,aAAc2B,KAAKmc,qBAEfF,KAAKC,MAAQlc,KAAKgb,sBAAwBhb,KAAKoc,4BAClDpc,KAAKgc,aAAcpa,GAGnB5B,KAAKmc,oBAAsB7d,YAAY,IAAM0B,KAAKgc,aAAcpa,IAAO5B,KAAKoc,6BAU9E1V,QAAShG,GAER,IAAIkB,EAAM,IAGNya,EAAI3b,GAASV,KAAKD,OAAO6F,kBACzBgJ,EAAKyN,EAAIA,EAAExb,aAAc,MAAS,KAClC+N,IACHA,EAAK0N,mBAAoB1N,IAG1B,IAAIgD,EAAQ5R,KAAKD,OAAOsG,WAAY3F,GAOpC,GANKV,KAAKD,OAAOO,YAAYyU,gBAC5BnD,EAAM/W,OAAI8E,GAKO,iBAAPiP,GAAmBA,EAAG/X,OAChC+K,EAAM,IAAMgN,EAIRgD,EAAM/W,GAAK,IAAI+G,GAAO,IAAMgQ,EAAM/W,OAGlC,CACJ,IAAIwgB,EAAgBrb,KAAKD,OAAOO,YAAYgb,kBAAoB,EAAI,GAChE1J,EAAMtL,EAAI,GAAKsL,EAAMnL,EAAI,GAAKmL,EAAM/W,GAAK,KAAI+G,GAAOgQ,EAAMtL,EAAI+U,IAC9DzJ,EAAMnL,EAAI,GAAKmL,EAAM/W,GAAK,KAAI+G,GAAO,KAAOgQ,EAAMnL,EAAI4U,IACtDzJ,EAAM/W,GAAK,IAAI+G,GAAO,IAAMgQ,EAAM/W,GAGvC,OAAO+G,EASRqZ,mBAAoB1W,GAEnBvE,KAAK0b,WCnOQ,MAAMa,EAEpBzc,YAAaC,GAEZC,KAAKD,OAASA,EAEdC,KAAKwc,sBAAwBxc,KAAKwc,sBAAsBtc,KAAMF,MAC9DA,KAAKyc,uBAAyBzc,KAAKyc,uBAAuBvc,KAAMF,MAChEA,KAAK0c,oBAAsB1c,KAAK0c,oBAAoBxc,KAAMF,MAC1DA,KAAK2c,sBAAwB3c,KAAK2c,sBAAsBzc,KAAMF,MAC9DA,KAAK4c,sBAAwB5c,KAAK4c,sBAAsB1c,KAAMF,MAC9DA,KAAK6c,sBAAwB7c,KAAK6c,sBAAsB3c,KAAMF,MAI/DiF,SAEC,MAAMiG,EAAMlL,KAAKD,OAAOO,YAAY4K,IAC9B4R,EAAgB9c,KAAKD,OAAOmF,mBAElClF,KAAKpK,QAAUoB,SAASC,cAAe,SACvC+I,KAAKpK,QAAQT,UAAY,WACzB6K,KAAKpK,QAAQe,UACX,6CAA6CuU,EAAM,aAAe,mHACrBA,EAAM,iBAAmB,8QAIxElL,KAAKD,OAAOmF,mBAAmBhO,YAAa8I,KAAKpK,SAGjDoK,KAAK+c,aAAenoB,EAAUkoB,EAAe,kBAC7C9c,KAAKgd,cAAgBpoB,EAAUkoB,EAAe,mBAC9C9c,KAAKid,WAAaroB,EAAUkoB,EAAe,gBAC3C9c,KAAKkd,aAAetoB,EAAUkoB,EAAe,kBAC7C9c,KAAKmd,aAAevoB,EAAUkoB,EAAe,kBAC7C9c,KAAKod,aAAexoB,EAAUkoB,EAAe,kBAG7C9c,KAAKqd,mBAAqBrd,KAAKpK,QAAQmN,cAAe,mBACtD/C,KAAKsd,kBAAoBtd,KAAKpK,QAAQmN,cAAe,kBACrD/C,KAAKud,kBAAoBvd,KAAKpK,QAAQmN,cAAe,kBAOtDoC,UAAWC,EAAQC,GAElBrF,KAAKpK,QAAQE,MAAM4G,QAAU0I,EAAOhB,SAAW,QAAU,OAEzDpE,KAAKpK,QAAQgL,aAAc,uBAAwBwE,EAAOoY,gBAC1Dxd,KAAKpK,QAAQgL,aAAc,4BAA6BwE,EAAOqY,oBAIhEvd,OAIC,IAAIwd,EAAgB,CAAE,aAAc,SAIhCpkB,IACHokB,EAAgB,CAAE,eAGnBA,EAAcziB,SAAS0iB,IACtB3d,KAAK+c,aAAa9hB,SAASpG,GAAMA,EAAGwP,iBAAkBsZ,EAAW3d,KAAKwc,uBAAuB,KAC7Fxc,KAAKgd,cAAc/hB,SAASpG,GAAMA,EAAGwP,iBAAkBsZ,EAAW3d,KAAKyc,wBAAwB,KAC/Fzc,KAAKid,WAAWhiB,SAASpG,GAAMA,EAAGwP,iBAAkBsZ,EAAW3d,KAAK0c,qBAAqB,KACzF1c,KAAKkd,aAAajiB,SAASpG,GAAMA,EAAGwP,iBAAkBsZ,EAAW3d,KAAK2c,uBAAuB,KAC7F3c,KAAKmd,aAAaliB,SAASpG,GAAMA,EAAGwP,iBAAkBsZ,EAAW3d,KAAK4c,uBAAuB,KAC7F5c,KAAKod,aAAaniB,SAASpG,GAAMA,EAAGwP,iBAAkBsZ,EAAW3d,KAAK6c,uBAAuB,IAAS,IAKxG1F,SAEC,CAAE,aAAc,SAAUlc,SAAS0iB,IAClC3d,KAAK+c,aAAa9hB,SAASpG,GAAMA,EAAGyP,oBAAqBqZ,EAAW3d,KAAKwc,uBAAuB,KAChGxc,KAAKgd,cAAc/hB,SAASpG,GAAMA,EAAGyP,oBAAqBqZ,EAAW3d,KAAKyc,wBAAwB,KAClGzc,KAAKid,WAAWhiB,SAASpG,GAAMA,EAAGyP,oBAAqBqZ,EAAW3d,KAAK0c,qBAAqB,KAC5F1c,KAAKkd,aAAajiB,SAASpG,GAAMA,EAAGyP,oBAAqBqZ,EAAW3d,KAAK2c,uBAAuB,KAChG3c,KAAKmd,aAAaliB,SAASpG,GAAMA,EAAGyP,oBAAqBqZ,EAAW3d,KAAK4c,uBAAuB,KAChG5c,KAAKod,aAAaniB,SAASpG,GAAMA,EAAGyP,oBAAqBqZ,EAAW3d,KAAK6c,uBAAuB,IAAS,IAQ3GnX,SAEC,IAAIkY,EAAS5d,KAAKD,OAAOqT,kBAGzB,IAAIpT,KAAK+c,gBAAiB/c,KAAKgd,iBAAkBhd,KAAKid,cAAejd,KAAKkd,gBAAiBld,KAAKmd,gBAAiBnd,KAAKod,cAAcniB,SAASlE,IAC5IA,EAAK1B,UAAUE,OAAQ,UAAW,cAGlCwB,EAAK6J,aAAc,WAAY,WAAY,IAIxCgd,EAAOpE,MAAOxZ,KAAK+c,aAAa9hB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAGiM,gBAAiB,WAAY,IAChH8c,EAAOnE,OAAQzZ,KAAKgd,cAAc/hB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAGiM,gBAAiB,WAAY,IAClH8c,EAAOlE,IAAK1Z,KAAKid,WAAWhiB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAGiM,gBAAiB,WAAY,IAC5G8c,EAAO/D,MAAO7Z,KAAKkd,aAAajiB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAGiM,gBAAiB,WAAY,KAGhH8c,EAAOpE,MAAQoE,EAAOlE,KAAK1Z,KAAKmd,aAAaliB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAGiM,gBAAiB,WAAY,KAC7H8c,EAAOnE,OAASmE,EAAO/D,OAAO7Z,KAAKod,aAAaniB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,WAAaT,EAAGiM,gBAAiB,WAAY,IAGpI,IAAIiK,EAAe/K,KAAKD,OAAO6F,kBAC/B,GAAImF,EAAe,CAElB,IAAI8S,EAAkB7d,KAAKD,OAAOkT,UAAUG,kBAGxCyK,EAAgBvK,MAAOtT,KAAKmd,aAAaliB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAGiM,gBAAiB,WAAY,IACvI+c,EAAgBtK,MAAOvT,KAAKod,aAAaniB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAGiM,gBAAiB,WAAY,IAIvId,KAAKD,OAAOyG,gBAAiBuE,IAC5B8S,EAAgBvK,MAAOtT,KAAKid,WAAWhiB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAGiM,gBAAiB,WAAY,IACrI+c,EAAgBtK,MAAOvT,KAAKkd,aAAajiB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAGiM,gBAAiB,WAAY,MAGvI+c,EAAgBvK,MAAOtT,KAAK+c,aAAa9hB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAGiM,gBAAiB,WAAY,IACvI+c,EAAgBtK,MAAOvT,KAAKgd,cAAc/hB,SAASpG,IAAQA,EAAGQ,UAAUC,IAAK,aAAc,WAAaT,EAAGiM,gBAAiB,WAAY,KAK9I,GAAId,KAAKD,OAAOO,YAAYwd,iBAAmB,CAE9C,IAAI1X,EAAUpG,KAAKD,OAAOsG,cAIrBrG,KAAKD,OAAOge,0BAA4BH,EAAO/D,KACnD7Z,KAAKud,kBAAkBloB,UAAUC,IAAK,cAGtC0K,KAAKud,kBAAkBloB,UAAUE,OAAQ,aAErCyK,KAAKD,OAAOO,YAAY4K,KAEtBlL,KAAKD,OAAOie,4BAA8BJ,EAAOpE,MAAsB,IAAdpT,EAAQK,EACrEzG,KAAKsd,kBAAkBjoB,UAAUC,IAAK,aAGtC0K,KAAKsd,kBAAkBjoB,UAAUE,OAAQ,cAKrCyK,KAAKD,OAAOie,4BAA8BJ,EAAOnE,OAAuB,IAAdrT,EAAQK,EACtEzG,KAAKqd,mBAAmBhoB,UAAUC,IAAK,aAGvC0K,KAAKqd,mBAAmBhoB,UAAUE,OAAQ,eAO/C8H,UAEC2C,KAAKmX,SACLnX,KAAKpK,QAAQL,SAOdinB,sBAAuBjY,GAEtBA,EAAMqS,iBACN5W,KAAKD,OAAOqY,cAEmC,WAA3CpY,KAAKD,OAAOO,YAAY4W,eAC3BlX,KAAKD,OAAOuT,OAGZtT,KAAKD,OAAOyZ,OAKdiD,uBAAwBlY,GAEvBA,EAAMqS,iBACN5W,KAAKD,OAAOqY,cAEmC,WAA3CpY,KAAKD,OAAOO,YAAY4W,eAC3BlX,KAAKD,OAAOwT,OAGZvT,KAAKD,OAAO0Z,QAKdiD,oBAAqBnY,GAEpBA,EAAMqS,iBACN5W,KAAKD,OAAOqY,cAEZpY,KAAKD,OAAO2Z,KAIbiD,sBAAuBpY,GAEtBA,EAAMqS,iBACN5W,KAAKD,OAAOqY,cAEZpY,KAAKD,OAAO8Z,OAIb+C,sBAAuBrY,GAEtBA,EAAMqS,iBACN5W,KAAKD,OAAOqY,cAEZpY,KAAKD,OAAOuT,OAIbuJ,sBAAuBtY,GAEtBA,EAAMqS,iBACN5W,KAAKD,OAAOqY,cAEZpY,KAAKD,OAAOwT,QCjQC,MAAM0K,EAEpBne,YAAaC,GAEZC,KAAKD,OAASA,EAEdC,KAAKke,kBAAoBle,KAAKke,kBAAkBhe,KAAMF,MAIvDiF,SAECjF,KAAKpK,QAAUoB,SAASC,cAAe,OACvC+I,KAAKpK,QAAQT,UAAY,WACzB6K,KAAKD,OAAOmF,mBAAmBhO,YAAa8I,KAAKpK,SAEjDoK,KAAKme,IAAMnnB,SAASC,cAAe,QACnC+I,KAAKpK,QAAQsB,YAAa8I,KAAKme,KAOhChZ,UAAWC,EAAQC,GAElBrF,KAAKpK,QAAQE,MAAM4G,QAAU0I,EAAO0P,SAAW,QAAU,OAI1D5U,OAEKF,KAAKD,OAAOO,YAAYwU,UAAY9U,KAAKpK,SAC5CoK,KAAKpK,QAAQyO,iBAAkB,QAASrE,KAAKke,mBAAmB,GAKlE/G,SAEMnX,KAAKD,OAAOO,YAAYwU,UAAY9U,KAAKpK,SAC7CoK,KAAKpK,QAAQ0O,oBAAqB,QAAStE,KAAKke,mBAAmB,GAQrExY,SAGC,GAAI1F,KAAKD,OAAOO,YAAYwU,UAAY9U,KAAKme,IAAM,CAElD,IAAI3O,EAAQxP,KAAKD,OAAOqe,cAGpBpe,KAAKD,OAAOoG,iBAAmB,IAClCqJ,EAAQ,GAGTxP,KAAKme,IAAIroB,MAAMD,UAAY,UAAW2Z,EAAO,KAM/C6O,cAEC,OAAOre,KAAKD,OAAOmF,mBAAmBmH,YAYvC6R,kBAAmB3Z,GAElBvE,KAAKD,OAAOqY,YAAa7T,GAEzBA,EAAMqS,iBAEN,IAAI0H,EAASte,KAAKD,OAAOiI,YACrBuW,EAAcD,EAAOznB,OACrB2nB,EAAaviB,KAAKwiB,MAASla,EAAMma,QAAU1e,KAAKqe,cAAkBE,GAElEve,KAAKD,OAAOO,YAAY4K,MAC3BsT,EAAaD,EAAcC,GAG5B,IAAIG,EAAgB3e,KAAKD,OAAOsG,WAAWiY,EAAOE,IAClDxe,KAAKD,OAAOW,MAAOie,EAAcrY,EAAGqY,EAAclY,GAInDpJ,UAEC2C,KAAKpK,QAAQL,UCtGA,MAAMqpB,EAEpB9e,YAAaC,GAEZC,KAAKD,OAASA,EAGdC,KAAK6e,mBAAqB,EAG1B7e,KAAK8e,cAAe,EAGpB9e,KAAK+e,sBAAwB,EAE7B/e,KAAKgf,uBAAyBhf,KAAKgf,uBAAuB9e,KAAMF,MAChEA,KAAKif,sBAAwBjf,KAAKif,sBAAsB/e,KAAMF,MAO/DmF,UAAWC,EAAQC,GAEdD,EAAO8Z,YACVloB,SAASqN,iBAAkB,iBAAkBrE,KAAKif,uBAAuB,GACzEjoB,SAASqN,iBAAkB,aAAcrE,KAAKif,uBAAuB,KAGrEjoB,SAASsN,oBAAqB,iBAAkBtE,KAAKif,uBAAuB,GAC5EjoB,SAASsN,oBAAqB,aAActE,KAAKif,uBAAuB,IAIrE7Z,EAAO+Z,oBACVnoB,SAASqN,iBAAkB,YAAarE,KAAKgf,wBAAwB,GACrEhoB,SAASqN,iBAAkB,YAAarE,KAAKgf,wBAAwB,KAGrEhf,KAAKof,aAELpoB,SAASsN,oBAAqB,YAAatE,KAAKgf,wBAAwB,GACxEhoB,SAASsN,oBAAqB,YAAatE,KAAKgf,wBAAwB,IAS1EI,aAEKpf,KAAK8e,eACR9e,KAAK8e,cAAe,EACpB9e,KAAKD,OAAOmF,mBAAmBpP,MAAMupB,OAAS,IAShDC,cAE2B,IAAtBtf,KAAK8e,eACR9e,KAAK8e,cAAe,EACpB9e,KAAKD,OAAOmF,mBAAmBpP,MAAMupB,OAAS,QAKhDhiB,UAEC2C,KAAKof,aAELpoB,SAASsN,oBAAqB,iBAAkBtE,KAAKif,uBAAuB,GAC5EjoB,SAASsN,oBAAqB,aAActE,KAAKif,uBAAuB,GACxEjoB,SAASsN,oBAAqB,YAAatE,KAAKgf,wBAAwB,GACxEhoB,SAASsN,oBAAqB,YAAatE,KAAKgf,wBAAwB,GAUzEA,uBAAwBza,GAEvBvE,KAAKof,aAEL/gB,aAAc2B,KAAK+e,uBAEnB/e,KAAK+e,sBAAwBzgB,WAAY0B,KAAKsf,WAAWpf,KAAMF,MAAQA,KAAKD,OAAOO,YAAYif,gBAUhGN,sBAAuB1a,GAEtB,GAAI0X,KAAKC,MAAQlc,KAAK6e,mBAAqB,IAAO,CAEjD7e,KAAK6e,mBAAqB5C,KAAKC,MAE/B,IAAIvM,EAAQpL,EAAMvH,SAAWuH,EAAMib,WAC/B7P,EAAQ,EACX3P,KAAKD,OAAOwT,OAEJ5D,EAAQ,GAChB3P,KAAKD,OAAOuT,SClHT,MAAMmM,EAAaA,CAAE7d,EAAK0V,KAEhC,MAAMoI,EAAS1oB,SAASC,cAAe,UACvCyoB,EAAOroB,KAAO,kBACdqoB,EAAOC,OAAQ,EACfD,EAAOE,OAAQ,EACfF,EAAOhc,IAAM9B,EAEW,mBAAb0V,IAGVoI,EAAOG,OAASH,EAAOI,mBAAqBvb,KACxB,SAAfA,EAAMlN,MAAmB,kBAAkB8B,KAAMumB,EAAO1b,eAG3D0b,EAAOG,OAASH,EAAOI,mBAAqBJ,EAAOK,QAAU,KAE7DzI,MAMFoI,EAAOK,QAAUC,IAGhBN,EAAOG,OAASH,EAAOI,mBAAqBJ,EAAOK,QAAU,KAE7DzI,EAAU,IAAI2I,MAAO,0BAA4BP,EAAOhc,IAAM,KAAOsc,GAAO,GAO9E,MAAMvoB,EAAOT,SAAS+L,cAAe,QACrCtL,EAAKyoB,aAAcR,EAAQjoB,EAAK0oB,UAAW,ECtC7B,MAAMC,EAEpBtgB,YAAaugB,GAEZrgB,KAAKD,OAASsgB,EAGdrgB,KAAKsgB,MAAQ,OAGbtgB,KAAKugB,kBAAoB,GAEzBvgB,KAAKwgB,kBAAoB,GAiB1B/f,KAAMggB,EAASC,GAMd,OAJA1gB,KAAKsgB,MAAQ,UAEbG,EAAQxlB,QAAS+E,KAAK2gB,eAAezgB,KAAMF,OAEpC,IAAI4gB,SAASC,IAEnB,IAAIC,EAAU,GACbC,EAAgB,EAcjB,GAZAL,EAAazlB,SAASohB,IAEhBA,EAAE2E,YAAa3E,EAAE2E,cACjB3E,EAAEsD,MACL3f,KAAKwgB,kBAAkBjhB,KAAM8c,GAG7ByE,EAAQvhB,KAAM8c,OAKbyE,EAAQjqB,OAAS,CACpBkqB,EAAgBD,EAAQjqB,OAExB,MAAMoqB,EAAwB5E,IACzBA,GAA2B,mBAAfA,EAAE/E,UAA0B+E,EAAE/E,WAEtB,KAAlByJ,GACL/gB,KAAKkhB,cAAcC,KAAMN,IAK3BC,EAAQ7lB,SAASohB,IACI,iBAATA,EAAEzN,IACZ5O,KAAK2gB,eAAgBtE,GACrB4E,EAAsB5E,IAEG,iBAAVA,EAAE3Y,IACjB+b,EAAYpD,EAAE3Y,KAAK,IAAMud,EAAqB5E,MAG9C+E,QAAQC,KAAM,6BAA8BhF,GAC5C4E,aAKFjhB,KAAKkhB,cAAcC,KAAMN,MAW5BK,cAEC,OAAO,IAAIN,SAASC,IAEnB,IAAIS,EAAe/nB,OAAOgoB,OAAQvhB,KAAKugB,mBACnCiB,EAAsBF,EAAazqB,OAGvC,GAA4B,IAAxB2qB,EACHxhB,KAAKyhB,YAAYN,KAAMN,OAGnB,CAEJ,IAAIa,EAEAC,EAAuBA,KACI,KAAxBH,EACLxhB,KAAKyhB,YAAYN,KAAMN,GAGvBa,KAIE/sB,EAAI,EAGR+sB,EAAiBA,KAEhB,IAAIE,EAASN,EAAa3sB,KAG1B,GAA2B,mBAAhBitB,EAAOpiB,KAAsB,CACvC,IAAI0E,EAAU0d,EAAOpiB,KAAMQ,KAAKD,QAG5BmE,GAAmC,mBAAjBA,EAAQid,KAC7Bjd,EAAQid,KAAMQ,GAGdA,SAIDA,KAKFD,QAWHD,YAUC,OARAzhB,KAAKsgB,MAAQ,SAETtgB,KAAKwgB,kBAAkB3pB,QAC1BmJ,KAAKwgB,kBAAkBvlB,SAASohB,IAC/BoD,EAAYpD,EAAE3Y,IAAK2Y,EAAE/E,SAAU,IAI1BsJ,QAAQC,UAWhBF,eAAgBiB,GAIU,IAArBhoB,UAAU/C,QAAwC,iBAAjB+C,UAAU,IAC9CgoB,EAAShoB,UAAU,IACZgV,GAAKhV,UAAU,GAII,mBAAXgoB,IACfA,EAASA,KAGV,IAAIhT,EAAKgT,EAAOhT,GAEE,iBAAPA,EACVwS,QAAQC,KAAM,mDAAqDO,QAE5BjiB,IAA/BK,KAAKugB,kBAAkB3R,IAC/B5O,KAAKugB,kBAAkB3R,GAAMgT,EAIV,WAAf5hB,KAAKsgB,OAA6C,mBAAhBsB,EAAOpiB,MAC5CoiB,EAAOpiB,KAAMQ,KAAKD,SAInBqhB,QAAQC,KAAM,eAAgBzS,EAAI,wCAUpCiT,UAAWjT,GAEV,QAAS5O,KAAKugB,kBAAkB3R,GAUjCkT,UAAWlT,GAEV,OAAO5O,KAAKugB,kBAAkB3R,GAI/BmT,uBAEC,OAAO/hB,KAAKugB,kBAIbljB,UAEC9D,OAAOgoB,OAAQvhB,KAAKugB,mBAAoBtlB,SAAS2mB,IAClB,mBAAnBA,EAAOvkB,SACjBukB,EAAOvkB,aAIT2C,KAAKugB,kBAAoB,GACzBvgB,KAAKwgB,kBAAoB,IC7OZ,MAAMwB,EAEpBliB,YAAaC,GAEZC,KAAKD,OAASA,EAEdC,KAAKjF,QAAS,EACdiF,KAAKiiB,mBAAqB,GAE1BjiB,KAAKkiB,SAAWliB,KAAKkiB,SAAShiB,KAAMF,MAQrCmV,WAEC,GAAInV,KAAKjF,OAAS,OAElB,MAAMonB,EAAwBniB,KAAKD,OAAOqiB,WAE1CpiB,KAAKjF,QAAS,EAIdiF,KAAKqiB,0BAA4BriB,KAAKD,OAAO0D,mBAAmB9M,UAEhE,MAAMqV,EAAmBpX,EAAUoL,KAAKD,OAAOmF,mBAAoB4H,GAKnE,IAAIwV,EAHJtiB,KAAKuiB,gBAAgBltB,UAAUC,IAAK,sBAAuB,iBAC3D0K,KAAKuiB,gBAAgBle,iBAAkB,SAAUrE,KAAKkiB,SAAU,CAAEM,SAAS,IAI3E,MAAMC,EAAiB7iB,OAAOpD,iBAAkBwD,KAAKuiB,iBACjDE,GAAkBA,EAAexhB,aACpCqhB,EAAyBG,EAAexhB,YAGzC,MAAMyhB,EAAe,GACfC,EAAgB3W,EAAiB,GAAG1V,WAE1C,IAAIssB,EAIJ,MAAMC,EAAoBA,CAAEniB,EAAO4F,EAAGG,KAErC,IAAIqc,EAIJ,GAAIF,GAAiB5iB,KAAKD,OAAOgjB,yBAA0BH,EAAeliB,GACzEoiB,EAAmB9rB,SAASC,cAAe,OAC3C6rB,EAAiB3tB,UAAY,+CAC7B2tB,EAAiBhtB,MAAM4G,QAAU,OACjCkmB,EAAcvsB,QAAS,wBAAyBC,WAAWY,YAAa4rB,OAEpE,CAGJ,MAAME,EAAOhsB,SAASC,cAAe,OACrC+rB,EAAK7tB,UAAY,cACjButB,EAAanjB,KAAMyjB,GAGfV,IACHU,EAAKltB,MAAMmL,WAAaqhB,GAGzB,MAAMW,EAAkBjsB,SAASC,cAAe,OAChDgsB,EAAgB9tB,UAAY,qBAC5B6tB,EAAK9rB,YAAa+rB,GAElBH,EAAmB9rB,SAASC,cAAe,OAC3C6rB,EAAiB3tB,UAAY,sBAC7B8tB,EAAgB/rB,YAAa4rB,GAG9BA,EAAiB5rB,YAAawJ,GAE9BA,EAAMrL,UAAUE,OAAQ,OAAQ,UAChCmL,EAAME,aAAc,eAAgB0F,GACpC5F,EAAME,aAAc,eAAgB6F,GAEhC/F,EAAMQ,yBACTR,EAAMQ,uBAAuB3L,OAAQ,OAAQ,UAC7CutB,EAAiB5C,aAAcxf,EAAMQ,uBAAwBR,IAG9DkiB,EAAgBliB,CAAK,EAKtBsL,EAAiB/Q,SAAS,CAAE+Y,EAAiB1N,KAExCtG,KAAKD,OAAOmjB,gBAAiBlP,GAChCA,EAAgB/e,iBAAkB,WAAYgG,SAAS,CAAEgZ,EAAexN,KACvEoc,EAAmB5O,EAAe3N,EAAGG,EAAG,IAIzCoc,EAAmB7O,EAAiB1N,EAAG,KAGtCtG,MAEHA,KAAKmjB,oBAGLvuB,EAAUoL,KAAKD,OAAOmF,mBAAoB,UAAWjK,SAASmoB,GAASA,EAAM7tB,WAG7EmtB,EAAaznB,SAAS+nB,GAAQL,EAAczrB,YAAa8rB,KAGzDhjB,KAAKD,OAAOyL,aAAaxI,OAAQhD,KAAKD,OAAO0D,oBAE7CzD,KAAKD,OAAOiD,SACZhD,KAAKD,OAAOsjB,SAAUlB,GAEtBniB,KAAKuiB,gBAAgBltB,UAAUE,OAAQ,uBAEvCyK,KAAKiiB,mBAAmBhnB,SAASqc,GAAYA,MAC7CtX,KAAKiiB,mBAAqB,GAQ3BzL,aAEC,IAAKxW,KAAKjF,OAAS,OAEnB,MAAMuoB,EAA0BtjB,KAAKD,OAAOqiB,WAE5CpiB,KAAKjF,QAAS,EAEdiF,KAAKuiB,gBAAgBje,oBAAqB,SAAUtE,KAAKkiB,UACzDliB,KAAKuiB,gBAAgBltB,UAAUE,OAAQ,iBAEvCyK,KAAKujB,oBAELvjB,KAAKD,OAAO0D,mBAAmB9M,UAAYqJ,KAAKqiB,0BAChDriB,KAAKD,OAAOgK,OACZ/J,KAAKD,OAAOsjB,SAAUC,GAEtBtjB,KAAKqiB,0BAA4B,KAIlC3L,OAAQC,GAEiB,kBAAbA,EACVA,EAAW3W,KAAKmV,WAAanV,KAAKwW,aAGlCxW,KAAKqV,WAAarV,KAAKwW,aAAexW,KAAKmV,WAQ7CE,WAEC,OAAOrV,KAAKjF,OAObooB,oBAECnjB,KAAKwjB,YAAcxsB,SAASC,cAAe,OAC3C+I,KAAKwjB,YAAYruB,UAAY,kBAE7B6K,KAAKyjB,iBAAmBzsB,SAASC,cAAe,OAChD+I,KAAKyjB,iBAAiBtuB,UAAY,wBAClC6K,KAAKwjB,YAAYtsB,YAAa8I,KAAKyjB,kBAEnCzjB,KAAK0jB,oBAAsB1sB,SAASC,cAAe,OACnD+I,KAAK0jB,oBAAoBvuB,UAAY,2BACrC6K,KAAKyjB,iBAAiBvsB,YAAa8I,KAAK0jB,qBAExC1jB,KAAKuiB,gBAAgBrC,aAAclgB,KAAKwjB,YAAaxjB,KAAKuiB,gBAAgBoB,YAE1E,MAAMC,EAA4Brf,IAEjC,IAAIuQ,GAAavQ,EAAMsf,QAAU7jB,KAAKyjB,iBAAiBxS,wBAAwB6S,KAAQ9jB,KAAK+jB,kBAC5FjP,EAAW7Y,KAAKE,IAAKF,KAAKC,IAAK4Y,EAAU,GAAK,GAE9C9U,KAAKuiB,gBAAgByB,UAAYlP,GAAa9U,KAAKuiB,gBAAgB0B,aAAejkB,KAAKuiB,gBAAgBhqB,aAAc,EAIhH2rB,EAA0B3f,IAE/BvE,KAAKmkB,qBAAsB,EAC3BnkB,KAAKokB,kBAELptB,SAASsN,oBAAqB,YAAasf,GAC3C5sB,SAASsN,oBAAqB,UAAW4f,EAAuB,EAiBjElkB,KAAKyjB,iBAAiBpf,iBAAkB,aAbdE,IAEzBA,EAAMqS,iBAEN5W,KAAKmkB,qBAAsB,EAE3BntB,SAASqN,iBAAkB,YAAauf,GACxC5sB,SAASqN,iBAAkB,UAAW6f,GAEtCN,EAAyBrf,EAAO,IAQlCgf,oBAEKvjB,KAAKwjB,cACRxjB,KAAKwjB,YAAYjuB,SACjByK,KAAKwjB,YAAc,MAKrBxgB,SAEKhD,KAAKqV,aACRrV,KAAKqkB,YACLrkB,KAAKkiB,YASPmC,YAEC,MAAMjf,EAASpF,KAAKD,OAAOO,YAErBmV,EAAYzV,KAAKD,OAAO2V,qBAAsB9V,OAAOyW,WAAYzW,OAAO0W,aACxE9G,EAAQxP,KAAKD,OAAO2P,WACpB4U,EAAelf,EAAOkf,aAEtBC,EAAiBvkB,KAAKuiB,gBAAgBhqB,aACtCisB,EAAgB/O,EAAUrd,OAASoX,EACnCiV,EAA8B,SAAjBH,EAA0BC,EAAiBC,EAGxDE,EAAsBH,EAE5BvkB,KAAKuiB,gBAAgBzsB,MAAM6uB,YAAa,gBAAiBF,EAAa,MACtEzkB,KAAKuiB,gBAAgBzsB,MAAM8uB,eAAoD,iBAA5Bxf,EAAOyf,iBAC/C,KAAIzf,EAAOyf,mBAAqB,GAG3C7kB,KAAK8kB,cAAgB,GAErB,MAAMpC,EAAe3tB,MAAMC,KAAMgL,KAAKD,OAAOmF,mBAAmBjQ,iBAAkB,iBAElF+K,KAAK+kB,MAAQrC,EAAarjB,KAAK2lB,IAC9B,MAAMhC,EAAOhjB,KAAKilB,WAAW,CAC5BD,cACAE,aAAcF,EAAYjiB,cAAe,WACzCoiB,cAAeH,EAAYjiB,cAAe,uBAC1C+G,eAAgBkb,EAAYjiB,cAAe,wBAC3CqiB,kBAAmBJ,EAAYjiB,cAAe,qBAC9CoL,oBAAqB6W,EAAY/vB,iBAAkB,6BACnDowB,iBAAkB,KAGnBrC,EAAKgC,YAAYlvB,MAAM6uB,YAAa,kBAAoC,IAAlBvf,EAAO4L,OAAkB,OAASyE,EAAUrd,OAAS,MAE3G4H,KAAK8kB,cAAcvlB,KAAK,CACvByjB,KAAMA,EACN7N,SAAUA,IAAMnV,KAAKslB,aAActC,GACnCxM,WAAYA,IAAMxW,KAAKulB,eAAgBvC,KAIxChjB,KAAKwlB,8BAA+BxC,GAGhCA,EAAK7U,oBAAoBtX,OAAS,GACrCmJ,KAAKylB,iCAAkCzC,GAGxC,IAAI0C,EAA0BzpB,KAAKE,IAAK6mB,EAAK2C,eAAe9uB,OAAS,EAAG,GAIxE6uB,GAA2B1C,EAAKqC,iBAAiBzS,QAAQ,CAAEgT,EAAO5C,IAC1D4C,EAAQ3pB,KAAKE,IAAK6mB,EAAK2C,eAAe9uB,OAAS,EAAG,IACvDmsB,EAAKqC,iBAAiBxuB,QAGzBmsB,EAAKgC,YAAY/vB,iBAAkB,sBAAuBgG,SAASpG,GAAMA,EAAGU,WAO5E,IAAK,IAAIZ,EAAI,EAAGA,EAAI+wB,EAA0B,EAAG/wB,IAAM,CACtD,MAAMkxB,EAAe7uB,SAASC,cAAe,OAC7C4uB,EAAa1wB,UAAY,oBACzB0wB,EAAa/vB,MAAMsC,OAASssB,EAAsB,KAClD1B,EAAKgC,YAAY9tB,YAAa2uB,GAEpB,IAANlxB,IACHkxB,EAAa/vB,MAAMgwB,WAAapB,EAAsB,MAmCxD,MA5BqB,YAAjBJ,GAA8BtB,EAAK2C,eAAe9uB,OAAS,GAC9DmsB,EAAKyB,WAAaF,EAClBvB,EAAKgC,YAAYlvB,MAAM6uB,YAAa,gBAAiBJ,EAAiB,QAGtEvB,EAAKyB,WAAaA,EAClBzB,EAAKgC,YAAYlvB,MAAM0C,eAAgB,kBAIxCwqB,EAAK+C,cAAgBrB,EAAsBgB,EAG3C1C,EAAKgD,YAAchD,EAAKyB,WAAazB,EAAK+C,cAG1C/C,EAAKgC,YAAYlvB,MAAM6uB,YAAa,wBAAyB3B,EAAK+C,cAAgB,MAG9EL,EAA0B,GAC7B1C,EAAKmC,cAAcrvB,MAAMmwB,SAAW,SACpCjD,EAAKmC,cAAcrvB,MAAMguB,IAAM7nB,KAAKE,KAAOooB,EAAiBvB,EAAKyB,YAAe,EAAG,GAAM,OAGzFzB,EAAKmC,cAAcrvB,MAAMmwB,SAAW,WACpCjD,EAAKgC,YAAYlvB,MAAMowB,gBAAkBlD,EAAKyB,WAAaF,EAAiB,SAAW,SAGjFvB,CAAI,IAGZhjB,KAAKmmB,mBAaLnmB,KAAKuiB,gBAAgB3hB,aAAc,yBAA0BwE,EAAOghB,iBAEhEhhB,EAAOghB,iBAAmBpmB,KAAK0lB,wBAA0B,GAEvD1lB,KAAKwjB,aAAcxjB,KAAKmjB,oBAE7BnjB,KAAKqmB,mBAGLrmB,KAAKujB,oBASP4C,mBAGCnmB,KAAK0lB,wBAA0B1lB,KAAK8kB,cAAclS,QAAQ,CAAEgT,EAAOU,IAC3DV,EAAQ3pB,KAAKE,IAAKmqB,EAAQtD,KAAK2C,eAAe9uB,OAAQ,IAC3D,GAEH,IAAI0vB,EAAa,EAIjBvmB,KAAK8kB,cAAc7pB,SAAS,CAAEqrB,EAAS3xB,KACtC2xB,EAAQE,MAAQ,CACfD,EACAA,EAAatqB,KAAKE,IAAKmqB,EAAQtD,KAAK2C,eAAe9uB,OAAQ,GAAMmJ,KAAK0lB,yBAGvE,MAAMe,EAAaH,EAAQE,MAAM,GAAKF,EAAQE,MAAM,GAC9CE,EAAwB,EAAIJ,EAAQtD,KAAK2C,eAAe9uB,OAG9DyvB,EAAQtD,KAAK2C,eAAe1qB,SAAS,CAAE0rB,EAAehyB,KACrDgyB,EAAcH,MAAQ,CAAC7xB,EAAI+xB,GAAyB/xB,EAAI,GAAM+xB,GAC9DC,EAAcC,YAAc,CAC3BL,EAAaI,EAAcH,MAAM,GAAKC,EACtCF,EAAaI,EAAcH,MAAM,GAAKC,EACtC,IAEFF,EAAaD,EAAQE,MAAM,EAAE,IAU/BhB,8BAA+BxC,EAAMkC,GAEpCA,EAAeA,GAAgBlC,EAAKkC,aAKpC,MAAM2B,EAAiB7mB,KAAKD,OAAOkT,UAAUO,KAAM0R,EAAajwB,iBAAkB,cAAe,GAwBjG,OArBI4xB,EAAehwB,SAClBmsB,EAAK/P,UAAYjT,KAAKD,OAAOkT,UAAUO,KAAM0R,EAAajwB,iBAAkB,6BAC5E+tB,EAAK2C,eAAepmB,KAEnB,CACC4V,SAAUA,KACTnV,KAAKD,OAAOkT,UAAUvN,QAAS,EAAGsd,EAAK/P,UAAWiS,EAAc,MAK/D2B,EAAexnB,KAAK,CAAE4T,EAAWte,MAClCwgB,SAAUA,KACTnV,KAAKD,OAAOkT,UAAUvN,OAAQ/Q,EAAGquB,EAAK/P,UAAWiS,EAAc,QAQ7DlC,EAAK2C,eAAe9uB,OAU5B4uB,iCAAkCzC,GAE7BA,EAAK7U,oBAAoBtX,OAAS,GAGrCmJ,KAAK8kB,cAAcvlB,QAASxK,MAAMC,KAAMguB,EAAK7U,qBAAsB9O,KAAK,CAAEynB,EAAoBnyB,KAC7F,IAAIoyB,EAAkB/mB,KAAKilB,WAAW,CACrCC,aAAc4B,EAAmB/jB,cAAe,WAChD+G,eAAgBgd,EAChB1B,kBAAmB0B,EAAmB/jB,cAAe,uBAStD,OALA/C,KAAKwlB,8BAA+BuB,EAAiBA,EAAgB7B,cAErElC,EAAKqC,iBAAiB9lB,KAAMwnB,GAGrB,CACN/D,KAAM+D,EACN5R,SAAUA,IAAMnV,KAAKslB,aAAcyB,GACnCvQ,WAAYA,IAAMxW,KAAKulB,eAAgBwB,GACvC,KAUJ9B,WAAYjC,GAMX,OAJAA,EAAK2C,eAAiB,GACtB3C,EAAKlN,OAASnN,SAAUqa,EAAKkC,aAAarkB,aAAc,gBAAkB,IAC1EmiB,EAAKjN,OAASpN,SAAUqa,EAAKkC,aAAarkB,aAAc,gBAAkB,IAEnEmiB,EAQRqD,kBAECrmB,KAAKyjB,iBAAiBxuB,iBAAkB,0BAA2BgG,SAASyF,GAASA,EAAMnL,WAE3F,MAAM0uB,EAAejkB,KAAKuiB,gBAAgB0B,aACpCM,EAAiBvkB,KAAKuiB,gBAAgBhqB,aACtCyuB,EAAuBzC,EAAiBN,EAE9CjkB,KAAK+jB,kBAAoB/jB,KAAKyjB,iBAAiBlrB,aAC/CyH,KAAKinB,eAAiBhrB,KAAKE,IAAK6qB,EAAuBhnB,KAAK+jB,kBAvhBlC,GAwhB1B/jB,KAAKknB,4BAA8BlnB,KAAK+jB,kBAAoB/jB,KAAKinB,eAEjE,MAAME,EAAwB5C,EAAiBN,EAAejkB,KAAK+jB,kBAC7DqD,EAAUnrB,KAAKC,IAAKirB,EAAwB,EA7hBvB,GA+hB3BnnB,KAAK0jB,oBAAoB5tB,MAAMsC,OAAS4H,KAAKinB,eAAiBG,EAAU,KAGpED,EAjiB8B,EAmiBjCnnB,KAAK8kB,cAAc7pB,SAASqrB,IAE3B,MAAMtD,KAAEA,GAASsD,EAGjBtD,EAAKqE,iBAAmBrwB,SAASC,cAAe,OAChD+rB,EAAKqE,iBAAiBlyB,UAAY,wBAClC6tB,EAAKqE,iBAAiBvxB,MAAMguB,IAAMwC,EAAQE,MAAM,GAAKxmB,KAAK+jB,kBAAoB,KAC9Ef,EAAKqE,iBAAiBvxB,MAAMsC,QAAWkuB,EAAQE,MAAM,GAAKF,EAAQE,MAAM,IAAOxmB,KAAK+jB,kBAAoBqD,EAAU,KAClHpE,EAAKqE,iBAAiBhyB,UAAUqhB,OAAQ,eAAgBsM,EAAK2C,eAAe9uB,OAAS,GACrFmJ,KAAKyjB,iBAAiBvsB,YAAa8rB,EAAKqE,kBAExC,MAAMC,GAAyBhB,EAAQE,MAAM,GAAKF,EAAQE,MAAM,IAAOxmB,KAAK+jB,kBAG5EuC,EAAQtD,KAAKuE,sBAAwBvE,EAAK2C,eAAetmB,KAAK,CAAEinB,EAAS3xB,KAExE,MAAM6yB,EAAiBxwB,SAASC,cAAe,OAQ/C,OAPAuwB,EAAeryB,UAAY,0BAC3BqyB,EAAe1xB,MAAMguB,IAAMwC,EAAQE,MAAM,GAAKc,EAAuB,KACrEE,EAAe1xB,MAAMsC,QAAWkuB,EAAQE,MAAM,GAAKF,EAAQE,MAAM,IAAOc,EAAuBF,EAAU,KACzGpE,EAAKqE,iBAAiBnwB,YAAaswB,GAEzB,IAAN7yB,IAAU6yB,EAAe1xB,MAAM4G,QAAU,QAEtC8qB,CAAc,GAEnB,IAOJxnB,KAAK+kB,MAAM9pB,SAAS+nB,GAAQA,EAAKqE,iBAAmB,OAWtDI,oBAAqB3S,GAEhB9U,KAAKwjB,cAERxjB,KAAK0jB,oBAAoB5tB,MAAMD,UAAa,cAAaif,EAAW9U,KAAKknB,iCAEzElnB,KAAK0nB,cACH9sB,QAAQooB,GAAQA,EAAKqE,mBACrBpsB,SAAW+nB,IACXA,EAAKqE,iBAAiBhyB,UAAUqhB,OAAQ,UAA0B,IAAhBsM,EAAKjoB,QAEvDioB,EAAK2C,eAAe1qB,SAAS,CAAEqrB,EAAS3xB,KACvCquB,EAAKuE,sBAAsB5yB,GAAGU,UAAUqhB,OAAQ,UAA0B,IAAhBsM,EAAKjoB,SAAsC,IAAnBurB,EAAQvrB,OAAiB,GACzG,IAGLiF,KAAKokB,mBAUPA,kBAECpkB,KAAKwjB,YAAYnuB,UAAUC,IAAK,WAEhC+I,aAAc2B,KAAK2nB,wBAE6B,SAA5C3nB,KAAKD,OAAOO,YAAY8lB,iBAA+BpmB,KAAKmkB,sBAE/DnkB,KAAK2nB,uBAAyBrpB,YAAY,KACzC0B,KAAKwjB,YAAYnuB,UAAUE,OAAQ,UAAW,GArnBnB,MAioB9BqyB,cAAe1C,GAGd,GAAKllB,KAAKjF,OAGL,CAEJ,MAAMurB,EAAUtmB,KAAK6nB,wBAAyB3C,GAE1CoB,IAEHtmB,KAAKuiB,gBAAgByB,UAAYsC,EAAQE,MAAM,IAAOxmB,KAAKuiB,gBAAgB0B,aAAejkB,KAAKuiB,gBAAgBhqB,oBARhHyH,KAAKiiB,mBAAmB1iB,MAAM,IAAMS,KAAK4nB,cAAe1C,KAoB1DI,aAActC,GAEb,IAAKA,EAAKjoB,OAAS,CAElBioB,EAAKjoB,QAAS,EAEd,MAAMmqB,aAAEA,EAAYE,kBAAEA,EAAiBtb,eAAEA,EAAcgM,OAAEA,EAAMC,OAAEA,GAAWiN,EAE5ElZ,EAAehU,MAAM4G,QAAU,QAE/BwoB,EAAa7vB,UAAUC,IAAK,WAC5B8vB,EAAkB/vB,UAAUC,IAAK,WAEjC0K,KAAKD,OAAO+nB,qBAAsB5C,EAAcpP,EAAQC,GACxD/V,KAAKD,OAAOgoB,YAAYpd,kCAAmCua,EAAcllB,KAAKuiB,iBAK9ExtB,MAAMC,KAAM8U,EAAexT,WAAWrB,iBAAkB,yBAA2BgG,SAAS+sB,IACvFA,IAAYle,IACfke,EAAQlyB,MAAM4G,QAAU,YAa5B6oB,eAAgBvC,GAEXA,EAAKjoB,SAERioB,EAAKjoB,QAAS,EACdioB,EAAKkC,aAAa7vB,UAAUE,OAAQ,WACpCytB,EAAKoC,kBAAkB/vB,UAAUE,OAAQ,YAM3C0yB,gBAAiB3B,GAEXA,EAAQvrB,SACZurB,EAAQvrB,QAAS,EACjBurB,EAAQnR,YAKV+S,kBAAmB5B,GAEdA,EAAQvrB,SACXurB,EAAQvrB,QAAS,EAEburB,EAAQ9P,YACX8P,EAAQ9P,cAcX2R,kBAAmB7hB,EAAGG,GAErB,MAAMuc,EAAOhjB,KAAK0nB,cAAczf,MAAM+a,GAC9BA,EAAKlN,SAAWxP,GAAK0c,EAAKjN,SAAWtP,IAG7C,OAAOuc,EAAOA,EAAKkC,aAAe,KAWnC2C,wBAAyBnnB,GAExB,OAAOV,KAAK8kB,cAAc7c,MAAMqe,GAAWA,EAAQtD,KAAKkC,eAAiBxkB,IAU1EgnB,cAEC,OAAO1nB,KAAK+kB,MAAMqD,SAASpF,GAAQ,CAACA,KAAUA,EAAKqC,kBAAoB,MAIxEnD,WAEC,MAAMqC,EAAiBvkB,KAAKuiB,gBAAgBhqB,aACtCyuB,EAAuBzC,EAAiBvkB,KAAKuiB,gBAAgB0B,aAE7DD,EAAYhkB,KAAKuiB,gBAAgByB,UACjCC,EAAejkB,KAAKuiB,gBAAgB0B,aAAeM,EACnD8D,EAAiBpsB,KAAKE,IAAKF,KAAKC,IAAK8nB,EAAYC,EAAc,GAAK,GACpEqE,EAAoBrsB,KAAKE,IAAKF,KAAKC,KAAO8nB,EAAYO,EAAiB,GAAMvkB,KAAKuiB,gBAAgB0B,aAAc,GAAK,GAE3H,IAAIsE,EAEJvoB,KAAK8kB,cAAc7pB,SAAWqrB,IAC7B,MAAMtD,KAAEA,GAASsD,EAEK+B,GAAkB/B,EAAQE,MAAM,GAA0B,EAArBQ,GAChDqB,GAAkB/B,EAAQE,MAAM,GAA0B,EAArBQ,IAG1BhE,EAAKwF,QAC1BxF,EAAKwF,QAAS,EACdxoB,KAAKD,OAAOyL,aAAa/K,KAAMuiB,EAAKkC,eAE5BlC,EAAKwF,SACbxF,EAAKwF,QAAS,EACdxoB,KAAKD,OAAOyL,aAAatI,OAAQ8f,EAAKkC,eAInCmD,GAAkB/B,EAAQE,MAAM,IAAM6B,GAAkB/B,EAAQE,MAAM,IACzExmB,KAAKioB,gBAAiB3B,GACtBiC,EAAajC,EAAQtD,MAGbsD,EAAQvrB,QAChBiF,KAAKkoB,kBAAmB5B,MAMtBiC,GACHA,EAAW5C,eAAe1qB,SAAWqrB,IAChCgC,GAAqBhC,EAAQM,YAAY,IAAM0B,GAAqBhC,EAAQM,YAAY,GAC3F5mB,KAAKioB,gBAAiB3B,GAEdA,EAAQvrB,QAChBiF,KAAKkoB,kBAAmB5B,MAM3BtmB,KAAKynB,oBAAqBzD,GAAchkB,KAAKuiB,gBAAgB0B,aAAeM,IAIzEhC,sBAEH,OAAOviB,KAAKD,OAAOya,sBC/zBN,MAAMiO,EAEpB3oB,YAAaC,GAEZC,KAAKD,OAASA,EAQf4f,iBAEC,MAAMva,EAASpF,KAAKD,OAAOO,YACrBge,EAAS1pB,EAAUoL,KAAKD,OAAOmF,mBAAoB2H,GAGnD6b,EAAoBtjB,EAAOG,aAAe,aAAapM,KAAMiM,EAAOK,iBAEpEgQ,EAAYzV,KAAKD,OAAO2V,qBAAsB9V,OAAOyW,WAAYzW,OAAO0W,aAGxEqS,EAAY1sB,KAAKwiB,MAAOhJ,EAAU9S,OAAU,EAAIyC,EAAOoQ,SAC5DiP,EAAaxoB,KAAKwiB,MAAOhJ,EAAUrd,QAAW,EAAIgN,EAAOoQ,SAGpDpJ,EAAaqJ,EAAU9S,MAC5B+J,EAAc+I,EAAUrd,aAEnB,IAAIwoB,QAASlmB,uBAGnBvD,EAAkB,cAAewxB,EAAW,MAAOlE,EAAY,qBAG/DttB,EAAkB,iFAAkFiV,EAAY,kBAAmBM,EAAa,OAEhJ1V,SAASgjB,gBAAgB3kB,UAAUC,IAAK,eAAgB,aACxD0B,SAAS4xB,KAAK9yB,MAAM6M,MAAQgmB,EAAY,KACxC3xB,SAAS4xB,KAAK9yB,MAAMsC,OAASqsB,EAAa,KAE1C,MAAMlC,EAAkBviB,KAAKD,OAAOya,qBACpC,IAAI8H,EACJ,GAAIC,EAAkB,CACrB,MAAME,EAAiB7iB,OAAOpD,iBAAkB+lB,GAC5CE,GAAkBA,EAAexhB,aACpCqhB,EAAyBG,EAAexhB,kBAKpC,IAAI2f,QAASlmB,uBACnBsF,KAAKD,OAAO8oB,oBAAqBzc,EAAYM,SAGvC,IAAIkU,QAASlmB,uBAEnB,MAAMouB,EAAqBxK,EAAOjf,KAAKqB,GAASA,EAAMujB,eAEhDc,EAAQ,GACRpC,EAAgBrE,EAAO,GAAGhoB,WAChC,IAAIiP,EAAc,EAGlB+Y,EAAOrjB,SAAS,SAAUyF,EAAOkR,GAIhC,IAA4C,IAAxClR,EAAMrL,UAAUwV,SAAU,SAAsB,CAEnD,IAAI2O,GAASmP,EAAYvc,GAAe,EACpC0X,GAAQW,EAAa/X,GAAgB,EAEzC,MAAMqc,EAAgBD,EAAoBlX,GAC1C,IAAIoX,EAAgB/sB,KAAKE,IAAKF,KAAKgtB,KAAMF,EAAgBtE,GAAc,GAGvEuE,EAAgB/sB,KAAKC,IAAK8sB,EAAe5jB,EAAO8jB,sBAG1B,IAAlBF,GAAuB5jB,EAAO4L,QAAUtQ,EAAMrL,UAAUwV,SAAU,aACrEiZ,EAAM7nB,KAAKE,KAAOsoB,EAAasE,GAAkB,EAAG,IAKrD,MAAM/F,EAAOhsB,SAASC,cAAe,OA0BrC,GAzBA8tB,EAAMxlB,KAAMyjB,GAEZA,EAAK7tB,UAAY,WACjB6tB,EAAKltB,MAAMsC,QAAaqsB,EAAarf,EAAO+jB,qBAAwBH,EAAkB,KAIlF1G,IACHU,EAAKltB,MAAMmL,WAAaqhB,GAGzBU,EAAK9rB,YAAawJ,GAGlBA,EAAM5K,MAAM0jB,KAAOA,EAAO,KAC1B9Y,EAAM5K,MAAMguB,IAAMA,EAAM,KACxBpjB,EAAM5K,MAAM6M,MAAQyJ,EAAa,KAEjCpM,KAAKD,OAAOyL,aAAaxI,OAAQtC,GAE7BA,EAAMQ,wBACT8hB,EAAK9C,aAAcxf,EAAMQ,uBAAwBR,GAI9C0E,EAAOgkB,UAAY,CAGtB,MAAMC,EAAQrpB,KAAKD,OAAOupB,cAAe5oB,GACzC,GAAI2oB,EAAQ,CAEX,MAAME,EAAe,EACfC,EAA0C,iBAArBpkB,EAAOgkB,UAAyBhkB,EAAOgkB,UAAY,SACxEK,EAAezyB,SAASC,cAAe,OAC7CwyB,EAAap0B,UAAUC,IAAK,iBAC5Bm0B,EAAap0B,UAAUC,IAAK,qBAC5Bm0B,EAAa7oB,aAAc,cAAe4oB,GAC1CC,EAAa9yB,UAAY0yB,EAEL,kBAAhBG,EACHzE,EAAMxlB,KAAMkqB,IAGZA,EAAa3zB,MAAM0jB,KAAO+P,EAAe,KACzCE,EAAa3zB,MAAM4zB,OAASH,EAAe,KAC3CE,EAAa3zB,MAAM6M,MAAUgmB,EAAyB,EAAbY,EAAmB,KAC5DvG,EAAK9rB,YAAauyB,KAQrB,GAAIf,EAAoB,CACvB,MAAMiB,EAAgB3yB,SAASC,cAAe,OAC9C0yB,EAAct0B,UAAUC,IAAK,gBAC7Bq0B,EAAct0B,UAAUC,IAAK,oBAC7Bq0B,EAAchzB,UAAY4O,IAC1Byd,EAAK9rB,YAAayyB,GAInB,GAAIvkB,EAAOwkB,qBAAuB,CAKjC,MAAM/C,EAAiB7mB,KAAKD,OAAOkT,UAAUO,KAAMwP,EAAK/tB,iBAAkB,cAAe,GAEzF,IAAI40B,EAEJhD,EAAe5rB,SAAS,SAAUgY,EAAWrB,GAGxCiY,GACHA,EAAqB5uB,SAAS,SAAU4Y,GACvCA,EAASxe,UAAUE,OAAQ,uBAK7B0d,EAAUhY,SAAS,SAAU4Y,GAC5BA,EAASxe,UAAUC,IAAK,UAAW,sBACjC0K,MAGH,MAAM8pB,EAAa9G,EAAK+G,WAAW,GAGnC,GAAIrB,EAAoB,CACvB,MACMsB,EAAiBpY,EAAQ,EADTkY,EAAW/mB,cAAe,qBAElCpM,WAAa,IAAMqzB,EAGlCjF,EAAMxlB,KAAMuqB,GAEZD,EAAuB5W,IAErBjT,MAGH6mB,EAAe5rB,SAAS,SAAUgY,GACjCA,EAAUhY,SAAS,SAAU4Y,GAC5BA,EAASxe,UAAUE,OAAQ,UAAW,+BAOxCX,EAAUouB,EAAM,4BAA6B/nB,SAAS,SAAU4Y,GAC/DA,EAASxe,UAAUC,IAAK,iBAMzB0K,YAEG,IAAI4gB,QAASlmB,uBAEnBqqB,EAAM9pB,SAAS+nB,GAAQL,EAAczrB,YAAa8rB,KAGlDhjB,KAAKD,OAAOyL,aAAaxI,OAAQhD,KAAKD,OAAO0D,oBAG7CzD,KAAKD,OAAOjD,cAAc,CAAEzF,KAAM,cAOnCge,WAEC,MAAwC,UAAjCrV,KAAKD,OAAOO,YAAY2pB,MC/NlB,MAAMC,EAEpBpqB,YAAaC,GAEZC,KAAKD,OAASA,EAGdC,KAAKmqB,YAAc,EACnBnqB,KAAKoqB,YAAc,EACnBpqB,KAAKqqB,gBAAkB,EACvBrqB,KAAKsqB,eAAgB,EAErBtqB,KAAKuqB,cAAgBvqB,KAAKuqB,cAAcrqB,KAAMF,MAC9CA,KAAKwqB,cAAgBxqB,KAAKwqB,cAActqB,KAAMF,MAC9CA,KAAKyqB,YAAczqB,KAAKyqB,YAAYvqB,KAAMF,MAC1CA,KAAK0qB,aAAe1qB,KAAK0qB,aAAaxqB,KAAMF,MAC5CA,KAAK2qB,YAAc3qB,KAAK2qB,YAAYzqB,KAAMF,MAC1CA,KAAK4qB,WAAa5qB,KAAK4qB,WAAW1qB,KAAMF,MAOzCE,OAEC,IAAI4c,EAAgB9c,KAAKD,OAAOmF,mBAE5B,kBAAmBtF,QAEtBkd,EAAczY,iBAAkB,cAAerE,KAAKuqB,eAAe,GACnEzN,EAAczY,iBAAkB,cAAerE,KAAKwqB,eAAe,GACnE1N,EAAczY,iBAAkB,YAAarE,KAAKyqB,aAAa,IAEvD7qB,OAAO5G,UAAU6xB,kBAEzB/N,EAAczY,iBAAkB,gBAAiBrE,KAAKuqB,eAAe,GACrEzN,EAAczY,iBAAkB,gBAAiBrE,KAAKwqB,eAAe,GACrE1N,EAAczY,iBAAkB,cAAerE,KAAKyqB,aAAa,KAIjE3N,EAAczY,iBAAkB,aAAcrE,KAAK0qB,cAAc,GACjE5N,EAAczY,iBAAkB,YAAarE,KAAK2qB,aAAa,GAC/D7N,EAAczY,iBAAkB,WAAYrE,KAAK4qB,YAAY,IAQ/DzT,SAEC,IAAI2F,EAAgB9c,KAAKD,OAAOmF,mBAEhC4X,EAAcxY,oBAAqB,cAAetE,KAAKuqB,eAAe,GACtEzN,EAAcxY,oBAAqB,cAAetE,KAAKwqB,eAAe,GACtE1N,EAAcxY,oBAAqB,YAAatE,KAAKyqB,aAAa,GAElE3N,EAAcxY,oBAAqB,gBAAiBtE,KAAKuqB,eAAe,GACxEzN,EAAcxY,oBAAqB,gBAAiBtE,KAAKwqB,eAAe,GACxE1N,EAAcxY,oBAAqB,cAAetE,KAAKyqB,aAAa,GAEpE3N,EAAcxY,oBAAqB,aAActE,KAAK0qB,cAAc,GACpE5N,EAAcxY,oBAAqB,YAAatE,KAAK2qB,aAAa,GAClE7N,EAAcxY,oBAAqB,WAAYtE,KAAK4qB,YAAY,GAQjEE,iBAAkB90B,GAGjB,GAAID,EAASC,EAAQ,gBAAmB,OAAO,EAE/C,KAAOA,GAAyC,mBAAxBA,EAAOwK,cAA8B,CAC5D,GAAIxK,EAAOwK,aAAc,sBAAyB,OAAO,EACzDxK,EAASA,EAAOM,WAGjB,OAAO,EAURo0B,aAAcnmB,GAEb,GAAIvE,KAAK8qB,iBAAkBvmB,EAAMvO,QAAW,OAAO,EAEnDgK,KAAKmqB,YAAc5lB,EAAMwmB,QAAQ,GAAGrM,QACpC1e,KAAKoqB,YAAc7lB,EAAMwmB,QAAQ,GAAGlH,QACpC7jB,KAAKqqB,gBAAkB9lB,EAAMwmB,QAAQl0B,OAStC8zB,YAAapmB,GAEZ,GAAIvE,KAAK8qB,iBAAkBvmB,EAAMvO,QAAW,OAAO,EAEnD,IAAIoP,EAASpF,KAAKD,OAAOO,YAGzB,GAAKN,KAAKsqB,cA8EDhxB,GACRiL,EAAMqS,qBA/EmB,CACzB5W,KAAKD,OAAOqY,YAAa7T,GAEzB,IAAIymB,EAAWzmB,EAAMwmB,QAAQ,GAAGrM,QAC5BuM,EAAW1mB,EAAMwmB,QAAQ,GAAGlH,QAGhC,GAA6B,IAAzBtf,EAAMwmB,QAAQl0B,QAAyC,IAAzBmJ,KAAKqqB,gBAAwB,CAE9D,IAAIjX,EAAkBpT,KAAKD,OAAOqT,gBAAgB,CAAE8X,kBAAkB,IAElEC,EAASH,EAAWhrB,KAAKmqB,YAC5BiB,EAASH,EAAWjrB,KAAKoqB,YAEtBe,EAxIgB,IAwIYlvB,KAAKovB,IAAKF,GAAWlvB,KAAKovB,IAAKD,IAC9DprB,KAAKsqB,eAAgB,EACS,WAA1BllB,EAAO8R,eACN9R,EAAO8F,IACVlL,KAAKD,OAAOwT,OAGZvT,KAAKD,OAAOuT,OAIbtT,KAAKD,OAAOyZ,QAGL2R,GAtJW,IAsJkBlvB,KAAKovB,IAAKF,GAAWlvB,KAAKovB,IAAKD,IACpEprB,KAAKsqB,eAAgB,EACS,WAA1BllB,EAAO8R,eACN9R,EAAO8F,IACVlL,KAAKD,OAAOuT,OAGZtT,KAAKD,OAAOwT,OAIbvT,KAAKD,OAAO0Z,SAGL2R,EApKW,IAoKiBhY,EAAgBsG,IACpD1Z,KAAKsqB,eAAgB,EACS,WAA1BllB,EAAO8R,eACVlX,KAAKD,OAAOuT,OAGZtT,KAAKD,OAAO2Z,MAGL0R,GA7KW,IA6KkBhY,EAAgByG,OACrD7Z,KAAKsqB,eAAgB,EACS,WAA1BllB,EAAO8R,eACVlX,KAAKD,OAAOwT,OAGZvT,KAAKD,OAAO8Z,QAMVzU,EAAOmV,UACNva,KAAKsqB,eAAiBtqB,KAAKD,OAAOyG,oBACrCjC,EAAMqS,iBAMPrS,EAAMqS,mBAkBVgU,WAAYrmB,GAEXvE,KAAKsqB,eAAgB,EAStBC,cAAehmB,GAEVA,EAAM+mB,cAAgB/mB,EAAMgnB,sBAA8C,UAAtBhnB,EAAM+mB,cAC7D/mB,EAAMwmB,QAAU,CAAC,CAAErM,QAASna,EAAMma,QAASmF,QAAStf,EAAMsf,UAC1D7jB,KAAK0qB,aAAcnmB,IAUrBimB,cAAejmB,GAEVA,EAAM+mB,cAAgB/mB,EAAMgnB,sBAA8C,UAAtBhnB,EAAM+mB,cAC7D/mB,EAAMwmB,QAAU,CAAC,CAAErM,QAASna,EAAMma,QAASmF,QAAStf,EAAMsf,UAC1D7jB,KAAK2qB,YAAapmB,IAUpBkmB,YAAalmB,GAERA,EAAM+mB,cAAgB/mB,EAAMgnB,sBAA8C,UAAtBhnB,EAAM+mB,cAC7D/mB,EAAMwmB,QAAU,CAAC,CAAErM,QAASna,EAAMma,QAASmF,QAAStf,EAAMsf,UAC1D7jB,KAAK4qB,WAAYrmB,KCxPpB,MAAMinB,EAAc,QACdC,EAAa,OAEJ,MAAMC,EAEpB5rB,YAAaC,GAEZC,KAAKD,OAASA,EAEdC,KAAK2rB,oBAAsB3rB,KAAK2rB,oBAAoBzrB,KAAMF,MAC1DA,KAAK4rB,sBAAwB5rB,KAAK4rB,sBAAsB1rB,KAAMF,MAO/DmF,UAAWC,EAAQC,GAEdD,EAAOmV,SACVva,KAAK6rB,QAGL7rB,KAAKsH,QACLtH,KAAKmX,UAKPjX,OAEKF,KAAKD,OAAOO,YAAYia,UAC3Bva,KAAKD,OAAOmF,mBAAmBb,iBAAkB,cAAerE,KAAK2rB,qBAAqB,GAK5FxU,SAECnX,KAAKD,OAAOmF,mBAAmBZ,oBAAqB,cAAetE,KAAK2rB,qBAAqB,GAC7F30B,SAASsN,oBAAqB,cAAetE,KAAK4rB,uBAAuB,GAI1EtkB,QAEKtH,KAAKsgB,QAAUkL,IAClBxrB,KAAKD,OAAOmF,mBAAmB7P,UAAUC,IAAK,WAC9C0B,SAASqN,iBAAkB,cAAerE,KAAK4rB,uBAAuB,IAGvE5rB,KAAKsgB,MAAQkL,EAIdK,OAEK7rB,KAAKsgB,QAAUmL,IAClBzrB,KAAKD,OAAOmF,mBAAmB7P,UAAUE,OAAQ,WACjDyB,SAASsN,oBAAqB,cAAetE,KAAK4rB,uBAAuB,IAG1E5rB,KAAKsgB,MAAQmL,EAIdxT,YAEC,OAAOjY,KAAKsgB,QAAUkL,EAIvBnuB,UAEC2C,KAAKD,OAAOmF,mBAAmB7P,UAAUE,OAAQ,WAIlDo2B,oBAAqBpnB,GAEpBvE,KAAKsH,QAINskB,sBAAuBrnB,GAEtB,IAAIuY,EAAgBzmB,EAASkO,EAAMvO,OAAQ,WACtC8mB,GAAiBA,IAAkB9c,KAAKD,OAAOmF,oBACnDlF,KAAK6rB,QC9FO,MAAMC,EAEpBhsB,YAAaC,GAEZC,KAAKD,OAASA,EAIfkF,SAECjF,KAAKpK,QAAUoB,SAASC,cAAe,OACvC+I,KAAKpK,QAAQT,UAAY,gBACzB6K,KAAKpK,QAAQgL,aAAc,qBAAsB,IACjDZ,KAAKpK,QAAQgL,aAAc,WAAY,KACvCZ,KAAKD,OAAOmF,mBAAmBhO,YAAa8I,KAAKpK,SAOlDuP,UAAWC,EAAQC,GAEdD,EAAOgkB,WACVppB,KAAKpK,QAAQgL,aAAc,cAA2C,iBAArBwE,EAAOgkB,UAAyBhkB,EAAOgkB,UAAY,UAWtG1jB,SAEK1F,KAAKD,OAAOO,YAAY8oB,WAC3BppB,KAAKpK,SAAWoK,KAAKD,OAAO6F,oBAC3B5F,KAAKD,OAAOK,iBACZJ,KAAKD,OAAOyF,eAEbxF,KAAKpK,QAAQe,UAAYqJ,KAAKspB,iBAAmB,kEAWnDyC,mBAEK/rB,KAAKD,OAAOO,YAAY8oB,WAC3BppB,KAAKgsB,aACJhsB,KAAKD,OAAOK,iBACZJ,KAAKD,OAAOyF,aAEbxF,KAAKD,OAAOmF,mBAAmB7P,UAAUC,IAAK,cAG9C0K,KAAKD,OAAOmF,mBAAmB7P,UAAUE,OAAQ,cASnDy2B,WAEC,OAAOhsB,KAAKD,OAAO0D,mBAAmBxO,iBAAkB,6BAA8B4B,OAAS,EAUhGo1B,uBAEC,QAASrsB,OAAOhI,SAASC,OAAOpC,MAAO,cAaxC6zB,cAAe5oB,EAAQV,KAAKD,OAAO6F,mBAGlC,GAAIlF,EAAMF,aAAc,cACvB,OAAOE,EAAMG,aAAc,cAI5B,IAAIqrB,EAAgBxrB,EAAMzL,iBAAkB,eAC5C,OAAIi3B,EACIn3B,MAAMC,KAAKk3B,GAAe7sB,KAAKoqB,GAAgBA,EAAa9yB,YAAYwL,KAAM,MAG/E,KAIR9E,UAEC2C,KAAKpK,QAAQL,UCrHA,MAAM42B,EASpBrsB,YAAatJ,EAAW41B,GAGvBpsB,KAAKqsB,SAAW,IAChBrsB,KAAKssB,UAAYtsB,KAAKqsB,SAAS,EAC/BrsB,KAAKusB,UAAY,EAGjBvsB,KAAKwsB,SAAU,EAGfxsB,KAAK8U,SAAW,EAGhB9U,KAAKysB,eAAiB,EAEtBzsB,KAAKxJ,UAAYA,EACjBwJ,KAAKosB,cAAgBA,EAErBpsB,KAAK0sB,OAAS11B,SAASC,cAAe,UACtC+I,KAAK0sB,OAAOv3B,UAAY,WACxB6K,KAAK0sB,OAAO/pB,MAAQ3C,KAAKqsB,SACzBrsB,KAAK0sB,OAAOt0B,OAAS4H,KAAKqsB,SAC1BrsB,KAAK0sB,OAAO52B,MAAM6M,MAAQ3C,KAAKssB,UAAY,KAC3CtsB,KAAK0sB,OAAO52B,MAAMsC,OAAS4H,KAAKssB,UAAY,KAC5CtsB,KAAK2sB,QAAU3sB,KAAK0sB,OAAOE,WAAY,MAEvC5sB,KAAKxJ,UAAUU,YAAa8I,KAAK0sB,QAEjC1sB,KAAKiF,SAIN4nB,WAAYz3B,GAEX,MAAM03B,EAAa9sB,KAAKwsB,QAExBxsB,KAAKwsB,QAAUp3B,GAGV03B,GAAc9sB,KAAKwsB,QACvBxsB,KAAK+sB,UAGL/sB,KAAKiF,SAKP8nB,UAEC,MAAMC,EAAiBhtB,KAAK8U,SAE5B9U,KAAK8U,SAAW9U,KAAKosB,gBAIjBY,EAAiB,IAAOhtB,KAAK8U,SAAW,KAC3C9U,KAAKysB,eAAiBzsB,KAAK8U,UAG5B9U,KAAKiF,SAEDjF,KAAKwsB,SACR9xB,sBAAuBsF,KAAK+sB,QAAQ7sB,KAAMF,OAQ5CiF,SAEC,IAAI6P,EAAW9U,KAAKwsB,QAAUxsB,KAAK8U,SAAW,EAC7CmY,EAAWjtB,KAAKssB,UAActsB,KAAKusB,UACnC3c,EAAI5P,KAAKssB,UACTzc,EAAI7P,KAAKssB,UACTY,EAAW,GAGZltB,KAAKysB,gBAAgD,IAA5B,EAAIzsB,KAAKysB,gBAElC,MAAMU,GAAelxB,KAAKmxB,GAAK,EAAQtY,GAAuB,EAAV7Y,KAAKmxB,IACnDC,GAAiBpxB,KAAKmxB,GAAK,EAAQptB,KAAKysB,gBAA6B,EAAVxwB,KAAKmxB,IAEtEptB,KAAK2sB,QAAQW,OACbttB,KAAK2sB,QAAQY,UAAW,EAAG,EAAGvtB,KAAKqsB,SAAUrsB,KAAKqsB,UAGlDrsB,KAAK2sB,QAAQa,YACbxtB,KAAK2sB,QAAQc,IAAK7d,EAAGC,EAAGod,EAAS,EAAG,EAAa,EAAVhxB,KAAKmxB,IAAQ,GACpDptB,KAAK2sB,QAAQe,UAAY,uBACzB1tB,KAAK2sB,QAAQgB,OAGb3tB,KAAK2sB,QAAQa,YACbxtB,KAAK2sB,QAAQc,IAAK7d,EAAGC,EAAGod,EAAQ,EAAa,EAAVhxB,KAAKmxB,IAAQ,GAChDptB,KAAK2sB,QAAQiB,UAAY5tB,KAAKusB,UAC9BvsB,KAAK2sB,QAAQkB,YAAc,6BAC3B7tB,KAAK2sB,QAAQmB,SAET9tB,KAAKwsB,UAERxsB,KAAK2sB,QAAQa,YACbxtB,KAAK2sB,QAAQc,IAAK7d,EAAGC,EAAGod,EAAQI,EAAYF,GAAU,GACtDntB,KAAK2sB,QAAQiB,UAAY5tB,KAAKusB,UAC9BvsB,KAAK2sB,QAAQkB,YAAc,OAC3B7tB,KAAK2sB,QAAQmB,UAGd9tB,KAAK2sB,QAAQpd,UAAWK,EAAMsd,GAAgBrd,EAAMqd,IAGhDltB,KAAKwsB,SACRxsB,KAAK2sB,QAAQe,UAAY,OACzB1tB,KAAK2sB,QAAQoB,SAAU,EAAG,EAAGb,GAAkBA,GAC/CltB,KAAK2sB,QAAQoB,SAAUb,GAAkB,EAAGA,GAAkBA,KAG9DltB,KAAK2sB,QAAQa,YACbxtB,KAAK2sB,QAAQpd,UAAW,EAAG,GAC3BvP,KAAK2sB,QAAQqB,OAAQ,EAAG,GACxBhuB,KAAK2sB,QAAQsB,OAAQf,GAAcA,IACnCltB,KAAK2sB,QAAQsB,OAAQ,EAAGf,GACxBltB,KAAK2sB,QAAQe,UAAY,OACzB1tB,KAAK2sB,QAAQgB,QAGd3tB,KAAK2sB,QAAQuB,UAIdC,GAAI92B,EAAM+2B,GACTpuB,KAAK0sB,OAAOroB,iBAAkBhN,EAAM+2B,GAAU,GAG/CC,IAAKh3B,EAAM+2B,GACVpuB,KAAK0sB,OAAOpoB,oBAAqBjN,EAAM+2B,GAAU,GAGlD/wB,UAEC2C,KAAKwsB,SAAU,EAEXxsB,KAAK0sB,OAAOp2B,YACf0J,KAAKxJ,UAAUwY,YAAahP,KAAK0sB,eC5JrB,CAId/pB,MAAO,IACPvK,OAAQ,IAGRod,OAAQ,IAGR8Y,SAAU,GACVC,SAAU,EAGVnqB,UAAU,EAIV0Z,kBAAkB,EAGlBN,eAAgB,eAIhBC,mBAAoB,QAGpB3I,UAAU,EAgBVvP,aAAa,EAMbE,gBAAiB,MAIjB6V,mBAAmB,EAInBJ,MAAM,EAGNsT,sBAAsB,EAGtB7T,aAAa,EAGbkB,SAAS,EAGT9C,UAAU,EAMVf,kBAAmB,KAInByW,eAAe,EAGfrZ,UAAU,EAGVpE,QAAQ,EAGR0d,OAAO,EAGPC,MAAM,EAGNzjB,KAAK,EA0BLgM,eAAgB,UAGhB0X,SAAS,EAGT3b,WAAW,EAIX8B,eAAe,EAIfwF,UAAU,EAIVsU,MAAM,EAGN9pB,OAAO,EAGPqkB,WAAW,EAGX0F,kBAAkB,EAMlBhrB,cAAe,KAOfvD,eAAgB,KAGhBuN,aAAa,EAIb0D,mBAAoB,KAIpBhB,kBAAmB,OACnBC,oBAAqB,EACrBpC,sBAAsB,EAKtBgD,kBAAmB,CAClB,UACA,QACA,mBACA,UACA,YACA,cACA,iBACA,eACA,eACA,gBACA,UACA,kBAQD0d,UAAW,EAGXtU,oBAAoB,EAGpBuU,gBAAiB,KAKjBC,cAAe,KAGf/P,YAAY,EAKZgQ,cAAc,EAGdtqB,aAAa,EAGbuqB,mBAAmB,EAGnBC,iCAAiC,EAGjCC,WAAY,QAGZC,gBAAiB,UAGjBnlB,qBAAsB,OAGtBZ,wBAAyB,GAGzBE,uBAAwB,GAGxBE,yBAA0B,GAG1BE,2BAA4B,GAG5B0C,6BAA8B,KAC9BK,2BAA4B,KAM5Bqd,KAAM,KAMN3F,aAAc,OAQdO,iBAAkB,YAMlBuB,gBAAiB,OAIjBmJ,sBAAuB,KAIvBrG,oBAAqBvP,OAAO6V,kBAG5B5F,sBAAsB,EAOtBT,qBAAsB,EAGtBsG,aAAc,EAKdC,mBAAoB,EAGpBhzB,QAAS,QAGTyiB,oBAAoB,EAGpBI,eAAgB,IAIhBoQ,qBAAqB,EAGrBjP,aAAc,GAGdD,QAAS,ICzSH,MAAMmP,EAAU,QASR,WAAU9S,EAAe5d,GAInCtF,UAAU/C,OAAS,IACtBqI,EAAUtF,UAAU,GACpBkjB,EAAgB9lB,SAAS+L,cAAe,YAGzC,MAAMhD,EAAS,OASd+V,EACAC,EAGA6M,EACA7X,EAiCA8kB,EA5CGzqB,EAAS,GAGZ0qB,GAAQ,EAWRC,EAAoB,CACnB/R,0BAA0B,EAC1BD,wBAAwB,GAMzBuC,EAAQ,GAGR9Q,EAAQ,EAIRwgB,EAAkB,CAAEhtB,OAAQ,GAAIoS,SAAU,IAG1C6a,EAAM,GAMNZ,EAAa,OAGbN,EAAY,EAIZmB,EAAmB,EACnBC,GAAsB,EACtBC,IAAkB,EAKlB5kB,GAAe,IAAI3L,EAAcE,GACjCwF,GAAc,IAAIP,EAAajF,GAC/B4a,GAAc,IAAI7T,EAAa/G,GAC/B+N,GAAc,IAAIX,EAAapN,GAC/BgoB,GAAc,IAAI9e,EAAalJ,GAC/BkT,GAAY,IAAID,EAAWjT,GAC3BqV,GAAW,IAAIH,EAAUlV,GACzBgZ,GAAW,IAAIlC,EAAU9W,GACzBnI,GAAW,IAAIkjB,EAAU/a,GACzBqE,GAAW,IAAImY,EAAUxc,GACzB+U,GAAW,IAAImJ,EAAUle,GACzBswB,GAAU,IAAIzR,EAAS7e,GACvB0gB,GAAU,IAAIL,EAASrgB,GACvBuwB,GAAS,IAAItO,EAAQjiB,GACrBwwB,GAAQ,IAAI9H,EAAO1oB,GACnBuH,GAAQ,IAAIokB,EAAO3rB,GACnB2uB,GAAQ,IAAIxE,EAAOnqB,GACnBspB,GAAQ,IAAIyC,EAAO/rB,GAKpB,SAASywB,GAAYC,GAEpB,IAAK3T,EAAgB,KAAM,2DAM3B,GAHAmT,EAAIS,QAAU5T,EACdmT,EAAI3R,OAASxB,EAAc/Z,cAAe,YAErCktB,EAAI3R,OAAS,KAAM,0DAwBxB,OAfAlZ,EAAS,IAAKurB,KAAkBvrB,KAAWlG,KAAYuxB,KAAgBG,KAGnE,cAAcz3B,KAAMyG,OAAOhI,SAASC,UACvCuN,EAAO6kB,KAAO,SAGf4G,KAGAjxB,OAAOyE,iBAAkB,OAAQrB,IAAQ,GAGzCyd,GAAQhgB,KAAM2E,EAAOqb,QAASrb,EAAOsb,cAAeS,KAAM2P,IAEnD,IAAIlQ,SAASC,GAAW9gB,EAAOouB,GAAI,QAAStN,KAQpD,SAASgQ,MAGgB,IAApBzrB,EAAOmV,SACV0V,EAAIc,SAAWH,EAAc9T,EAAe,qBAAwBA,GAIpEmT,EAAIc,SAAW/5B,SAAS4xB,KACxB5xB,SAASgjB,gBAAgB3kB,UAAUC,IAAK,qBAGzC26B,EAAIc,SAAS17B,UAAUC,IAAK,mBAQ7B,SAASw7B,KAERhB,GAAQ,EAGRkB,KAGAC,KAGAC,KAGAC,KAGAC,KAGAC,KAGAlsB,KAGA4iB,GAAYriB,QAAQ,GAGpB4rB,KAGA15B,GAAS8jB,UAITpd,YAAY,KAEX2xB,EAAI3R,OAAOjpB,UAAUE,OAAQ,iBAE7B06B,EAAIS,QAAQr7B,UAAUC,IAAK,SAE3BwH,GAAc,CACbzF,KAAM,QACN2S,KAAM,CACL8L,SACAC,SACAhL,iBAEA,GACA,GAQJ,SAASumB,KAER,MAAMC,EAAoC,UAAhBnsB,EAAO6kB,KAC3BuH,EAAqC,WAAhBpsB,EAAO6kB,MAE9BsH,GAAqBC,KAEpBD,EACHE,KAGA/C,GAAMvX,SAIP8Y,EAAIc,SAAS17B,UAAUC,IAAK,uBAExBi8B,EAGyB,aAAxBv6B,SAASgN,WACZusB,GAAMpb,WAGNvV,OAAOyE,iBAAkB,QAAQ,IAAMksB,GAAMpb,aAI9Cmb,GAAOnb,YAcV,SAAS6b,KAEH5rB,EAAO0pB,kBACX8B,EAAeX,EAAIS,QAAS,qCAAsCz1B,SAASyF,IAC1E,MAAMgxB,EAAShxB,EAAMpK,WAKY,IAA7Bo7B,EAAOC,mBAA2B,WAAWx4B,KAAMu4B,EAAO3f,UAC7D2f,EAAOn8B,SAGPmL,EAAMnL,YAaV,SAAS07B,KAGRhB,EAAI3R,OAAOjpB,UAAUC,IAAK,iBAEtBs8B,EACH3B,EAAIS,QAAQr7B,UAAUC,IAAK,YAG3B26B,EAAIS,QAAQr7B,UAAUE,OAAQ,YAG/BwyB,GAAY9iB,SACZM,GAAYN,SACZ0V,GAAY1V,SACZb,GAASa,SACT6P,GAAS7P,SACTokB,GAAMpkB,SAGNgrB,EAAI4B,aAAejB,EAA0BX,EAAIS,QAAS,MAAO,gBAAiBtrB,EAAOhB,SAAW,6DAA+D,MAEnK6rB,EAAI6B,cAAgBC,KAEpB9B,EAAIS,QAAQ9vB,aAAc,OAAQ,eAUnC,SAASmxB,KAER,IAAID,EAAgB7B,EAAIS,QAAQ3tB,cAAe,gBAa/C,OAZK+uB,IACJA,EAAgB96B,SAASC,cAAe,OACxC66B,EAAch8B,MAAMmwB,SAAW,WAC/B6L,EAAch8B,MAAMsC,OAAS,MAC7B05B,EAAch8B,MAAM6M,MAAQ,MAC5BmvB,EAAch8B,MAAMk8B,SAAW,SAC/BF,EAAch8B,MAAMm8B,KAAO,6BAC3BH,EAAcz8B,UAAUC,IAAK,eAC7Bw8B,EAAclxB,aAAc,YAAa,UACzCkxB,EAAclxB,aAAc,cAAc,QAC1CqvB,EAAIS,QAAQx5B,YAAa46B,IAEnBA,EAOR,SAAStd,GAAgBpf,GAExB66B,EAAI6B,cAAc9f,YAAc5c,EASjC,SAASqf,GAAe1d,GAEvB,IAAIm7B,EAAO,GAGX,GAAsB,IAAlBn7B,EAAKo7B,SACRD,GAAQn7B,EAAKib,iBAGT,GAAsB,IAAlBjb,EAAKo7B,SAAiB,CAE9B,IAAIC,EAAer7B,EAAK8J,aAAc,eAClCwxB,EAAiE,SAA/CzyB,OAAOpD,iBAAkBzF,GAAgB,QAC1C,SAAjBq7B,GAA4BC,GAE/Bt9B,MAAMC,KAAM+B,EAAKqU,YAAanQ,SAASq3B,IACtCJ,GAAQzd,GAAe6d,EAAO,IASjC,OAFAJ,EAAOA,EAAKxwB,OAEI,KAATwwB,EAAc,GAAKA,EAAO,IAalC,SAASf,KAERoB,aAAa,KACkB,IAA1BtC,EAAIS,QAAQ1M,WAA8C,IAA3BiM,EAAIS,QAAQ8B,aAC9CvC,EAAIS,QAAQ1M,UAAY,EACxBiM,EAAIS,QAAQ8B,WAAa,KAExB,KAUJ,SAASpB,KAERp6B,SAASqN,iBAAkB,mBAAoBouB,IAC/Cz7B,SAASqN,iBAAkB,yBAA0BouB,IActD,SAASvB,KAEJ9rB,EAAOR,aACVhF,OAAOyE,iBAAkB,UAAWquB,IAAe,GAWrD,SAASvtB,GAAWjG,GAEnB,MAAMmG,EAAY,IAAKD,GAQvB,GAJuB,iBAAZlG,GAAuB0xB,EAAaxrB,EAAQlG,IAI7B,IAAtBa,EAAO4yB,UAAuB,OAElC,MAAMC,EAAiB3C,EAAIS,QAAQz7B,iBAAkB4X,GAAkBhW,OAGvEo5B,EAAIS,QAAQr7B,UAAUE,OAAQ8P,EAAUgqB,YACxCY,EAAIS,QAAQr7B,UAAUC,IAAK8P,EAAOiqB,YAElCY,EAAIS,QAAQ9vB,aAAc,wBAAyBwE,EAAOkqB,iBAC1DW,EAAIS,QAAQ9vB,aAAc,6BAA8BwE,EAAO+E,sBAG/D8lB,EAAIc,SAASj7B,MAAM6uB,YAAa,gBAAyC,iBAAjBvf,EAAOzC,MAAqByC,EAAOzC,MAASyC,EAAOzC,MAAQ,MACnHstB,EAAIc,SAASj7B,MAAM6uB,YAAa,iBAA2C,iBAAlBvf,EAAOhN,OAAsBgN,EAAOhN,OAAUgN,EAAOhN,OAAS,MAEnHgN,EAAOwpB,SACVA,KAGDgC,EAAkBX,EAAIS,QAAS,WAAYtrB,EAAOmV,UAClDqW,EAAkBX,EAAIS,QAAS,MAAOtrB,EAAO8F,KAC7C0lB,EAAkBX,EAAIS,QAAS,SAAUtrB,EAAO4L,SAG3B,IAAjB5L,EAAOL,OACV8tB,KAIGztB,EAAO8pB,cACV4D,KACAC,GAAqB,+BAGrBA,KACAD,GAAoB,uDAIrBhlB,GAAYP,QAGRsiB,IACHA,EAAgBxyB,UAChBwyB,EAAkB,MAIf+C,EAAiB,GAAKxtB,EAAO2pB,WAAa3pB,EAAOqV,qBACpDoV,EAAkB,IAAI1D,EAAU8D,EAAIS,SAAS,IACrCz0B,KAAKC,IAAKD,KAAKE,KAAO8f,KAAKC,MAAQiU,GAAuBpB,EAAW,GAAK,KAGlFc,EAAgB1B,GAAI,QAAS6E,IAC7B5C,IAAkB,GAIW,YAA1BhrB,EAAO8R,eACV+Y,EAAIS,QAAQ9vB,aAAc,uBAAwBwE,EAAO8R,gBAGzD+Y,EAAIS,QAAQ5vB,gBAAiB,wBAG9BuoB,GAAMlkB,UAAWC,EAAQC,GACzBiC,GAAMnC,UAAWC,EAAQC,GACzBgrB,GAAQlrB,UAAWC,EAAQC,GAC3BjB,GAASe,UAAWC,EAAQC,GAC5ByP,GAAS3P,UAAWC,EAAQC,GAC5B0T,GAAS5T,UAAWC,EAAQC,GAC5B4N,GAAU9N,UAAWC,EAAQC,GAC7BE,GAAYJ,UAAWC,EAAQC,GAE/B0E,KAOD,SAASkpB,KAIRrzB,OAAOyE,iBAAkB,SAAU6uB,IAAgB,GAE/C9tB,EAAOspB,OAAQA,GAAMxuB,OACrBkF,EAAO2T,UAAWA,GAAS7Y,OAC3BkF,EAAO0P,UAAWA,GAAS5U,OAC3BkF,EAAOopB,sBAAuB52B,GAASsI,OAC3CkE,GAASlE,OACToH,GAAMpH,OAEN+vB,EAAI3R,OAAOja,iBAAkB,QAAS8uB,IAAiB,GACvDlD,EAAI3R,OAAOja,iBAAkB,gBAAiB+uB,IAAiB,GAC/DnD,EAAI4B,aAAaxtB,iBAAkB,QAASwuB,IAAQ,GAEhDztB,EAAOgqB,iCACVp4B,SAASqN,iBAAkB,mBAAoBgvB,IAAwB,GAQzE,SAAS5B,KAIR/C,GAAMvX,SACN7P,GAAM6P,SACN4B,GAAS5B,SACT/S,GAAS+S,SACTrC,GAASqC,SACTvf,GAASuf,SAETvX,OAAO0E,oBAAqB,SAAU4uB,IAAgB,GAEtDjD,EAAI3R,OAAOha,oBAAqB,QAAS6uB,IAAiB,GAC1DlD,EAAI3R,OAAOha,oBAAqB,gBAAiB8uB,IAAiB,GAClEnD,EAAI4B,aAAavtB,oBAAqB,QAASuuB,IAAQ,GAQxD,SAASx1B,KAERo0B,KACAnc,KACAyd,KAGA1J,GAAMhsB,UACNiK,GAAMjK,UACNojB,GAAQpjB,UACRgzB,GAAQhzB,UACR+G,GAAS/G,UACTyX,GAASzX,UACT0qB,GAAY1qB,UACZkI,GAAYlI,UACZsd,GAAYtd,UAGZrG,SAASsN,oBAAqB,mBAAoBmuB,IAClDz7B,SAASsN,oBAAqB,yBAA0BmuB,IACxDz7B,SAASsN,oBAAqB,mBAAoB+uB,IAAwB,GAC1EzzB,OAAO0E,oBAAqB,UAAWouB,IAAe,GACtD9yB,OAAO0E,oBAAqB,OAAQtB,IAAQ,GAGxCitB,EAAI4B,cAAe5B,EAAI4B,aAAat8B,SACpC06B,EAAI6B,eAAgB7B,EAAI6B,cAAcv8B,SAE1CyB,SAASgjB,gBAAgB3kB,UAAUE,OAAQ,oBAE3C06B,EAAIS,QAAQr7B,UAAUE,OAAQ,QAAS,SAAU,wBAAyB,uBAC1E06B,EAAIS,QAAQ5vB,gBAAiB,yBAC7BmvB,EAAIS,QAAQ5vB,gBAAiB,8BAE7BmvB,EAAIc,SAAS17B,UAAUE,OAAQ,mBAC/B06B,EAAIc,SAASj7B,MAAM0C,eAAgB,iBACnCy3B,EAAIc,SAASj7B,MAAM0C,eAAgB,kBAEnCy3B,EAAI3R,OAAOxoB,MAAM0C,eAAgB,SACjCy3B,EAAI3R,OAAOxoB,MAAM0C,eAAgB,UACjCy3B,EAAI3R,OAAOxoB,MAAM0C,eAAgB,QACjCy3B,EAAI3R,OAAOxoB,MAAM0C,eAAgB,QACjCy3B,EAAI3R,OAAOxoB,MAAM0C,eAAgB,OACjCy3B,EAAI3R,OAAOxoB,MAAM0C,eAAgB,UACjCy3B,EAAI3R,OAAOxoB,MAAM0C,eAAgB,SACjCy3B,EAAI3R,OAAOxoB,MAAM0C,eAAgB,aAEjCzD,MAAMC,KAAMi7B,EAAIS,QAAQz7B,iBAAkB4X,IAAoB5R,SAASyF,IACtEA,EAAM5K,MAAM0C,eAAgB,WAC5BkI,EAAM5K,MAAM0C,eAAgB,OAC5BkI,EAAMI,gBAAiB,UACvBJ,EAAMI,gBAAiB,cAAe,IASxC,SAASqtB,GAAI92B,EAAM+2B,EAAUkF,GAE5BxW,EAAczY,iBAAkBhN,EAAM+2B,EAAUkF,GAOjD,SAASjF,GAAKh3B,EAAM+2B,EAAUkF,GAE7BxW,EAAcxY,oBAAqBjN,EAAM+2B,EAAUkF,GAWpD,SAAS/c,GAAiBgd,GAGQ,iBAAtBA,EAAWvwB,SAAsBgtB,EAAgBhtB,OAASuwB,EAAWvwB,QAC7C,iBAAxBuwB,EAAWne,WAAwB4a,EAAgB5a,SAAWme,EAAWne,UAGhF4a,EAAgBhtB,OACnB4tB,EAAuBX,EAAI3R,OAAQ0R,EAAgBhtB,OAAS,IAAMgtB,EAAgB5a,UAGlFwb,EAAuBX,EAAI3R,OAAQ0R,EAAgB5a,UASrD,SAAStY,IAAc9G,OAAEA,EAAOi6B,EAAIS,QAAOr5B,KAAEA,EAAI2S,KAAEA,EAAI0K,QAAEA,GAAQ,IAEhE,IAAInQ,EAAQvN,SAASw8B,YAAa,aAAc,EAAG,GAWnD,OAVAjvB,EAAMkvB,UAAWp8B,EAAMqd,GAAS,GAChCkc,EAAarsB,EAAOyF,GACpBhU,EAAO8G,cAAeyH,GAElBvO,IAAWi6B,EAAIS,SAGlBgD,GAAqBr8B,GAGfkN,EASR,SAASovB,GAAsBC,GAE9B92B,GAAc,CACbzF,KAAM,eACN2S,KAAM,CACL8L,SACAC,SACA6M,gBACA7X,eACA6oB,YASH,SAASF,GAAqBr8B,EAAM2S,GAEnC,GAAI5E,EAAO+pB,mBAAqBvvB,OAAO8xB,SAAW9xB,OAAOi0B,KAAO,CAC/D,IAAIC,EAAU,CACbC,UAAW,SACXpW,UAAWtmB,EACXipB,MAAO8B,MAGRwO,EAAakD,EAAS9pB,GAEtBpK,OAAO8xB,OAAO9sB,YAAaovB,KAAKC,UAAWH,GAAW,MAUxD,SAAShB,GAAoBh+B,EAAW,KAEvCC,MAAMC,KAAMi7B,EAAIS,QAAQz7B,iBAAkBH,IAAamG,SAASrF,IAC3D,gBAAgBuD,KAAMvD,EAAQiL,aAAc,UAC/CjL,EAAQyO,iBAAkB,QAAS6vB,IAAsB,MAS5D,SAASnB,GAAqBj+B,EAAW,KAExCC,MAAMC,KAAMi7B,EAAIS,QAAQz7B,iBAAkBH,IAAamG,SAASrF,IAC3D,gBAAgBuD,KAAMvD,EAAQiL,aAAc,UAC/CjL,EAAQ0O,oBAAqB,QAAS4vB,IAAsB,MAW/D,SAASC,GAAavyB,GAErBiZ,KAEAoV,EAAImE,QAAUp9B,SAASC,cAAe,OACtCg5B,EAAImE,QAAQ/+B,UAAUC,IAAK,WAC3B26B,EAAImE,QAAQ/+B,UAAUC,IAAK,mBAC3B26B,EAAIS,QAAQx5B,YAAa+4B,EAAImE,SAE7BnE,EAAImE,QAAQz9B,UACV,iHAE4BiL,6JAIbA,uNAMjBquB,EAAImE,QAAQrxB,cAAe,UAAWsB,iBAAkB,QAAQE,IAC/D0rB,EAAImE,QAAQ/+B,UAAUC,IAAK,SAAU,IACnC,GAEH26B,EAAImE,QAAQrxB,cAAe,UAAWsB,iBAAkB,SAASE,IAChEsW,KACAtW,EAAMqS,gBAAgB,IACpB,GAEHqZ,EAAImE,QAAQrxB,cAAe,aAAcsB,iBAAkB,SAASE,IACnEsW,IAAc,IACZ,GAWJ,SAAS9C,GAAYpB,GAEI,kBAAbA,EACVA,EAAW0d,KAAaxZ,KAGpBoV,EAAImE,QACPvZ,KAGAwZ,KAQH,SAASA,KAER,GAAIjvB,EAAOypB,KAAO,CAEjBhU,KAEAoV,EAAImE,QAAUp9B,SAASC,cAAe,OACtCg5B,EAAImE,QAAQ/+B,UAAUC,IAAK,WAC3B26B,EAAImE,QAAQ/+B,UAAUC,IAAK,gBAC3B26B,EAAIS,QAAQx5B,YAAa+4B,EAAImE,SAE7B,IAAIE,EAAO,+CAEPxd,EAAYiC,GAASpB,eACxBZ,EAAWgC,GAASnB,cAErB0c,GAAQ,qCACR,IAAK,IAAIx6B,KAAOgd,EACfwd,GAAS,WAAUx6B,aAAegd,EAAWhd,eAI9C,IAAK,IAAIud,KAAWN,EACfA,EAASM,GAASvd,KAAOid,EAASM,GAASE,cAC9C+c,GAAS,WAAUvd,EAASM,GAASvd,eAAeid,EAASM,GAASE,yBAIxE+c,GAAQ,WAERrE,EAAImE,QAAQz9B,UAAa,oLAKO29B,kCAIhCrE,EAAImE,QAAQrxB,cAAe,UAAWsB,iBAAkB,SAASE,IAChEsW,KACAtW,EAAMqS,gBAAgB,IACpB,IASL,SAASiE,KAER,QAAIoV,EAAImE,UACPnE,EAAImE,QAAQ99B,WAAW0Y,YAAaihB,EAAImE,SACxCnE,EAAImE,QAAU,MACP,GAWT,SAASpxB,KAER,GAAIitB,EAAIS,UAAYH,GAAMlb,WAAa,CAEtC,MAAMkf,EAAgBtE,EAAIc,SAAS1kB,YAC7BkY,EAAiB0L,EAAIc,SAASx4B,aAEpC,IAAK6M,EAAOqpB,cAAgB,CAQvBmD,IAAoBxsB,EAAOmV,UAC9BvjB,SAASgjB,gBAAgBlkB,MAAM6uB,YAAa,OAA+B,IAArB/kB,OAAO0W,YAAuB,MAGrF,MAAMke,EAAOlE,GAAOjb,WAChBK,GAAsB6e,EAAehQ,GACrC7O,KAEE+e,EAAWjlB,EAGjBqZ,GAAqBzjB,EAAOzC,MAAOyC,EAAOhN,QAE1C63B,EAAI3R,OAAOxoB,MAAM6M,MAAQ6xB,EAAK7xB,MAAQ,KACtCstB,EAAI3R,OAAOxoB,MAAMsC,OAASo8B,EAAKp8B,OAAS,KAGxCoX,EAAQvT,KAAKC,IAAKs4B,EAAKE,kBAAoBF,EAAK7xB,MAAO6xB,EAAKG,mBAAqBH,EAAKp8B,QAGtFoX,EAAQvT,KAAKE,IAAKqT,EAAOpK,EAAOkpB,UAChC9e,EAAQvT,KAAKC,IAAKsT,EAAOpK,EAAOmpB,UAIlB,IAAV/e,GAAe8gB,GAAOjb,YACzB4a,EAAI3R,OAAOxoB,MAAM8+B,KAAO,GACxB3E,EAAI3R,OAAOxoB,MAAM0jB,KAAO,GACxByW,EAAI3R,OAAOxoB,MAAMguB,IAAM,GACvBmM,EAAI3R,OAAOxoB,MAAM4zB,OAAS,GAC1BuG,EAAI3R,OAAOxoB,MAAM2jB,MAAQ,GACzBlD,GAAiB,CAAEvT,OAAQ,OAG3BitB,EAAI3R,OAAOxoB,MAAM8+B,KAAO,GACxB3E,EAAI3R,OAAOxoB,MAAM0jB,KAAO,MACxByW,EAAI3R,OAAOxoB,MAAMguB,IAAM,MACvBmM,EAAI3R,OAAOxoB,MAAM4zB,OAAS,OAC1BuG,EAAI3R,OAAOxoB,MAAM2jB,MAAQ,OACzBlD,GAAiB,CAAEvT,OAAQ,+BAAgCwM,EAAO,OAInE,MAAM8O,EAASvpB,MAAMC,KAAMi7B,EAAIS,QAAQz7B,iBAAkB4X,IAEzD,IAAK,IAAIlY,EAAI,EAAGkgC,EAAMvW,EAAOznB,OAAQlC,EAAIkgC,EAAKlgC,IAAM,CACnD,MAAM+L,EAAQ4d,EAAQ3pB,GAGM,SAAxB+L,EAAM5K,MAAM4G,UAIV0I,EAAO4L,QAAUtQ,EAAMrL,UAAUwV,SAAU,UAG5CnK,EAAMrL,UAAUwV,SAAU,SAC7BnK,EAAM5K,MAAMguB,IAAM,EAGlBpjB,EAAM5K,MAAMguB,IAAM7nB,KAAKE,KAAOq4B,EAAKp8B,OAASsI,EAAMujB,cAAiB,EAAG,GAAM,KAI7EvjB,EAAM5K,MAAMguB,IAAM,IAKhB2Q,IAAajlB,GAChB1S,GAAc,CACbzF,KAAM,SACN2S,KAAM,CACLyqB,WACAjlB,QACAglB,UAQyC,iBAAjCpvB,EAAOmqB,uBAAsD,WAAhBnqB,EAAO6kB,OAC1DuK,EAAKE,kBAAoBtvB,EAAOmqB,sBAC9Be,GAAOjb,YAAaib,GAAOnb,WAG5Bmb,GAAOjb,YAAaib,GAAO9Z,cAKlCyZ,EAAIc,SAASj7B,MAAM6uB,YAAa,gBAAiBnV,GACjDygB,EAAIc,SAASj7B,MAAM6uB,YAAa,mBAAoB4P,EAAgB,MACpEtE,EAAIc,SAASj7B,MAAM6uB,YAAa,oBAAqBJ,EAAiB,MAEtE+L,GAAOttB,SAEP8R,GAASpP,SACTqiB,GAAYlc,iBAERuJ,GAASC,YACZD,GAAS1P,UAcZ,SAASmjB,GAAqBlmB,EAAOvK,GAEpCw4B,EAAeX,EAAI3R,OAAQ,4CAA6CrjB,SAASrF,IAGhF,IAAIk/B,EAAkBlE,EAAyBh7B,EAASwC,GAGxD,GAAI,gBAAgBe,KAAMvD,EAAQmc,UAAa,CAC9C,MAAMgjB,EAAKn/B,EAAQo/B,cAAgBp/B,EAAQq/B,WACxCC,EAAKt/B,EAAQu/B,eAAiBv/B,EAAQw/B,YAEnCC,EAAKp5B,KAAKC,IAAKyG,EAAQoyB,EAAID,EAAkBI,GAEnDt/B,EAAQE,MAAM6M,MAAUoyB,EAAKM,EAAO,KACpCz/B,EAAQE,MAAMsC,OAAW88B,EAAKG,EAAO,UAIrCz/B,EAAQE,MAAM6M,MAAQA,EAAQ,KAC9B/M,EAAQE,MAAMsC,OAAS08B,EAAkB,QAe5C,SAASpf,GAAsBgf,EAAmBC,GAEjD,IAAIhyB,EAAQyC,EAAOzC,MACfvK,EAASgN,EAAOhN,OAEhBgN,EAAOqpB,gBACV9rB,EAAQstB,EAAI3R,OAAOjS,YACnBjU,EAAS63B,EAAI3R,OAAO/lB,cAGrB,MAAMi8B,EAAO,CAEZ7xB,MAAOA,EACPvK,OAAQA,EAGRs8B,kBAAmBA,GAAqBzE,EAAIS,QAAQrkB,YACpDsoB,mBAAoBA,GAAsB1E,EAAIS,QAAQn4B,cAiBvD,OAbAi8B,EAAKE,mBAAuBF,EAAKE,kBAAoBtvB,EAAOoQ,OAC5Dgf,EAAKG,oBAAwBH,EAAKG,mBAAqBvvB,EAAOoQ,OAGpC,iBAAfgf,EAAK7xB,OAAsB,KAAKxJ,KAAMq7B,EAAK7xB,SACrD6xB,EAAK7xB,MAAQgG,SAAU6rB,EAAK7xB,MAAO,IAAO,IAAM6xB,EAAKE,mBAI3B,iBAAhBF,EAAKp8B,QAAuB,KAAKe,KAAMq7B,EAAKp8B,UACtDo8B,EAAKp8B,OAASuQ,SAAU6rB,EAAKp8B,OAAQ,IAAO,IAAMo8B,EAAKG,oBAGjDH,EAYR,SAASc,GAA0BlS,EAAO3c,GAEpB,iBAAV2c,GAAoD,mBAAvBA,EAAMxiB,cAC7CwiB,EAAMxiB,aAAc,uBAAwB6F,GAAK,GAYnD,SAAS8uB,GAA0BnS,GAElC,GAAqB,iBAAVA,GAAoD,mBAAvBA,EAAMxiB,cAA+BwiB,EAAM/tB,UAAUwV,SAAU,SAAY,CAElH,MAAM2qB,EAAgBpS,EAAM5iB,aAAc,qBAAwB,oBAAsB,uBAExF,OAAOmI,SAAUya,EAAMviB,aAAc20B,IAAmB,EAAG,IAG5D,OAAO,EAYR,SAAShvB,GAAiB9F,EAAQqK,GAEjC,OAAOrK,GAASA,EAAMpK,cAAgBoK,EAAMpK,WAAWyb,SAAStc,MAAO,YAWxE,SAASytB,GAAiBxiB,EAAQqK,GAEjC,OAAOrK,EAAMrL,UAAUwV,SAAU,WAAmD,OAArCnK,EAAMqC,cAAe,WAQrE,SAAS0yB,KAER,SAAI1qB,IAAgBvE,GAAiBuE,MAEhCA,EAAa2qB,mBAanB,SAASC,KAER,OAAkB,IAAX7f,GAA2B,IAAXC,EAUxB,SAAS6f,KAER,QAAI7qB,KAECA,EAAa2qB,sBAGblvB,GAAiBuE,KAAkBA,EAAazU,WAAWo/B,qBAajE,SAAS3wB,KAER,GAAIK,EAAOL,MAAQ,CAClB,MAAM8wB,EAAY5F,EAAIS,QAAQr7B,UAAUwV,SAAU,UAElDyK,KACA2a,EAAIS,QAAQr7B,UAAUC,IAAK,WAET,IAAdugC,GACH/4B,GAAc,CAAEzF,KAAM,YASzB,SAASw7B,KAER,MAAMgD,EAAY5F,EAAIS,QAAQr7B,UAAUwV,SAAU,UAClDolB,EAAIS,QAAQr7B,UAAUE,OAAQ,UAE9BkhB,KAEIof,GACH/4B,GAAc,CAAEzF,KAAM,YAQxB,SAASyiB,GAAanD,GAEG,kBAAbA,EACVA,EAAW5R,KAAU8tB,KAGrB7Z,KAAa6Z,KAAW9tB,KAU1B,SAASiU,KAER,OAAOiX,EAAIS,QAAQr7B,UAAUwV,SAAU,UAOxC,SAAS+P,GAAmBjE,GAEH,kBAAbA,EACVA,EAAWgE,GAAYvT,OAASuT,GAAYpT,OAG5CoT,GAAYlW,YAAckW,GAAYpT,OAASoT,GAAYvT,OAY7D,SAASsT,GAAiB/D,GAED,kBAAbA,EACVA,EAAWmf,KAAoBC,KAI/B3F,GAAkB0F,KAAoBC,KAUxC,SAAS5d,KAER,SAAW4W,GAAcqB,IAe1B,SAAS1vB,GAAO4F,EAAGG,EAAG5L,EAAG+4B,GAaxB,GAVoB92B,GAAc,CACjCzF,KAAM,oBACN2S,KAAM,CACL8L,YAAcnW,IAAN2G,EAAkBwP,EAASxP,EACnCyP,YAAcpW,IAAN8G,EAAkBsP,EAAStP,EACnCmtB,YAKcoC,iBAAmB,OAGnCpT,EAAgB7X,EAGhB,MAAMiB,EAAmBikB,EAAIS,QAAQz7B,iBAAkB6X,GAIvD,GAAIwjB,GAAOjb,WAAa,CACvB,MAAMuS,EAAgB0I,GAAOnI,kBAAmB7hB,EAAGG,GAEnD,YADImhB,GAAgB0I,GAAO1I,cAAeA,IAK3C,GAAgC,IAA5B5b,EAAiBnV,OAAe,YAI1B8I,IAAN8G,GAAoB2O,GAASC,aAChC5O,EAAI8uB,GAA0BvpB,EAAkB1F,KAK7Csc,GAAiBA,EAActsB,YAAcssB,EAActsB,WAAWjB,UAAUwV,SAAU,UAC7FyqB,GAA0B1S,EAActsB,WAAYyf,GAIrD,MAAMkgB,EAAc3V,EAAMvN,SAG1BuN,EAAMzpB,OAAS,EAEf,IAAIq/B,EAAepgB,GAAU,EAC5BqgB,EAAepgB,GAAU,EAG1BD,EAASsgB,GAActpB,OAAkCnN,IAAN2G,EAAkBwP,EAASxP,GAC9EyP,EAASqgB,GAAcrpB,OAAgCpN,IAAN8G,EAAkBsP,EAAStP,GAG5E,IAAI4vB,EAAiBvgB,IAAWogB,GAAgBngB,IAAWogB,EAGtDE,IAAezT,EAAgB,MAIpC,IAAI0T,EAAyBtqB,EAAkB8J,GAC9CygB,EAAwBD,EAAuBrhC,iBAAkB,WAGlE8V,EAAewrB,EAAuBxgB,IAAYugB,EAElD,IAAIE,GAAwB,EAGxBH,GAAgBzT,GAAiB7X,IAAiBqK,GAASC,aAC9Dga,EAAa,UAEbmH,EAAwBzT,GAA0BH,EAAe7X,EAAcmrB,EAAcC,GAQzFK,GACHvG,EAAI3R,OAAOjpB,UAAUC,IAAK,8BAK5BugB,KAEA7S,KAGIoS,GAASC,YACZD,GAAS1P,cAIO,IAAN7K,GACVoY,GAAU0B,KAAM9Z,GAMb+nB,GAAiBA,IAAkB7X,IACtC6X,EAAcvtB,UAAUE,OAAQ,WAChCqtB,EAAchiB,aAAc,cAAe,QAGvC+0B,MAEHr3B,YAAY,KACXm4B,KAAoBx7B,SAASyF,IAC5B40B,GAA0B50B,EAAO,EAAG,GAClC,GACD,IAKLg2B,EAAW,IAAK,IAAI/hC,EAAI,EAAGkgC,EAAMvU,EAAMzpB,OAAQlC,EAAIkgC,EAAKlgC,IAAM,CAG7D,IAAK,IAAIgiC,EAAI,EAAGA,EAAIV,EAAYp/B,OAAQ8/B,IACvC,GAAIV,EAAYU,KAAOrW,EAAM3rB,GAAK,CACjCshC,EAAYW,OAAQD,EAAG,GACvB,SAASD,EAIXzG,EAAIc,SAAS17B,UAAUC,IAAKgrB,EAAM3rB,IAGlCmI,GAAc,CAAEzF,KAAMipB,EAAM3rB,KAI7B,KAAOshC,EAAYp/B,QAClBo5B,EAAIc,SAAS17B,UAAUE,OAAQ0gC,EAAYh+B,OAGxCo+B,GACH1C,GAAsBC,IAInByC,GAAiBzT,IACpBpX,GAAa3G,oBAAqB+d,GAClCpX,GAAa5H,qBAAsBmH,IAMpCrQ,uBAAuB,KACtB8Z,GAAgBC,GAAe1J,GAAgB,IAGhD+J,GAASpP,SACTtB,GAASsB,SACT2jB,GAAM3jB,SACNqiB,GAAYriB,SACZqiB,GAAYlc,iBACZtG,GAAYG,SACZuN,GAAUvN,SAGV9N,GAASod,WAETyB,KAGI+f,IAEHl4B,YAAY,KACX2xB,EAAI3R,OAAOjpB,UAAUE,OAAQ,4BAA6B,GACxD,GAEC6P,EAAO0I,aAEVA,GAAYV,IAAKwV,EAAe7X,IAkBnC,SAASgY,GAA0B1V,EAAWC,EAAS4oB,EAAcC,GAEpE,OAAQ9oB,EAAU7M,aAAc,sBAAyB8M,EAAQ9M,aAAc,sBAC7E6M,EAAUxM,aAAc,0BAA6ByM,EAAQzM,aAAc,2BACtEiV,EAASogB,GAAgBngB,EAASogB,EAAiB7oB,EAAUD,GAAY7M,aAAc,6BAW/F,SAASsnB,GAAsB5C,EAAc5e,EAAGG,GAE/C,IAAIyvB,EAAepgB,GAAU,EAE7BA,EAASxP,EACTyP,EAAStP,EAET,MAAM4vB,EAAetrB,IAAiBma,EAEtCtC,EAAgB7X,EAChBA,EAAema,EAEXna,GAAgB6X,GACfxd,EAAO0I,aAAeiV,GAA0BH,EAAe7X,EAAcmrB,EAAcngB,IAE9FjI,GAAYV,IAAKwV,EAAe7X,GAK9BsrB,IACCzT,IACHpX,GAAa3G,oBAAqB+d,GAClCpX,GAAa3G,oBAAqB+d,EAAc1hB,yBAGjDsK,GAAa5H,qBAAsBmH,GACnCS,GAAa5H,qBAAsBmH,EAAa7J,yBAGjDxG,uBAAuB,KACtB8Z,GAAgBC,GAAe1J,GAAgB,IAGhD4oB,KASD,SAAS5pB,KAGR0nB,KACAwB,KAGAjwB,KAGA+rB,EAAY3pB,EAAO2pB,UAGnBtY,KAGAsR,GAAY7e,SAGZtR,GAASod,YAE0B,IAA/B5P,EAAOuqB,qBACV1c,GAAUc,UAGX3P,GAASsB,SACToP,GAASpP,SAETmQ,KAEAwT,GAAM3jB,SACN2jB,GAAM0C,mBACNhE,GAAYriB,QAAQ,GACpBH,GAAYG,SACZ8F,GAAapI,yBAGgB,IAAzBgC,EAAOtB,cACV0H,GAAa3G,oBAAqBkG,EAAc,CAAEjG,eAAe,IAGjE0G,GAAa5H,qBAAsBmH,GAGhCqK,GAASC,YACZD,GAASpS,SAeX,SAAS6zB,GAAWn2B,EAAQqK,GAE3Bgd,GAAYhe,KAAMrJ,GAClBuS,GAAUlJ,KAAMrJ,GAEhB8K,GAAa/K,KAAMC,GAEnBqnB,GAAYriB,SACZ2jB,GAAM3jB,SAQP,SAAS2rB,KAERvrB,KAAsB7K,SAAS+Y,IAE9B4c,EAAe5c,EAAiB,WAAY/Y,SAAS,CAAEgZ,EAAepE,KAEjEA,EAAI,IACPoE,EAAc5e,UAAUE,OAAQ,WAChC0e,EAAc5e,UAAUE,OAAQ,QAChC0e,EAAc5e,UAAUC,IAAK,UAC7B2e,EAAcrT,aAAc,cAAe,WAG1C,IASL,SAASguB,GAAStQ,EAASxY,MAE1BwY,EAAOrjB,SAAS,CAAEyF,EAAO/L,KAKxB,IAAImiC,EAAcxY,EAAQriB,KAAKwiB,MAAOxiB,KAAK86B,SAAWzY,EAAOznB,SACzDigC,EAAYxgC,aAAeoK,EAAMpK,YACpCoK,EAAMpK,WAAW4pB,aAAcxf,EAAOo2B,GAIvC,IAAI7qB,EAAiBvL,EAAMzL,iBAAkB,WACzCgX,EAAepV,QAClB+3B,GAAS3iB,MAoBZ,SAASmqB,GAActhC,EAAU8c,GAIhC,IAAI0M,EAASsS,EAAeX,EAAIS,QAAS57B,GACxCkiC,EAAe1Y,EAAOznB,OAEnBogC,EAAY3G,GAAOjb,YAAckb,GAAMlb,WACvC6hB,GAAiB,EACjBC,GAAkB,EAEtB,GAAIH,EAAe,CAGd5xB,EAAOupB,OACN/c,GAASolB,IAAeE,GAAiB,IAE7CtlB,GAASolB,GAEG,IACXplB,EAAQolB,EAAeplB,EACvBulB,GAAkB,IAKpBvlB,EAAQ3V,KAAKE,IAAKF,KAAKC,IAAK0V,EAAOolB,EAAe,GAAK,GAEvD,IAAK,IAAIriC,EAAI,EAAGA,EAAIqiC,EAAcriC,IAAM,CACvC,IAAIiB,EAAU0oB,EAAO3pB,GAEjByiC,EAAUhyB,EAAO8F,MAAQ1E,GAAiB5Q,GAG9CA,EAAQP,UAAUE,OAAQ,QAC1BK,EAAQP,UAAUE,OAAQ,WAC1BK,EAAQP,UAAUE,OAAQ,UAG1BK,EAAQgL,aAAc,SAAU,IAChChL,EAAQgL,aAAc,cAAe,QAGjChL,EAAQmN,cAAe,YAC1BnN,EAAQP,UAAUC,IAAK,SAIpB2hC,EACHrhC,EAAQP,UAAUC,IAAK,WAIpBX,EAAIid,GAEPhc,EAAQP,UAAUC,IAAK8hC,EAAU,SAAW,QAExChyB,EAAO6N,WAEVokB,GAAiBzhC,IAGVjB,EAAIid,GAEZhc,EAAQP,UAAUC,IAAK8hC,EAAU,OAAS,UAEtChyB,EAAO6N,WAEVqkB,GAAiB1hC,IAKVjB,IAAMid,GAASxM,EAAO6N,YAC1BikB,EACHI,GAAiB1hC,GAETuhC,GACRE,GAAiBzhC,IAKpB,IAAI8K,EAAQ4d,EAAO1M,GACf2lB,EAAa72B,EAAMrL,UAAUwV,SAAU,WAG3CnK,EAAMrL,UAAUC,IAAK,WACrBoL,EAAMI,gBAAiB,UACvBJ,EAAMI,gBAAiB,eAElBy2B,GAEJz6B,GAAc,CACb9G,OAAQ0K,EACRrJ,KAAM,UACNqd,SAAS,IAMX,IAAI8iB,EAAa92B,EAAMG,aAAc,cACjC22B,IACHlX,EAAQA,EAAMvN,OAAQykB,EAAWz/B,MAAO,YAOzC6Z,EAAQ,EAGT,OAAOA,EAOR,SAASylB,GAAiB7gC,GAEzBo6B,EAAep6B,EAAW,aAAcyE,SAAS4Y,IAChDA,EAASxe,UAAUC,IAAK,WACxBue,EAASxe,UAAUE,OAAQ,mBAAoB,IAQjD,SAAS+hC,GAAiB9gC,GAEzBo6B,EAAep6B,EAAW,qBAAsByE,SAAS4Y,IACxDA,EAASxe,UAAUE,OAAQ,UAAW,mBAAoB,IAS5D,SAASsgB,KAIR,IAEC4hB,EACAC,EAHG1rB,EAAmBlG,KACtB6xB,EAAyB3rB,EAAiBnV,OAI3C,GAAI8gC,QAA4C,IAAX7hB,EAAyB,CAI7D,IAAI2Z,EAAera,GAASC,WAAa,GAAKjQ,EAAOqqB,aAIjDmC,IACHnC,EAAera,GAASC,WAAa,EAAIjQ,EAAOsqB,oBAI7Ca,GAAMlb,aACToa,EAAe9V,OAAOC,WAGvB,IAAK,IAAIhK,EAAI,EAAGA,EAAI+nB,EAAwB/nB,IAAM,CACjD,IAAIoE,EAAkBhI,EAAiB4D,GAEnC3D,EAAiB2kB,EAAe5c,EAAiB,WACpD4jB,EAAuB3rB,EAAepV,OAmBvC,GAhBA4gC,EAAYx7B,KAAKovB,KAAOvV,GAAU,GAAMlG,IAAO,EAI3CxK,EAAOupB,OACV8I,EAAYx7B,KAAKovB,MAASvV,GAAU,GAAMlG,IAAQ+nB,EAAyBlI,KAAoB,GAI5FgI,EAAYhI,EACfjkB,GAAa/K,KAAMuT,GAGnBxI,GAAatI,OAAQ8Q,GAGlB4jB,EAAuB,CAE1B,IAAIC,EAAKtC,GAA0BvhB,GAEnC,IAAK,IAAInE,EAAI,EAAGA,EAAI+nB,EAAsB/nB,IAAM,CAC/C,IAAIoE,EAAgBhI,EAAe4D,GAEnC6nB,EAAY9nB,KAAQkG,GAAU,GAAM7Z,KAAKovB,KAAOtV,GAAU,GAAMlG,GAAM5T,KAAKovB,IAAKxb,EAAIgoB,GAEhFJ,EAAYC,EAAYjI,EAC3BjkB,GAAa/K,KAAMwT,GAGnBzI,GAAatI,OAAQ+Q,KAQrBkF,KACH8W,EAAIS,QAAQr7B,UAAUC,IAAK,uBAG3B26B,EAAIS,QAAQr7B,UAAUE,OAAQ,uBAI3B2jB,KACH+W,EAAIS,QAAQr7B,UAAUC,IAAK,yBAG3B26B,EAAIS,QAAQr7B,UAAUE,OAAQ,0BAYjC,SAAS6d,IAAgB8X,iBAAEA,GAAmB,GAAU,IAEvD,IAAIlf,EAAmBikB,EAAIS,QAAQz7B,iBAAkB6X,GACpDb,EAAiBgkB,EAAIS,QAAQz7B,iBAAkB8X,GAE5C6Q,EAAS,CACZpE,KAAM1D,EAAS,EACf2D,MAAO3D,EAAS9J,EAAiBnV,OAAS,EAC1C6iB,GAAI3D,EAAS,EACb8D,KAAM9D,EAAS9J,EAAepV,OAAS,GAyBxC,GApBIuO,EAAOupB,OACN3iB,EAAiBnV,OAAS,IAC7B+mB,EAAOpE,MAAO,EACdoE,EAAOnE,OAAQ,GAGZxN,EAAepV,OAAS,IAC3B+mB,EAAOlE,IAAK,EACZkE,EAAO/D,MAAO,IAIX7N,EAAiBnV,OAAS,GAA+B,WAA1BuO,EAAO8R,iBAC1C0G,EAAOnE,MAAQmE,EAAOnE,OAASmE,EAAO/D,KACtC+D,EAAOpE,KAAOoE,EAAOpE,MAAQoE,EAAOlE,KAMZ,IAArBwR,EAA4B,CAC/B,IAAI4M,EAAiB7kB,GAAUG,kBAC/BwK,EAAOpE,KAAOoE,EAAOpE,MAAQse,EAAexkB,KAC5CsK,EAAOlE,GAAKkE,EAAOlE,IAAMoe,EAAexkB,KACxCsK,EAAO/D,KAAO+D,EAAO/D,MAAQie,EAAevkB,KAC5CqK,EAAOnE,MAAQmE,EAAOnE,OAASqe,EAAevkB,KAI/C,GAAInO,EAAO8F,IAAM,CAChB,IAAIsO,EAAOoE,EAAOpE,KAClBoE,EAAOpE,KAAOoE,EAAOnE,MACrBmE,EAAOnE,MAAQD,EAGhB,OAAOoE,EAYR,SAAS1X,GAAmBxF,EAAQqK,GAEnC,IAAIiB,EAAmBlG,KAGnBiyB,EAAY,EAGhBC,EAAU,IAAK,IAAIrjC,EAAI,EAAGA,EAAIqX,EAAiBnV,OAAQlC,IAAM,CAE5D,IAAIqf,EAAkBhI,EAAiBrX,GACnCsX,EAAiB+H,EAAgB/e,iBAAkB,WAEvD,IAAK,IAAI0hC,EAAI,EAAGA,EAAI1qB,EAAepV,OAAQ8/B,IAAM,CAGhD,GAAI1qB,EAAe0qB,KAAOj2B,EACzB,MAAMs3B,EAIsC,cAAzC/rB,EAAe0qB,GAAG3wB,QAAQC,YAC7B8xB,IAMF,GAAI/jB,IAAoBtT,EACvB,OAKqD,IAAlDsT,EAAgB3e,UAAUwV,SAAU,UAA8D,cAAvCmJ,EAAgBhO,QAAQC,YACtF8xB,IAKF,OAAOA,EAUR,SAAS3Z,KAGR,IAAI6Z,EAAa9xB,KACb4xB,EAAY7xB,KAEhB,GAAI6E,EAAe,CAElB,IAAImtB,EAAentB,EAAa9V,iBAAkB,aAIlD,GAAIijC,EAAarhC,OAAS,EAAI,CAC7B,IAIIshC,EAAiB,GAGrBJ,GAPuBhtB,EAAa9V,iBAAkB,qBAOtB4B,OAASqhC,EAAarhC,OAAWshC,GAKnE,OAAOl8B,KAAKC,IAAK67B,GAAcE,EAAa,GAAK,GAclD,SAAS5xB,GAAY3F,GAGpB,IAEC7F,EAFGyL,EAAIwP,EACPrP,EAAIsP,EAIL,GAAIrV,EAEH,GAAI4vB,GAAOjb,WACV/O,EAAIqC,SAAUjI,EAAMG,aAAc,gBAAkB,IAEhDH,EAAMG,aAAc,kBACvB4F,EAAIkC,SAAUjI,EAAMG,aAAc,gBAAkB,SAGjD,CACJ,IAAIu3B,EAAa5xB,GAAiB9F,GAC9ByI,EAASivB,EAAa13B,EAAMpK,WAAaoK,EAGzCsL,EAAmBlG,KAGvBQ,EAAIrK,KAAKE,IAAK6P,EAAiBrI,QAASwF,GAAU,GAGlD1C,OAAI9G,EAGAy4B,IACH3xB,EAAIxK,KAAKE,IAAKy0B,EAAelwB,EAAMpK,WAAY,WAAYqN,QAASjD,GAAS,IAKhF,IAAKA,GAASqK,EAAe,CAE5B,GADmBA,EAAa9V,iBAAkB,aAAc4B,OAAS,EACtD,CAClB,IAAIyd,EAAkBvJ,EAAahI,cAAe,qBAEjDlI,EADGyZ,GAAmBA,EAAgB9T,aAAc,uBAChDmI,SAAU2L,EAAgBzT,aAAc,uBAAyB,IAGjEkK,EAAa9V,iBAAkB,qBAAsB4B,OAAS,GAKrE,MAAO,CAAEyP,IAAGG,IAAG5L,KAOhB,SAASmN,KAER,OAAO4oB,EAAeX,EAAIS,QAAS7jB,EAAkB,mDAStD,SAAS/G,KAER,OAAO8qB,EAAeX,EAAIS,QAAS5jB,GAOpC,SAASZ,KAER,OAAO0kB,EAAeX,EAAIS,QAAS,2BAOpC,SAAS+F,KAER,OAAO7F,EAAeX,EAAIS,QAAS5jB,EAA6B,UAOjE,SAASoM,KAER,OAAOpT,KAAsBjP,OAAS,EAMvC,SAASsiB,KAER,OAAOjN,KAAoBrV,OAAS,EAQrC,SAASwhC,KAER,OAAOrwB,KAAY3I,KAAKqB,IAEvB,IAAI43B,EAAa,GACjB,IAAK,IAAI3jC,EAAI,EAAGA,EAAI+L,EAAM43B,WAAWzhC,OAAQlC,IAAM,CAClD,IAAI4jC,EAAY73B,EAAM43B,WAAY3jC,GAClC2jC,EAAYC,EAAUpd,MAASod,EAAUnjC,MAE1C,OAAOkjC,CAAU,IAWnB,SAASnyB,KAER,OAAO6B,KAAYnR,OASpB,SAAS2hC,GAAU5oB,EAAGC,GAErB,IAAImE,EAAkBlO,KAAuB8J,GACzC3D,EAAiB+H,GAAmBA,EAAgB/e,iBAAkB,WAE1E,OAAIgX,GAAkBA,EAAepV,QAAuB,iBAANgZ,EAC9C5D,EAAiBA,EAAgB4D,QAAMlQ,EAGxCqU,EAeR,SAAS7Q,GAAoByM,EAAGC,GAE/B,IAAInP,EAAqB,iBAANkP,EAAiB4oB,GAAU5oB,EAAGC,GAAMD,EACvD,GAAIlP,EACH,OAAOA,EAAMQ,uBAcf,SAASkhB,KAER,IAAIhc,EAAUC,KAEd,MAAO,CACNyP,OAAQ1P,EAAQE,EAChByP,OAAQ3P,EAAQK,EAChBgyB,OAAQryB,EAAQvL,EAChB69B,OAAQ1f,KACR5D,SAAUA,GAASC,YAWrB,SAASgO,GAAU/C,GAElB,GAAqB,iBAAVA,EAAqB,CAC/B5f,GAAOkwB,EAAkBtQ,EAAMxK,QAAU8a,EAAkBtQ,EAAMvK,QAAU6a,EAAkBtQ,EAAMmY,SAEnG,IAAIE,EAAa/H,EAAkBtQ,EAAMoY,QACxCE,EAAehI,EAAkBtQ,EAAMlL,UAEd,kBAAfujB,GAA4BA,IAAe3f,MACrDc,GAAa6e,GAGc,kBAAjBC,GAA8BA,IAAiBxjB,GAASC,YAClED,GAASsB,OAAQkiB,IASpB,SAASniB,KAIR,GAFAnB,KAEIvK,IAAqC,IAArB3F,EAAO2pB,UAAsB,CAEhD,IAAIlb,EAAW9I,EAAahI,cAAe,qCAEvC81B,EAAoBhlB,EAAWA,EAAShT,aAAc,kBAAqB,KAC3Ei4B,EAAkB/tB,EAAazU,WAAayU,EAAazU,WAAWuK,aAAc,kBAAqB,KACvGk4B,EAAiBhuB,EAAalK,aAAc,kBAO5Cg4B,EACH9J,EAAYpmB,SAAUkwB,EAAmB,IAEjCE,EACRhK,EAAYpmB,SAAUowB,EAAgB,IAE9BD,EACR/J,EAAYpmB,SAAUmwB,EAAiB,KAGvC/J,EAAY3pB,EAAO2pB,UAOyC,IAAxDhkB,EAAa9V,iBAAkB,aAAc4B,QAChD+5B,EAAe7lB,EAAc,gBAAiB9P,SAASpG,IAClDA,EAAG2L,aAAc,kBAChBuuB,GAA4B,IAAdl6B,EAAG0Z,SAAkB1Z,EAAGmkC,aAAiBjK,IAC1DA,EAA4B,IAAdl6B,EAAG0Z,SAAkB1Z,EAAGmkC,aAAiB,UAaxDjK,GAAcqB,IAAoBpX,MAAe5D,GAASC,YAAiBugB,OAAiB3iB,GAAUG,kBAAkBG,OAAwB,IAAhBnO,EAAOupB,OAC1IuB,EAAmB5xB,YAAY,KACQ,mBAA3B8G,EAAO4pB,gBACjB5pB,EAAO4pB,kBAGPiK,KAEDxiB,IAAc,GACZsY,GACHoB,EAAqBlU,KAAKC,OAGvB2T,GACHA,EAAgBhD,YAAkC,IAAtBqD,IAU/B,SAAS5a,KAERjX,aAAc6xB,GACdA,GAAoB,EAIrB,SAAS6F,KAEJhH,IAAcqB,KACjBA,IAAkB,EAClBtzB,GAAc,CAAEzF,KAAM,oBACtBgH,aAAc6xB,GAEVL,GACHA,EAAgBhD,YAAY,IAM/B,SAASiJ,KAEJ/G,GAAaqB,KAChBA,IAAkB,EAClBtzB,GAAc,CAAEzF,KAAM,qBACtBof,MAKF,SAASyiB,IAAa3f,cAACA,GAAc,GAAO,IAE3CwW,EAAkB/R,0BAA2B,EAGzC5Y,EAAO8F,KACJkK,GAASC,YAAckE,IAAsC,IAArBtG,GAAUM,SAAsBH,KAAkBoG,MAC/F9Y,GAAOoV,EAAS,EAA6B,SAA1B1Q,EAAO8R,eAA4BnB,OAASpW,IAItDyV,GAASC,YAAckE,IAAsC,IAArBtG,GAAUK,SAAsBF,KAAkBoG,MACpG9Y,GAAOoV,EAAS,EAA6B,SAA1B1Q,EAAO8R,eAA4BnB,OAASpW,GAKjE,SAASw5B,IAAc5f,cAACA,GAAc,GAAO,IAE5CwW,EAAkB/R,0BAA2B,EAGzC5Y,EAAO8F,KACJkK,GAASC,YAAckE,IAAsC,IAArBtG,GAAUK,SAAsBF,KAAkBqG,OAC/F/Y,GAAOoV,EAAS,EAA6B,SAA1B1Q,EAAO8R,eAA4BnB,OAASpW,IAItDyV,GAASC,YAAckE,IAAsC,IAArBtG,GAAUM,SAAsBH,KAAkBqG,OACpG/Y,GAAOoV,EAAS,EAA6B,SAA1B1Q,EAAO8R,eAA4BnB,OAASpW,GAKjE,SAASy5B,IAAW7f,cAACA,GAAc,GAAO,KAGnCnE,GAASC,YAAckE,IAAsC,IAArBtG,GAAUK,SAAsBF,KAAkBsG,IAC/FhZ,GAAOoV,EAAQC,EAAS,GAK1B,SAASsjB,IAAa9f,cAACA,GAAc,GAAO,IAE3CwW,EAAkBhS,wBAAyB,GAGrC3I,GAASC,YAAckE,IAAsC,IAArBtG,GAAUM,SAAsBH,KAAkByG,MAC/FnZ,GAAOoV,EAAQC,EAAS,GAW1B,SAASujB,IAAa/f,cAACA,GAAc,GAAO,IAG3C,GAAIA,IAAsC,IAArBtG,GAAUK,OAC9B,GAAIF,KAAkBsG,GACrB0f,GAAW,CAAC7f,sBAER,CAEJ,IAAIqJ,EAWJ,GARCA,EADGxd,EAAO8F,IACM0lB,EAAeX,EAAIS,QAAS5jB,EAA6B,WAAY7U,MAGrE24B,EAAeX,EAAIS,QAAS5jB,EAA6B,SAAU7U,MAKhF2qB,GAAiBA,EAAcvtB,UAAUwV,SAAU,SAAY,CAClE,IAAIpE,EAAMmc,EAAc3tB,iBAAkB,WAAY4B,OAAS,QAAO8I,EAEtEe,GADQoV,EAAS,EACPrP,QAGVyyB,GAAa,CAAC3f,mBAUlB,SAAS0f,IAAa1f,cAACA,GAAc,GAAO,IAM3C,GAJAwW,EAAkB/R,0BAA2B,EAC7C+R,EAAkBhS,wBAAyB,EAGvCxE,IAAsC,IAArBtG,GAAUM,OAAmB,CAEjD,IAAIqK,EAASxK,KAKTwK,EAAO/D,MAAQ+D,EAAOnE,OAASrU,EAAOupB,MAAQ8G,OACjD7X,EAAO/D,MAAO,GAGX+D,EAAO/D,KACVwf,GAAa,CAAC9f,kBAENnU,EAAO8F,IACfguB,GAAa,CAAC3f,kBAGd4f,GAAc,CAAC5f,mBAiBlB,SAASnB,GAAa7T,GAEjBa,EAAOqV,oBACVsb,KAQF,SAASrD,GAAenuB,GAEvB,IAAIyF,EAAOzF,EAAMyF,KAGjB,GAAoB,iBAATA,GAA0C,MAArBA,EAAKpB,OAAQ,IAAkD,MAAnCoB,EAAKpB,OAAQoB,EAAKnT,OAAS,KACtFmT,EAAOgqB,KAAKuF,MAAOvvB,GAGfA,EAAKpL,QAAyC,mBAAxBmB,EAAOiK,EAAKpL,SAErC,IAA0D,IAAtDoO,EAA8B7T,KAAM6Q,EAAKpL,QAAqB,CAEjE,MAAMiU,EAAS9S,EAAOiK,EAAKpL,QAAQya,MAAOtZ,EAAQiK,EAAKwvB,MAIvD9F,GAAqB,WAAY,CAAE90B,OAAQoL,EAAKpL,OAAQiU,OAAQA,SAIhEuO,QAAQC,KAAM,eAAgBrX,EAAKpL,OAAQ,gDAa/C,SAASw0B,GAAiB7uB,GAEN,YAAf8qB,GAA4B,YAAYl2B,KAAMoL,EAAMvO,OAAO+b,YAC9Dsd,EAAa,OACbvyB,GAAc,CACbzF,KAAM,qBACN2S,KAAM,CAAE8L,SAAQC,SAAQ6M,gBAAe7X,mBAY1C,SAASooB,GAAiB5uB,GAEzB,MAAMk1B,EAAS7I,EAAcrsB,EAAMvO,OAAQ,gBAO3C,GAAIyjC,EAAS,CACZ,MAAMve,EAAOue,EAAO54B,aAAc,QAC5BuF,EAAUxO,GAAS8P,mBAAoBwT,GAEzC9U,IACHrG,EAAOW,MAAO0F,EAAQE,EAAGF,EAAQK,EAAGL,EAAQvL,GAC5C0J,EAAMqS,mBAWT,SAASsc,GAAgB3uB,GAExBvB,KASD,SAASqwB,GAAwB9uB,IAIR,IAApBvN,SAASod,QAAoBpd,SAASshB,gBAAkBthB,SAAS4xB,OAEzB,mBAAhC5xB,SAASshB,cAAcuT,MACjC70B,SAASshB,cAAcuT,OAExB70B,SAAS4xB,KAAKthB,SAUhB,SAASmrB,GAAoBluB,IAEdvN,SAAS0iC,mBAAqB1iC,SAAS2iC,2BACrC1J,EAAIS,UACnBnsB,EAAM+D,2BAGNhK,YAAY,KACXyB,EAAOiD,SACPjD,EAAOuH,MAAMA,OAAO,GAClB,IAWL,SAAS4sB,GAAsB3vB,GAE9B,GAAIA,EAAMq1B,eAAiBr1B,EAAMq1B,cAAcp5B,aAAc,QAAW,CACvE,IAAIoB,EAAM2C,EAAMq1B,cAAc/4B,aAAc,QACxCe,IACHuyB,GAAavyB,GACb2C,EAAMqS,mBAWT,SAASoc,GAAwBzuB,GAG5BqxB,OAAiC,IAAhBxwB,EAAOupB,MAC3BjuB,GAAO,EAAG,GACVo1B,MAGQ1F,GACR0F,KAIAC,KAWF,MAAM8D,GAAM,CACXjK,UAEAY,cACArrB,aACA9H,WAEA0M,QACA8sB,aACAiD,cAAe7mB,GAAUlJ,KAAK7J,KAAM+S,IAGpCvS,SACA8Y,KAAM0f,GACNzf,MAAO0f,GACPzf,GAAI0f,GACJvf,KAAMwf,GACN/lB,KAAMgmB,GACN/lB,KAAM0lB,GAGNC,gBAAcC,iBAAeC,cAAYC,gBAAcC,gBAAcL,gBAGrEc,iBAAkB9mB,GAAU0B,KAAKzU,KAAM+S,IACvC+mB,aAAc/mB,GAAUK,KAAKpT,KAAM+S,IACnCgnB,aAAchnB,GAAUM,KAAKrT,KAAM+S,IAGnCkb,MACAE,OAGAhqB,iBAAkB8pB,GAClB7pB,oBAAqB+pB,GAGrBrrB,UAGA4rB,WAGAxb,mBAGA8mB,mBAAoBjnB,GAAUG,gBAAgBlT,KAAM+S,IAGpD8E,cAGAoiB,eAAgB/kB,GAASsB,OAAOxW,KAAMkV,IAGtCglB,iBAAkB9J,GAAO5Z,OAAOxW,KAAMowB,IAGtCxW,eAGAY,mBAGAE,qBAGA+a,gBACAC,eACAH,uBACAjvB,mBACA0c,mBAGAlK,YACAb,iBACA/V,eAAgBinB,GAAM4C,qBAAqB/rB,KAAMmpB,IACjDgR,WAAYjlB,GAASC,SAASnV,KAAMkV,IACpC6C,UAAW3Q,GAAM2Q,UAAU/X,KAAMoH,IAEjClH,aAAckwB,GAAOjb,SAASnV,KAAMowB,IACpC9qB,WAAY+qB,GAAMlb,SAASnV,KAAMqwB,IAGjCoC,QAASA,IAAM7C,EAGfwK,UAAW9uB,GAAa/K,KAAKP,KAAMsL,IACnC+uB,YAAa/uB,GAAatI,OAAOhD,KAAMsL,IAGvC5H,qBAAsBA,IAAM4H,GAAa5H,qBAAsBmH,GAC/DlG,oBAAqBA,IAAM2G,GAAa3G,oBAAqBkG,EAAc,CAAEjG,eAAe,IAG5FqvB,eACAqG,YAAa3f,GAGboY,qBACAxB,wBACA30B,iBAGAslB,YACAiB,YAGAjF,eAGA/X,cAIAgyB,uBAGAnyB,qBAGAC,kBAGAqyB,YAGAiC,iBAAkBA,IAAM7X,EAGxBhd,gBAAiBA,IAAMmF,EAGvB5H,sBAGAmmB,cAAeD,GAAMC,cAAcppB,KAAMmpB,IAGzCrhB,aAGAlC,uBACAoG,qBAIAgN,uBACAC,qBAGA6E,yBAA0BA,IAAM+R,EAAkB/R,yBAClDD,uBAAwBA,IAAMgS,EAAkBhS,uBAEhDgF,4BAGA3L,cAAe2B,GAAS3B,cAAclX,KAAM6Y,IAC5CvB,iBAAkBuB,GAASvB,iBAAiBtX,KAAM6Y,IAGlDtB,WAAYsB,GAAStB,WAAWvX,KAAM6Y,IAGtCrB,yBAA0BqB,GAASrB,yBAAyBxX,KAAM6Y,IAElErD,wBACAoS,wBAGApY,SAAUA,IAAMF,EAGhBlP,UAAWA,IAAM8E,EAGjB1N,aAAck5B,EAGd8J,aAAc9iC,GAAS8O,QAAQxG,KAAMtI,IAGrCsN,iBAAkBA,IAAM4X,EACxBrZ,iBAAkBA,IAAMwsB,EAAI3R,OAC5B9D,mBAAoBA,IAAMyV,EAAIc,SAC9Bxb,sBAAuBA,IAAMwS,GAAYnyB,QAGzC+qB,eAAgBF,GAAQE,eAAezgB,KAAMugB,IAC7CoB,UAAWpB,GAAQoB,UAAU3hB,KAAMugB,IACnCqB,UAAWrB,GAAQqB,UAAU5hB,KAAMugB,IACnCka,WAAYla,GAAQsB,qBAAqB7hB,KAAMugB,KAiChD,OA5BAmQ,EAAa7wB,EAAQ,IACjB85B,GAGHrlB,kBACAC,iBAGAnN,SACAgpB,UACAxb,YACA1Q,YACAxM,YACAwd,YACAnC,aACA8U,eACAvc,gBACAjG,eAEA6S,eACAyC,gBACAhF,0BACAgT,uBACAtS,mBACAE,gBACAnB,qBAGMukB,EAER,KC57FI95B,EAAS66B,EAeTC,EAAmB,UAEvB96B,EAAOywB,WAAatxB,IAGnB3F,OAAOI,OAAQoG,EAAQ,IAAI66B,EAAM5jC,SAAS+L,cAAe,WAAa7D,IAGtE27B,EAAiBx7B,KAAKT,GAAUA,EAAQmB,KAEjCA,EAAOywB,cAUf,CAAE,YAAa,KAAM,MAAO,mBAAoB,sBAAuB,kBAAmBv1B,SAAS2D,IAClGmB,EAAOnB,GAAU,IAAK46B,KACrBqB,EAAiBt7B,MAAMu7B,GAAQA,EAAKl8B,GAAQxI,KAAM,QAASojC,IAAQ,CACnE,IAGFz5B,EAAO4yB,QAAU,KAAM,EAEvB5yB,EAAO6vB,QAAUA"}