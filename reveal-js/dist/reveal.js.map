{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/overlay.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\t\tthis.ensureMobileMediaPlaying = this.ensureMobileMediaPlaying.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted || this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element ) {\n\n\t\t\tconst isSpeakerNotesWindow = this.Reveal.isSpeakerNotes();\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// In the speaker view we only auto-play muted media\n\t\t\t\t\tif( isSpeakerNotesWindow && !el.muted ) return;\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\tel.addEventListener( 'canplay', this.ensureMobileMediaPlaying );\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Don't play iframe content in the speaker view since we can't\n\t\t\t// guarantee that it's muted\n\t\t\tif( !isSpeakerNotesWindow ) {\n\n\t\t\t\t// Normal iframes\n\t\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t\t} );\n\n\t\t\t\t// Lazy loading iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Ensure that an HTMLMediaElement is playing on mobile devices.\n\t *\n\t * This is a workaround for a bug in mobile Safari where\n\t * the media fails to display if many videos are started\n\t * at the same moment. When this happens, Mobile Safari\n\t * reports the video is playing, and the current time\n\t * advances, but nothing is visible.\n\t *\n\t * @param {Event} event\n\t */\n\tensureMobileMediaPlaying( event ) {\n\n\t\tconst el = event.target;\n\n\t\t// Ignore this check incompatible browsers\n\t\tif( typeof el.getVideoPlaybackQuality !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout( () => {\n\n\t\t\tconst playing = el.paused === false;\n\t\t\tconst totalFrames = el.getVideoPlaybackQuality().totalVideoFrames;\n\n\t\t\tif( playing && totalFrames === 0 ) {\n\t\t\t\tel.load();\n\t\t\t\tel.play();\n\t\t\t}\n\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\t// Don't restart if media is already playing\n\t\t\tif( event.target.paused || event.target.ended ) {\n\t\t\t\tevent.target.currentTime = 0;\n\t\t\t\tevent.target.play();\n\t\t\t}\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tel.removeEventListener( 'canplay', this.ensureMobileMediaPlaying );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = '.backgrounds>.slide-background';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear number\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = config.rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = config.rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// The previous background may refer to a DOM element that has\n\t\t// been removed after a presentation is synced & bgs are recreated\n\t\tif( this.previousBackground && !this.previousBackground.closest( 'body' ) ) {\n\t\t\tthis.previousBackground = null;\n\t\t}\n\n\t\tif( currentBackground && this.previousBackground ) {\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground.getAttribute( 'data-background-hash' );\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t\t\t// If multiple slides have the same background video, carry\n\t\t\t\t// the <video> element forward so that it plays continuously\n\t\t\t\t// across multiple slides\n\t\t\t\tconst currentVideo = currentBackground.querySelector( 'video' );\n\t\t\t\tconst previousVideo = this.previousBackground.querySelector( 'video' );\n\n\t\t\t\tif( currentVideo && previousVideo ) {\n\n\t\t\t\t\tconst currentVideoParent = currentVideo.parentNode;\n\t\t\t\t\tconst previousVideoParent = previousVideo.parentNode;\n\n\t\t\t\t\t// Swap the two videos\n\t\t\t\t\tpreviousVideoParent.appendChild( currentVideo );\n\t\t\t\t\tcurrentVideoParent.appendChild( previousVideo );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tconst backgroundChanged = currentBackground !== this.previousBackground;\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( backgroundChanged && this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( backgroundChanged && currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 10 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that;\n\t\t// 1. Both slides exist.\n\t\t// 2. Both slides are auto-animate targets with the same\n\t\t//    data-auto-animate-id value (including null if absent on both).\n\t\t// 3. data-auto-animate-restart isn't set on the physically latter\n\t\t//    slide (independent of slide direction).\n\t\tif( fromSlide && toSlide && fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR, HORIZONTAL_BACKGROUNDS_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\t\tconst horizontalBackgrounds = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_BACKGROUNDS_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v, isVertical ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// This transfers over the background of the vertical stack containing\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\n\t\t\t\t// background.\n\t\t\t\tif( isVertical && horizontalBackgrounds.length > h ) {\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\n\t\t\t\t\tconst pageBackground = window.getComputedStyle( slideBackground );\n\n\t\t\t\t\tif( pageBackground && pageBackground.background ) {\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\n\t\t\t\t\t}\n\t\t\t\t\telse if( presentationBackground ) {\n\t\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t\t}\n\t\t\t\t} else if( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v, true );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tthis.scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = this.scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -this.scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t\t// Ensure the last trigger extends to the end of the page, otherwise\n\t\t// rounding errors can cause the last trigger to end at 0.999999...\n\t\tthis.slideTriggers[this.slideTriggers.length - 1].range[1] = 1;\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scroll to the previous page.\n\t */\n\tprev() {\n\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scroll to the next page.\n\t */\n\tnext() {\n\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif( changedFragments.hidden.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif( changedFragments.shown.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmentshown',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 63, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191,112];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isOverlayOpen() && ![\"Escape\", \"f\", \"c\", \"b\", \".\"].includes(event.key) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// C\n\t\t\telse if( keyCode === 67 && this.Reveal.isOverlayOpen() ) {\n\t\t\t\tthis.Reveal.closeOverlay();\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( ( keyCode === 63 || keyCode === 191 ) && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\t// F1\n\t\t\telse if( keyCode === 112 ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t\n\t\t// Enter to exit overview mode\n\t\telse if (keyCode === 13 && this.Reveal.overview.isActive()) {\n\t\t\tthis.Reveal.overview.deactivate();\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll, enterFullscreen } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n * - .enter-fullscreen\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\t\tthis.onEnterFullscreen = this.onEnterFullscreen.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\t\tthis.controlsFullscreen = queryAll( revealElement, '.enter-fullscreen' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = (\n\t\t\tconfig.controls &&\n\t\t\t(config.controls !== 'speaker-only' || this.Reveal.isSpeakerNotes())\n\t\t) ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.addEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.removeEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\tconst isVerticalStack = this.Reveal.isVerticalSlide( currentSlide );\n\t\t\tconst hasVerticalSiblings = isVerticalStack &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement.querySelectorAll( ':scope > section' ).length > 1;\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( isVerticalStack && hasVerticalSiblings ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\tonEnterFullscreen( event ) {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst viewport = this.Reveal.getViewportElement();\n\n\t\tenterFullscreen( config.embedded ? viewport : viewport.parentElement );\n\n\t}\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' overlay elements used\n * to preview iframes, images & videos.\n */\nexport default class Overlay {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onSlidesClicked = this.onSlidesClicked.bind( this );\n\n\t\tthis.iframeTriggerSelector = null;\n\t\tthis.mediaTriggerSelector = '[data-preview-image], [data-preview-video]';\n\n\t\tthis.stateProps = ['previewIframe', 'previewImage', 'previewVideo', 'previewFit'];\n\t\tthis.state = {};\n\n\t}\n\n\tupdate() {\n\n\t\t// Enable link previews globally\n\t\tif( this.Reveal.getConfig().previewLinks ) {\n\t\t\tthis.iframeTriggerSelector = 'a[href]:not([data-preview-link=false]), [data-preview-link]:not(a):not([data-preview-link=false])';\n\t\t}\n\t\t// Enable link previews for individual elements\n\t\telse {\n\t\t\tthis.iframeTriggerSelector = '[data-preview-link]:not([data-preview-link=false])';\n\t\t}\n\n\t\tconst hasLinkPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.iframeTriggerSelector ).length > 0;\n\t\tconst hasMediaPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.mediaTriggerSelector ).length > 0;\n\n\t\t// Only add the listener when there are previewable elements in the slides\n\t\tif( hasLinkPreviews || hasMediaPreviews ) {\n\t\t\tthis.Reveal.getSlidesElement().addEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getSlidesElement().removeEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\n\t}\n\n\tcreateOverlay( className ) {\n\n\t\tthis.dom = document.createElement( 'div' );\n\t\tthis.dom.classList.add( 'r-overlay' );\n\t\tthis.dom.classList.add( className );\n\n\t\tthis.viewport = document.createElement( 'div' );\n\t\tthis.viewport.classList.add( 'r-overlay-viewport' );\n\n\t\tthis.dom.appendChild( this.viewport );\n\t\tthis.Reveal.getRevealElement().appendChild( this.dom );\n\n\t}\n\n\t/**\n\t * Opens a lightbox that previews the target URL.\n\t *\n\t * @param {string} url - url for lightbox iframe src\n\t */\n\tpreviewIframe( url ) {\n\n\t\tthis.close();\n\n\t\tthis.state = { previewIframe: url };\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<a class=\"r-overlay-button r-overlay-external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\"><span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"r-overlay-content-inner\">\n\t\t\t\t\t<span class=\"r-overlay-error x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tthis.dom.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-external' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t}, false );\n\n\t\tthis.Reveal.dispatchEvent({ type: 'previewiframe', data: { url } });\n\n\t}\n\n\t/**\n\t * Opens a lightbox window that provides a larger view of the\n\t * given image/video.\n\t *\n\t * @param {string} url - url to the image/video to preview\n\t * @param {image|video} mediaType\n\t * @param {string} [fitMode] - the fit mode to use for the preview\n\t */\n\tpreviewMedia( url, mediaType, fitMode ) {\n\n\t\tif( mediaType !== 'image' && mediaType !== 'video' ) {\n\t\t\tconsole.warn( 'Please specify a valid media type to preview (image|video)' );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.close();\n\n\t\tfitMode = fitMode || 'scale-down';\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\t\tthis.dom.dataset.previewFit = fitMode;\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\"></div>`;\n\n\t\tconst contentElement = this.dom.querySelector( '.r-overlay-content' );\n\n\t\tif( mediaType === 'image' ) {\n\n\t\t\tthis.state = { previewImage: url, previewFit: fitMode }\n\n\t\t\tconst img = document.createElement( 'img', {} );\n\t\t\timg.src = url;\n\t\t\tcontentElement.appendChild( img );\n\n\t\t\timg.addEventListener( 'load', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\timg.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load image.</span>`\n\t\t\t}, false );\n\n\t\t\t// Hide image overlays when clicking outside the overlay\n\t\t\tthis.dom.style.cursor = 'zoom-out';\n\t\t\tthis.dom.addEventListener( 'click', ( event ) => {\n\t\t\t\tthis.close();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewimage', data: { url } });\n\n\t\t}\n\t\telse if( mediaType === 'video' ) {\n\n\t\t\tthis.state = { previewVideo: url, previewFit: fitMode }\n\n\t\t\tconst video = document.createElement( 'video' );\n\t\t\tvideo.autoplay = this.dom.dataset.previewAutoplay === 'false' ? false : true;\n\t\t\tvideo.controls = this.dom.dataset.previewControls === 'false' ? false : true;\n\t\t\tvideo.loop = this.dom.dataset.previewLoop === 'true' ? true : false;\n\t\t\tvideo.muted = this.dom.dataset.previewMuted === 'true' ? true : false;\n\t\t\tvideo.playsInline = true;\n\t\t\tvideo.src = url;\n\t\t\tcontentElement.appendChild( video );\n\n\t\t\tvideo.addEventListener( 'loadeddata', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\tvideo.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load video.</span>`;\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewvideo', data: { url } });\n\n\t\t}\n\t\telse {\n\t\t\tthrow new Error( 'Please specify a valid media type to preview' );\n\t\t}\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', ( event ) => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t}\n\n\tpreviewImage( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'image', fitMode );\n\n\t}\n\n\tpreviewVideo( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'video', fitMode );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\ttoggleHelp( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.showHelp() : this.close();\n\t\t}\n\t\telse {\n\t\t\tif( this.dom ) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tshowHelp() {\n\n\t\tif( this.Reveal.getConfig().help ) {\n\n\t\t\tthis.close();\n\n\t\t\tthis.createOverlay( 'r-overlay-help' );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p>';\n\n\t\t\tlet shortcuts = this.Reveal.keyboard.getShortcuts(),\n\t\t\t\tbindings = this.Reveal.keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tthis.viewport.innerHTML = `\n\t\t\t\t<header class=\"r-overlay-header\">\n\t\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t\t<div class=\"r-overlay-help-content\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\t\tthis.close();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'showhelp' });\n\n\t\t}\n\n\t}\n\n\tisOpen() {\n\n\t\treturn !!this.dom;\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tclose() {\n\n\t\tif( this.dom ) {\n\t\t\tthis.dom.remove();\n\t\t\tthis.dom = null;\n\n\t\t\tthis.state = {};\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'closeoverlay' });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetState() {\n\n\t\treturn this.state;\n\n\t}\n\n\tsetState( state ) {\n\n\t\t// Ignore the incoming state if none of the preview related\n\t\t// props have changed\n\t\tif( this.stateProps.every( key => this.state[ key ] === state[ key ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( state.previewIframe ) {\n\t\t\tthis.previewIframe( state.previewIframe );\n\t\t}\n\t\telse if( state.previewImage ) {\n\t\t\tthis.previewImage( state.previewImage, state.previewFit );\n\t\t}\n\t\telse if( state.previewVideo ) {\n\t\t\tthis.previewVideo( state.previewVideo, state.previewFit );\n\t\t}\n\t\telse {\n\t\t\tthis.close();\n\t\t}\n\n\t}\n\n\tonSlidesClicked( event ) {\n\n\t\tconst target = event.target;\n\n\t\tconst linkTarget = target.closest( this.iframeTriggerSelector );\n\t\tconst mediaTarget = target.closest( this.mediaTriggerSelector );\n\n\t\t// Was an iframe lightbox trigger clicked?\n\t\tif( linkTarget ) {\n\t\t\tif( event.metaKey || event.shiftKey || event.altKey ) {\n\t\t\t\t// Let the browser handle meta keys naturally so users can cmd+click\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet url = linkTarget.getAttribute( 'href' ) || linkTarget.getAttribute( 'data-preview-link' );\n\t\t\tif( url ) {\n\t\t\t\tthis.previewIframe( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\t// Was a media lightbox trigger clicked?\n\t\telse if( mediaTarget ) {\n\t\t\tif( mediaTarget.hasAttribute( 'data-preview-image' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewImage || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewImage( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if( mediaTarget.hasAttribute( 'data-preview-video' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewVideo || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( !url ) {\n\t\t\t\t\tlet source = mediaTarget.querySelector( 'source' );\n\t\t\t\t\tif( source ) {\n\t\t\t\t\t\turl = source.getAttribute( 'src' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewVideo( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.close();\n\n\t}\n\n}","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video[controls], audio[controls]' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows.\n\t// - true: Display controls on all screens\n\t// - false: Hide controls on all screens\n\t// - \"speaker-only\": Only display controls in the speaker view\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when returning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Overlay from './controllers/overlay.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.2.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if initialize() has been invoked for this reveal instance\n\t\tinitialized = false,\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\toverlay = new Overlay( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\tif( initialized ) throw 'Reveal.js has already been initialized.';\n\n\t\tinitialized = true;\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\t// Don't proceed if this instance has been destroyed\n\t\tif( initialized === false ) return;\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent.trim();\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\t// Capture alt text from img and video elements\n\t\t\t\tif( node.tagName === 'IMG' || node.tagName === 'VIDEO' ) {\n\t\t\t\t\tlet altText = node.getAttribute( 'alt' );\n\t\t\t\t\tif( altText ) {\n\t\t\t\t\t\ttext += ensurePunctuation( altText );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t\t// Add period after block-level text elements to improve\n\t\t\t\t// screen reader experience\n\t\t\t\tconst textElements = ['P', 'DIV', 'UL', 'OL', 'LI', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'BLOCKQUOTE'];\n\t\t\t\tif( textElements.includes( node.tagName ) && text.trim() !== '' ) {\n\t\t\t\t\ttext = ensurePunctuation( text );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * Ensures text ends with proper punctuation by adding a period\n\t * if it doesn't already end with punctuation.\n\t */\n\tfunction ensurePunctuation( text ) {\n\n\t\tconst trimmedText = text.trim();\n\n\t\tif( trimmedText === '' ) {\n\t\t\treturn text;\n\t\t}\n\n\t\treturn !/[.!?]$/.test(trimmedText) ? trimmedText + '.' : trimmedText;\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tinitialized = false;\n\n\t\t// There's nothing to destroy if this instance hasn't finished\n\t\t// initializing\n\t\tif( ready === false ) return;\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\toverlay.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckResponsiveScrollView();\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Responsively activates the scroll mode when we reach the configured\n\t * activation width.\n\t */\n\tfunction checkResponsiveScrollView() {\n\n\t\t// Only proceed if...\n\t\t// 1. The DOM is ready\n\t\t// 2. Layouts aren't disabled via config\n\t\t// 3. We're not currently printing\n\t\t// 4. There is a scrollActivationWidth set\n\t\t// 5. The deck isn't configured to always use the scroll view\n\t\tif(\n\t\t\tdom.wrapper &&\n\t\t\t!config.disableLayout &&\n\t\t\t!printView.isActive() &&\n\t\t\ttypeof config.scrollActivationWidth === 'number' &&\n\t\t\tconfig.view !== 'scroll'\n\t\t) {\n\t\t\tconst size = getComputedSlideSize();\n\n\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\tif( !scrollView.isActive() ) {\n\t\t\t\t\tbackgrounds.create();\n\t\t\t\t\tscrollView.activate()\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presentation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Indicate when we're on a vertical slide\n\t\trevealElement.classList.toggle( 'is-vertical-slide', currentVerticalSlides.length > 1 );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\toverlay.update();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\tconst isOverview = overview.isActive();\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = isOverview ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = isOverview ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = isOverview ? 0 : getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive(),\n\t\t\t...overlay.getState()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\n\t\t\toverlay.setState( state );\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse if( config.rtl ) {\n\t\t\t\t\tnavigateRight({skipFragments});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp: overlay.toggleHelp.bind( overlay ),\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisOverlayOpen: overlay.isOpen.bind( overlay ),\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Start/stop all media inside of the current slide\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Lightbox previews\n\t\tpreviewIframe: overlay.previewIframe.bind( overlay ),\n\t\tpreviewImage: overlay.previewImage.bind( overlay ),\n\t\tpreviewVideo: overlay.previewVideo.bind( overlay ),\n\n\t\tshowPreview: overlay.previewIframe.bind( overlay ), // deprecated in favor of showIframeLightbox\n\t\thidePreview: overlay.close.bind( overlay ),\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tkeyboard,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay: overlay.close.bind( overlay ),\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","enterFullscreen","requestMethod","document","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","apply","createStyleSheet","tag","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","ensureMobileMediaPlaying","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","video","isSpeakerNotes","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","isSpeakerNotesWindow","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","addEventListener","catch","controls","removeEventListener","event","getVideoPlaybackQuality","playing","paused","totalFrames","totalVideoFrames","isAttachedToDOM","isVisible","ended","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","previousBackgroundHash","currentBackgroundHash","currentVideo","previousVideo","currentVideoParent","backgroundChanged","slideContent","currentBackgroundContent","backgroundImageURL","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","page","slideBackground","pageBackground","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","prev","next","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isOverlayOpen","includes","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","togglePause","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","closeOverlay","toggleHelp","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","onEnterFullscreen","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsFullscreen","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","hasVerticalSiblings","parentElement","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","viewport","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Overlay","onSlidesClicked","iframeTriggerSelector","mediaTriggerSelector","stateProps","previewLinks","hasLinkPreviews","hasMediaPreviews","createOverlay","dom","previewIframe","close","previewMedia","mediaType","fitMode","previewFit","previewImage","img","previewVideo","previewAutoplay","previewControls","loop","previewLoop","previewMuted","playsInline","showHelp","help","html","isOpen","every","linkTarget","mediaTarget","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","notesElements","Playback","progressCheck","diameter","diameter2","thickness","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","shuffle","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","initialized","ready","navigationHistory","slidesTransform","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","overlay","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","altText","ensurePunctuation","child","trimmedText","isReady","numberOfSlides","resume","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","isOverview","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","loadSlide","unloadSlide","showPreview","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}